import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,a as n,b as p,d as t,e as s,r as l}from"./app.6a2d513d.js";const i={},u=t(`<h1 id="\u4E09\u3001\u65E0\u9501\u548C\u4E0D\u53EF\u53D8\u548C\u5DE5\u5177" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u65E0\u9501\u548C\u4E0D\u53EF\u53D8\u548C\u5DE5\u5177" aria-hidden="true">#</a> \u4E09\u3001\u65E0\u9501\u548C\u4E0D\u53EF\u53D8\u548C\u5DE5\u5177</h1><h2 id="_6-\u5171\u4EAB\u6A21\u578B\u4E4B\u65E0\u9501" tabindex="-1"><a class="header-anchor" href="#_6-\u5171\u4EAB\u6A21\u578B\u4E4B\u65E0\u9501" aria-hidden="true">#</a> 6.\u5171\u4EAB\u6A21\u578B\u4E4B\u65E0\u9501</h2><p>\u7BA1\u7A0B\u5373monitor\u662F\u963B\u585E\u5F0F\u7684\u60B2\u89C2\u9501\u5B9E\u73B0\u5E76\u53D1\u63A7\u5236\uFF0C\u8FD9\u7AE0\u6211\u4EEC\u5C06\u901A\u8FC7\u975E\u963B\u585E\u5F0F\u7684\u4E50\u89C2\u9501\u7684\u6765\u5B9E\u73B0\u5E76\u53D1\u63A7\u5236</p><h3 id="_6-1-\u95EE\u9898\u63D0\u51FA" tabindex="-1"><a class="header-anchor" href="#_6-1-\u95EE\u9898\u63D0\u51FA" aria-hidden="true">#</a> 6.1 \u95EE\u9898\u63D0\u51FA</h3><p>\u6709\u5982\u4E0B\u9700\u6C42\uFF0C\u4FDD\u8BC1account.withdraw\u53D6\u6B3E\u65B9\u6CD5\u7684\u7EBF\u7A0B\u5B89\u5168</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test5</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Account</span><span class="token punctuation">.</span><span class="token function">demo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AccountUnsafe</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">AccountUnsafe</span> <span class="token keyword">implements</span> <span class="token class-name">Account</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Integer</span> balance<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AccountUnsafe</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> balance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u901A\u8FC7\u8FD9\u91CC\u52A0\u9501\u5C31\u53EF\u4EE5\u5B9E\u73B0\u7EBF\u7A0B\u5B89\u5168\uFF0C\u4E0D\u52A0\u5C31\u4F1A\u5BFC\u81F4\u7ED3\u679C\u5F02\u5E38</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">-=</span> amount<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">interface</span> <span class="token class-name">Account</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u4F59\u989D</span>
    <span class="token class-name">Integer</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u53D6\u6B3E</span>
    <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u65B9\u6CD5\u5185\u4F1A\u542F\u52A8 1000 \u4E2A\u7EBF\u7A0B\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u505A -10 \u5143 \u7684\u64CD\u4F5C
     * \u5982\u679C\u521D\u59CB\u4F59\u989D\u4E3A 10000 \u90A3\u4E48\u6B63\u786E\u7684\u7ED3\u679C\u5E94\u5F53\u662F 0
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Thread</span><span class="token punctuation">&gt;</span></span> ts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                account<span class="token punctuation">.</span><span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token operator">::</span><span class="token function">start</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        ts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot; cost: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000_000</span> <span class="token operator">+</span> <span class="token string">&quot; ms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C</p><div class="language-java] ext-java] line-numbers-mode"><pre class="language-java]"><code>0 cost: 59 ms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="\u89E3\u51B3\u601D\u8DEF-\u65E0\u9501" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u601D\u8DEF-\u65E0\u9501" aria-hidden="true">#</a> \u89E3\u51B3\u601D\u8DEF-\u65E0\u9501</h4><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u53EF\u4EE5\u4F7F\u7528synchronized\u52A0\u9501\u64CD\u4F5C\u6765\u5B9E\u73B0\u7EBF\u7A0B\u5B89\u5168\uFF0C\u4F46\u662Fsynchronized\u52A0\u9501\u64CD\u4F5C\u592A\u8017\u8D39\u8D44\u6E90\uFF0C\u8FD9\u91CC\u6211\u4EEC\u4F7F\u7528\u65E0\u9501\u6765\u89E3\u51B3\u6B64\u95EE\u9898\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">AccountSafe</span> <span class="token keyword">implements</span> <span class="token class-name">Account</span><span class="token punctuation">{</span>

    <span class="token class-name">AtomicInteger</span> balance<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token class-name">AccountSafe</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> balance<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span>balance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> balance<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6838\u5FC3\u4EE3\u7801</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u8BFB\u53D6\u6700\u65B0\u7684\u4F59\u989D</span>
            <span class="token keyword">int</span> pre <span class="token operator">=</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u4E0B\u6B21\u7684\u4F59\u989D</span>
            <span class="token keyword">int</span> next <span class="token operator">=</span> pre <span class="token operator">-</span> amount<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>balance<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u53EF\u4EE5\u7B80\u5316\u4E3A\u4E0B\u9762\u7684\u65B9\u6CD5</span>
        <span class="token comment">// balance.addAndGet(-1 * amount);</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestAccount</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Account</span> account <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountUnsafe</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Account</span><span class="token punctuation">.</span><span class="token function">demo</span><span class="token punctuation">(</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Account</span> account1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountCas</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Account</span><span class="token punctuation">.</span><span class="token function">demo</span><span class="token punctuation">(</span>account1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">0</span> cost<span class="token operator">:</span> <span class="token number">60</span> ms
<span class="token number">0</span> cost<span class="token operator">:</span> <span class="token number">44</span> ms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-cas-\u4E0E-volatile" tabindex="-1"><a class="header-anchor" href="#_6-2-cas-\u4E0E-volatile" aria-hidden="true">#</a> 6.2 CAS \u4E0E volatile</h3><h4 id="cas" tabindex="-1"><a class="header-anchor" href="#cas" aria-hidden="true">#</a> cas</h4><p>\u524D\u9762\u770B\u5230\u7684AtomicInteger\u7684\u89E3\u51B3\u65B9\u6CD5\uFF0C\u5185\u90E8\u5E76\u6CA1\u6709\u7528\u9501\u6765\u4FDD\u62A4\u5171\u4EAB\u53D8\u91CF\u7684\u7EBF\u7A0B\u5B89\u5168\u3002\u90A3\u4E48\u5B83\u662F\u5982\u4F55\u5B9E\u73B0\u7684\u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6838\u5FC3\u4EE3\u7801</span>
        <span class="token comment">// \u9700\u8981\u4E0D\u65AD\u5C1D\u8BD5\uFF0C\u76F4\u5230\u6210\u529F\u4E3A\u6B62</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u6BD4\u5982\u62FF\u5230\u4E86\u65E7\u503C 1000</span>
            <span class="token keyword">int</span> pre <span class="token operator">=</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5728\u8FD9\u4E2A\u57FA\u7840\u4E0A 1000-10 = 990</span>
            <span class="token keyword">int</span> next <span class="token operator">=</span> pre <span class="token operator">-</span> amount<span class="token punctuation">;</span>
            <span class="token comment">/*
             compareAndSet \u6B63\u662F\u505A\u8FD9\u4E2A\u68C0\u67E5\uFF0C\u5728 set \u524D\uFF0C\u5148\u6BD4\u8F83 prev \u4E0E\u5F53\u524D\u503C
             - \u4E0D\u4E00\u81F4\u4E86\uFF0Cnext \u4F5C\u5E9F\uFF0C\u8FD4\u56DE false \u8868\u793A\u5931\u8D25
             \u6BD4\u5982\uFF0C\u522B\u7684\u7EBF\u7A0B\u5DF2\u7ECF\u505A\u4E86\u51CF\u6CD5\uFF0C\u5F53\u524D\u503C\u5DF2\u7ECF\u88AB\u51CF\u6210\u4E86 990
             \u90A3\u4E48\u672C\u7EBF\u7A0B\u7684\u8FD9\u6B21 990 \u5C31\u4F5C\u5E9F\u4E86\uFF0C\u8FDB\u5165 while \u4E0B\u6B21\u5FAA\u73AF\u91CD\u8BD5
             - \u4E00\u81F4\uFF0C\u4EE5 next \u8BBE\u7F6E\u4E3A\u65B0\u503C\uFF0C\u8FD4\u56DE true \u8868\u793A\u6210\u529F
			 */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>atomicInteger<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u7684\u5173\u952E\u662F compareAndSet\uFF0C\u5B83\u7684\u7B80\u79F0\u5C31\u662F CAS \uFF08\u4E5F\u6709 Compare And Swap \u7684\u8BF4\u6CD5\uFF09\uFF0C\u5B83\u5FC5\u987B\u662F\u539F\u5B50\u64CD\u4F5C\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209121605670.png" alt="1594776811158"></p><blockquote><ul><li>\u5176\u5B9E CAS \u7684\u5E95\u5C42\u662F lock cmpxchg \u6307\u4EE4\uFF08X86 \u67B6\u6784\uFF09\uFF0C\u5728\u5355\u6838 CPU \u548C\u591A\u6838 CPU \u4E0B\u90FD\u80FD\u591F\u4FDD\u8BC1\u3010\u6BD4\u8F83-\u4EA4\u6362\u3011\u7684\u539F\u5B50\u6027</li><li>\u5728\u591A\u6838\u72B6\u6001\u4E0B\uFF0C\u67D0\u4E2A\u6838\u6267\u884C\u5230\u5E26 lock \u7684\u6307\u4EE4\u65F6\uFF0CCPU \u4F1A\u8BA9\u603B\u7EBF\u9501\u4F4F\uFF0C\u5F53\u8FD9\u4E2A\u6838\u628A\u6B64\u6307\u4EE4\u6267\u884C\u5B8C\u6BD5\uFF0C\u518D\u5F00\u542F\u603B\u7EBF\u3002\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\u4E0D\u4F1A\u88AB\u7EBF\u7A0B\u7684\u8C03\u5EA6\u673A\u5236\u6240\u6253\u65AD\uFF0C\u4FDD\u8BC1\u4E86\u591A\u4E2A\u7EBF\u7A0B\u5BF9\u5185\u5B58\u64CD\u4F5C\u7684\u51C6\u786E\u6027\uFF0C\u662F\u539F\u5B50\u7684\u3002</li></ul></blockquote><h4 id="volatile" tabindex="-1"><a class="header-anchor" href="#volatile" aria-hidden="true">#</a> volatile</h4><p>\u5728\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684AtomicInteger\uFF0C\u4FDD\u5B58\u503C\u7684value\u5C5E\u6027\u4F7F\u7528\u4E86 <code>volatile</code> \u3002\u83B7\u53D6\u5171\u4EAB\u53D8\u91CF\u65F6\uFF0C\u4E3A\u4E86\u4FDD\u8BC1\u8BE5\u53D8\u91CF\u7684\u53EF\u89C1\u6027\uFF0C\u9700\u8981\u4F7F\u7528 volatile \u4FEE\u9970\u3002</p><p>\u5B83\u53EF\u4EE5\u7528\u6765\u4FEE\u9970 <strong>\u6210\u5458\u53D8\u91CF\u548C\u9759\u6001\u6210\u5458\u53D8\u91CF</strong>\uFF0C\u4ED6\u53EF\u4EE5\u907F\u514D\u7EBF\u7A0B\u4ECE\u81EA\u5DF1\u7684\u5DE5\u4F5C\u7F13\u5B58\u4E2D\u67E5\u627E\u53D8\u91CF\u7684\u503C\uFF0C\u5FC5\u987B\u5230\u4E3B\u5B58\u4E2D\u83B7\u53D6\u5B83\u7684\u503C\uFF0C\u7EBF\u7A0B\u64CD\u4F5C volatile \u53D8\u91CF\u90FD\u662F\u76F4\u63A5\u64CD\u4F5C\u4E3B\u5B58\u3002\u5373\u4E00\u4E2A\u7EBF\u7A0B\u5BF9 volatile \u53D8\u91CF\u7684\u4FEE\u6539\uFF0C\u5BF9\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u53EF\u89C1\u3002</p><blockquote><p>volatile \u4EC5\u4EC5\u4FDD\u8BC1\u4E86\u5171\u4EAB\u53D8\u91CF\u7684\u53EF\u89C1\u6027\uFF0C\u8BA9\u5176\u5B83\u7EBF\u7A0B\u80FD\u591F\u770B\u5230\u6700\u65B0\u503C\uFF0C\u4F46\u4E0D\u80FD\u89E3\u51B3\u6307\u4EE4\u4EA4\u9519\u95EE\u9898\uFF08\u4E0D\u80FD\u4FDD\u8BC1\u539F\u5B50\u6027\uFF09</p></blockquote><p><strong>CAS \u5FC5\u987B\u501F\u52A9 volatile \u624D\u80FD\u8BFB\u53D6\u5230\u5171\u4EAB\u53D8\u91CF\u7684\u6700\u65B0\u503C\u6765\u5B9E\u73B0\u3010\u6BD4\u8F83\u5E76\u4EA4\u6362\u3011\u7684\u6548\u679C</strong></p><h4 id="\u4E3A\u4EC0\u4E48\u65E0\u9501\u6548\u7387\u9AD8" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u65E0\u9501\u6548\u7387\u9AD8" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u65E0\u9501\u6548\u7387\u9AD8</h4><ul><li>\u65E0\u9501\u60C5\u51B5\u4E0B\uFF0C\u5373\u4F7F\u91CD\u8BD5\u5931\u8D25\uFF0C\u7EBF\u7A0B\u59CB\u7EC8\u5728\u9AD8\u901F\u8FD0\u884C\uFF0C\u6CA1\u6709\u505C\u6B47\uFF0C\u800C synchronized \u4F1A\u8BA9\u7EBF\u7A0B\u5728\u6CA1\u6709\u83B7\u5F97\u9501\u7684\u65F6\u5019\uFF0C<strong>\u53D1\u751F\u4E0A\u4E0B\u6587\u5207\u6362\uFF0C\u8FDB\u5165\u963B\u585E(\u5F00\u9500\u5927)</strong>\u3002</li><li>\u6253\u4E2A\u6BD4\u55BB\uFF1A\u7EBF\u7A0B\u5C31\u597D\u50CF\u9AD8\u901F\u8DD1\u9053\u4E0A\u7684\u8D5B\u8F66\uFF0C\u9AD8\u901F\u8FD0\u884C\u65F6\uFF0C\u901F\u5EA6\u8D85\u5FEB\uFF0C\u4E00\u65E6\u53D1\u751F\u4E0A\u4E0B\u6587\u5207\u6362\uFF0C\u5C31\u597D\u6BD4\u8D5B\u8F66\u8981\u51CF\u901F\u3001\u7184\u706B\uFF0C\u7B49\u88AB\u5524\u9192\u53C8\u5F97\u91CD\u65B0\u6253\u706B\u3001\u542F\u52A8\u3001\u52A0\u901F... \u6062\u590D\u5230\u9AD8\u901F\u8FD0\u884C\uFF0C\u4EE3\u4EF7\u6BD4\u8F83\u5927</li><li>\u4F46\u65E0\u9501\u60C5\u51B5\u4E0B\uFF0C\u56E0\u4E3A\u7EBF\u7A0B\u8981\u4FDD\u6301\u8FD0\u884C\uFF0C\u9700\u8981\u989D\u5916 CPU \u7684\u652F\u6301\uFF0CCPU \u5728\u8FD9\u91CC\u5C31\u597D\u6BD4\u9AD8\u901F\u8DD1\u9053\uFF0C\u6CA1\u6709\u989D\u5916\u7684\u8DD1\u9053\uFF0C\u7EBF\u7A0B\u60F3\u9AD8\u901F\u8FD0\u884C\u4E5F\u65E0\u4ECE\u8C08\u8D77\uFF0C\u867D\u7136\u4E0D\u4F1A\u8FDB\u5165\u963B\u585E\uFF0C\u4F46\u7531\u4E8E\u6CA1\u6709\u5206\u5230\u65F6\u95F4\u7247\uFF0C\u4ECD\u7136\u4F1A\u8FDB\u5165\u53EF\u8FD0\u884C\u72B6\u6001\uFF0C\u8FD8\u662F\u4F1A\u5BFC\u81F4\u4E0A\u4E0B\u6587\u5207\u6362\u3002</li></ul><h4 id="cas-\u7684\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#cas-\u7684\u7279\u70B9" aria-hidden="true">#</a> CAS \u7684\u7279\u70B9</h4><p>\u7ED3\u5408 CAS \u548C volatile \u53EF\u4EE5\u5B9E\u73B0\u65E0\u9501\u5E76\u53D1\uFF0C\u9002\u7528\u4E8E <strong>\u7EBF\u7A0B\u6570\u5C11\u3001\u591A\u6838 CPU</strong> \u7684\u573A\u666F\u4E0B\u3002</p><ol><li>CAS \u662F\u57FA\u4E8E <strong>\u4E50\u89C2\u9501</strong> \u7684\u601D\u60F3\uFF1A\u6700\u4E50\u89C2\u7684\u4F30\u8BA1\uFF0C\u4E0D\u6015\u522B\u7684\u7EBF\u7A0B\u6765\u4FEE\u6539\u5171\u4EAB\u53D8\u91CF\uFF0C\u5C31\u7B97\u6539\u4E86\u4E5F\u6CA1\u5173\u7CFB\uFF0C\u6211\u5403\u4E8F\u70B9\u518D\u91CD\u8BD5\u5457\u3002</li><li>synchronized \u662F\u57FA\u4E8E\u60B2\u89C2\u9501\u7684\u601D\u60F3\uFF1A\u6700\u60B2\u89C2\u7684\u4F30\u8BA1\uFF0C\u5F97\u9632\u7740\u5176\u5B83\u7EBF\u7A0B\u6765\u4FEE\u6539\u5171\u4EAB\u53D8\u91CF\uFF0C\u6211\u4E0A\u4E86\u9501\u4F60\u4EEC\u90FD\u522B\u60F3\u6539\uFF0C\u6211\u6539\u5B8C\u4E86\u89E3\u5F00\u9501\uFF0C\u4F60\u4EEC\u624D\u6709\u673A\u4F1A\u3002</li><li>CAS \u4F53\u73B0\u7684\u662F <strong>\u65E0\u9501\u5E76\u53D1\u3001\u65E0\u963B\u585E\u5E76\u53D1</strong>\uFF0C\u8BF7\u4ED4\u7EC6\u4F53\u4F1A\u8FD9\u4E24\u53E5\u8BDD\u7684\u610F\u601D <ol><li>\u56E0\u4E3A\u6CA1\u6709\u4F7F\u7528 synchronized\uFF0C\u6240\u4EE5\u7EBF\u7A0B\u4E0D\u4F1A\u9677\u5165\u963B\u585E\uFF0C\u8FD9\u662F\u6548\u7387\u63D0\u5347\u7684\u56E0\u7D20\u4E4B\u4E00</li><li>\u4F46\u5982\u679C\u7ADE\u4E89\u6FC0\u70C8(\u5199\u64CD\u4F5C\u591A)\uFF0C\u53EF\u4EE5\u60F3\u5230\u91CD\u8BD5\u5FC5\u7136\u9891\u7E41\u53D1\u751F\uFF0C\u53CD\u800C\u6548\u7387\u4F1A\u53D7\u5F71\u54CD</li></ol></li></ol><h3 id="_6-3-\u539F\u5B50\u6574\u6570" tabindex="-1"><a class="header-anchor" href="#_6-3-\u539F\u5B50\u6574\u6570" aria-hidden="true">#</a> 6.3 \u539F\u5B50\u6574\u6570</h3><p>java.util.concurrent.atomic\u5E76\u53D1\u5305\u63D0\u4F9B\u4E86\u4E00\u4E9B\u5E76\u53D1\u5DE5\u5177\u7C7B\uFF0C\u8FD9\u91CC\u628A\u5B83\u5206\u6210\u4E94\u7C7B\uFF1A</p><ol><li><p>\u4F7F\u7528\u539F\u5B50\u7684\u65B9\u5F0F\u66F4\u65B0\u57FA\u672C\u7C7B\u578B</p><ul><li>AtomicInteger\uFF1A\u6574\u578B\u539F\u5B50\u7C7B</li><li>AtomicLong\uFF1A\u957F\u6574\u578B\u539F\u5B50\u7C7B</li><li>AtomicBoolean \uFF1A\u5E03\u5C14\u578B\u539F\u5B50\u7C7B</li></ul><p>\u4E0A\u9762\u4E09\u4E2A\u7C7B\u63D0\u4F9B\u7684\u65B9\u6CD5\u51E0\u4E4E\u76F8\u540C\uFF0C\u6240\u4EE5\u6211\u4EEC\u5C06\u4EE5 AtomicInteger \u4E3A\u4F8B\u5B50\u6765\u4ECB\u7ECD\u3002</p></li><li><p>\u539F\u5B50\u5F15\u7528</p></li><li><p>\u539F\u5B50\u6570\u7EC4</p></li><li><p>\u5B57\u6BB5\u66F4\u65B0\u5668</p></li><li><p>\u539F\u5B50\u7D2F\u52A0\u5668</p></li></ol><p>\u4E0B\u9762\u5148\u8BA8\u8BBA\u539F\u5B50\u6574\u6570\u7C7B\uFF0C\u4EE5 AtomicInteger \u4E3A\u4F8B\u8BA8\u8BBA\u5B83\u7684api\u63A5\u53E3</p><p>\u901A\u8FC7\u89C2\u5BDF\u6E90\u7801\u53EF\u4EE5\u53D1\u73B0\uFF0CAtomicInteger \u5185\u90E8\u90FD\u662F\u901A\u8FC7cas\u7684\u539F\u7406\u6765\u5B9E\u73B0\u7684</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">AtomicInteger</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5E76\u81EA\u589E\uFF08i = 0, \u7ED3\u679C i = 1, \u8FD4\u56DE 0\uFF09\uFF0C\u7C7B\u4F3C\u4E8E i++</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u81EA\u589E\u5E76\u83B7\u53D6\uFF08i = 1, \u7ED3\u679C i = 2, \u8FD4\u56DE 2\uFF09\uFF0C\u7C7B\u4F3C\u4E8E ++i</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u81EA\u51CF\u5E76\u83B7\u53D6\uFF08i = 2, \u7ED3\u679C i = 1, \u8FD4\u56DE 1\uFF09\uFF0C\u7C7B\u4F3C\u4E8E --i</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">decrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5E76\u81EA\u51CF\uFF08i = 1, \u7ED3\u679C i = 0, \u8FD4\u56DE 1\uFF09\uFF0C\u7C7B\u4F3C\u4E8E i--</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5E76\u52A0\u503C\uFF08i = 0, \u7ED3\u679C i = 5, \u8FD4\u56DE 0\uFF09</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u52A0\u503C\u5E76\u83B7\u53D6\uFF08i = 5, \u7ED3\u679C i = 0, \u8FD4\u56DE 0\uFF09</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">addAndGet</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5E76\u66F4\u65B0\uFF08i = 0, p \u4E3A i \u7684\u5F53\u524D\u503C, \u7ED3\u679C i = -2, \u8FD4\u56DE 0\uFF09</span>
    <span class="token comment">// \u51FD\u6570\u5F0F\u7F16\u7A0B\u63A5\u53E3\uFF0C\u5176\u4E2D\u51FD\u6570\u4E2D\u7684\u64CD\u4F5C\u80FD\u4FDD\u8BC1\u539F\u5B50\uFF0C\u4F46\u51FD\u6570\u9700\u8981\u65E0\u526F\u4F5C\u7528</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">getAndUpdate</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u66F4\u65B0\u5E76\u83B7\u53D6\uFF08i = -2, p \u4E3A i \u7684\u5F53\u524D\u503C, \u7ED3\u679C i = 0, \u8FD4\u56DE 0\uFF09</span>
    <span class="token comment">// \u51FD\u6570\u5F0F\u7F16\u7A0B\u63A5\u53E3\uFF0C\u5176\u4E2D\u51FD\u6570\u4E2D\u7684\u64CD\u4F5C\u80FD\u4FDD\u8BC1\u539F\u5B50\uFF0C\u4F46\u51FD\u6570\u9700\u8981\u65E0\u526F\u4F5C\u7528</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">updateAndGet</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5E76\u8BA1\u7B97\uFF08i = 0, p \u4E3A i \u7684\u5F53\u524D\u503C, x \u4E3A\u53C2\u65701, \u7ED3\u679C i = 10, \u8FD4\u56DE 0\uFF09</span>
    <span class="token comment">// \u51FD\u6570\u5F0F\u7F16\u7A0B\u63A5\u53E3\uFF0C\u5176\u4E2D\u51FD\u6570\u4E2D\u7684\u64CD\u4F5C\u80FD\u4FDD\u8BC1\u539F\u5B50\uFF0C\u4F46\u51FD\u6570\u9700\u8981\u65E0\u526F\u4F5C\u7528</span>
    <span class="token comment">// getAndUpdate \u5982\u679C\u5728 lambda \u4E2D\u5F15\u7528\u4E86\u5916\u90E8\u7684\u5C40\u90E8\u53D8\u91CF\uFF0C\u8981\u4FDD\u8BC1\u8BE5\u5C40\u90E8\u53D8\u91CF\u662F final \u7684</span>
    <span class="token comment">// getAndAccumulate \u53EF\u4EE5\u901A\u8FC7 \u53C2\u65701 \u6765\u5F15\u7528\u5916\u90E8\u7684\u5C40\u90E8\u53D8\u91CF\uFF0C\u4F46\u56E0\u4E3A\u5176\u4E0D\u5728 lambda \u4E2D\u56E0\u6B64\u4E0D\u5FC5\u662F final</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">getAndAccumulate</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> p <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BA1\u7B97\u5E76\u83B7\u53D6\uFF08i = 10, p \u4E3A i \u7684\u5F53\u524D\u503C, x \u4E3A\u53C2\u65701\u503C, \u7ED3\u679C i = 0, \u8FD4\u56DE 0\uFF09</span>
    <span class="token comment">// \u51FD\u6570\u5F0F\u7F16\u7A0B\u63A5\u53E3\uFF0C\u5176\u4E2D\u51FD\u6570\u4E2D\u7684\u64CD\u4F5C\u80FD\u4FDD\u8BC1\u539F\u5B50\uFF0C\u4F46\u51FD\u6570\u9700\u8981\u65E0\u526F\u4F5C\u7528</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">accumulateAndGet</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> p <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>updateAndGet \u5B9E\u73B0\u539F\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test34</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AtomicInteger</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">updateAndGet</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> p <span class="token operator">-&gt;</span> p <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">updateAndGet</span><span class="token punctuation">(</span><span class="token class-name">AtomicInteger</span> i<span class="token punctuation">,</span> <span class="token class-name">IntUnaryOperator</span> operator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> prev <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> next <span class="token operator">=</span> operator<span class="token punctuation">.</span><span class="token function">applyAsInt</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-4-\u539F\u5B50\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#_6-4-\u539F\u5B50\u5F15\u7528" aria-hidden="true">#</a> 6.4 \u539F\u5B50\u5F15\u7528</h3><p>\u4E3A\u4EC0\u4E48\u9700\u8981\u539F\u5B50\u5F15\u7528\u7C7B\u578B\uFF1F\u4FDD\u8BC1\u5F15\u7528\u7C7B\u578B\u7684\u5171\u4EAB\u53D8\u91CF\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF08\u786E\u4FDD\u8FD9\u4E2A\u539F\u5B50\u5F15\u7528\u6CA1\u6709\u5F15\u7528\u8FC7\u522B\u4EBA\uFF09\u3002</p><p>\u57FA\u672C\u7C7B\u578B\u539F\u5B50\u7C7B\u53EA\u80FD\u66F4\u65B0\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5982\u679C\u9700\u8981\u539F\u5B50\u66F4\u65B0\u591A\u4E2A\u53D8\u91CF\uFF0C\u9700\u8981\u4F7F\u7528\u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B\u3002</p><ul><li>AtomicReference\uFF1A\u5F15\u7528\u7C7B\u578B\u539F\u5B50\u7C7B</li><li>AtomicStampedReference\uFF1A\u539F\u5B50\u66F4\u65B0\u5E26\u6709\u7248\u672C\u53F7\u7684\u5F15\u7528\u7C7B\u578B\u3002\u8BE5\u7C7B\u5C06\u6574\u6570\u503C\u4E0E\u5F15\u7528\u5173\u8054\u8D77\u6765\uFF0C\u53EF\u7528\u4E8E\u89E3\u51B3\u539F\u5B50\u7684\u66F4\u65B0\u6570\u636E\u548C\u6570\u636E\u7684\u7248\u672C\u53F7\uFF0C\u53EF\u4EE5\u89E3\u51B3\u4F7F\u7528 CAS \u8FDB\u884C\u539F\u5B50\u66F4\u65B0\u65F6\u53EF\u80FD\u51FA\u73B0\u7684 ABA \u95EE\u9898\u3002</li><li>AtomicMarkableReference \uFF1A\u539F\u5B50\u66F4\u65B0\u5E26\u6709\u6807\u8BB0\u7684\u5F15\u7528\u7C7B\u578B\u3002\u8BE5\u7C7B\u5C06 boolean \u6807\u8BB0\u4E0E\u5F15\u7528\u5173\u8054\u8D77\u6765\uFF0C\u4E5F\u53EF\u4EE5\u89E3\u51B3\u4F7F\u7528 CAS \u8FDB\u884C\u539F\u5B50\u66F4\u65B0\u65F6\u53EF\u80FD\u51FA\u73B0\u7684 ABA \u95EE\u9898\u3002</li></ul><p>\u4F7F\u7528\u539F\u5B50\u5F15\u7528\u5B9E\u73B0BigDecimal\u5B58\u53D6\u6B3E\u7684\u7EBF\u7A0B\u5B89\u5168</p><p>\u4E0B\u9762\u8FD9\u4E2A\u662F\u4E0D\u5B89\u5168\u7684\u5B9E\u73B0\u8FC7\u7A0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">DecimalAccountUnsafe</span> <span class="token keyword">implements</span> <span class="token class-name">DecimalAccount</span> <span class="token punctuation">{</span>
    
    <span class="token class-name">BigDecimal</span> balance<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token class-name">DecimalAccountUnsafe</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> balance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> balance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BigDecimal</span> balance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="atomicreference" tabindex="-1"><a class="header-anchor" href="#atomicreference" aria-hidden="true">#</a> AtomicReference</h4><p>\u89E3\u51B3\u4EE3\u7801\u5982\u4E0B\uFF1A\u5728AtomicReference\u7C7B\u4E2D\uFF0C\u5B58\u5728\u4E00\u4E2Avalue\u7C7B\u578B\u7684\u53D8\u91CF\uFF0C\u4FDD\u5B58\u5BF9BigDecimal\u5BF9\u8C61\u7684\u5F15\u7528\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">DecimalAccountCas</span> <span class="token keyword">implements</span> <span class="token class-name">DecimalAccount</span><span class="token punctuation">{</span>

    <span class="token comment">//private BigDecimal balance;</span>
    <span class="token keyword">private</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BigDecimal</span><span class="token punctuation">&gt;</span></span> balance <span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">DecimalAccountCas</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> balance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>balance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> balance<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">BigDecimal</span> pre <span class="token operator">=</span> balance<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u6CE8\u610F\uFF1A\u8FD9\u91CC\u7684balance\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\uFF0C\u5373 pre!=next</span>
            <span class="token class-name">BigDecimal</span> next <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>balance<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="aba-\u95EE\u9898\u53CA\u89E3\u51B3" tabindex="-1"><a class="header-anchor" href="#aba-\u95EE\u9898\u53CA\u89E3\u51B3" aria-hidden="true">#</a> ABA \u95EE\u9898\u53CA\u89E3\u51B3</h4><p>ABA \u95EE\u9898</p><p>\u5982\u4E0B\u7A0B\u5E8F\u6240\u793A\uFF0C\u867D\u7136\u518Dother\u65B9\u6CD5\u4E2D\u5B58\u5728\u4E24\u4E2A\u7EBF\u7A0B\u5BF9\u5171\u4EAB\u53D8\u91CF\u8FDB\u884C\u4E86\u4FEE\u6539\uFF0C\u4F46\u662F\u4FEE\u6539\u4E4B\u540E\u53C8\u53D8\u6210\u4E86\u539F\u503C\uFF0Cmain\u7EBF\u7A0B\u4E2D\u5BF9\u6B64\u662F\u4E0D\u53EF\u89C1\u5F97\uFF0C\u8FD9\u79CD\u64CD\u4F5C\u8FD9\u5BF9\u4E1A\u52A1\u4EE3\u7801\u5E76\u65E0\u5F71\u54CD\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> ref <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;main start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u503C A</span>
    <span class="token comment">// \u8FD9\u4E2A\u5171\u4EAB\u53D8\u91CF\u88AB\u5B83\u7EBF\u7A0B\u4FEE\u6539</span>
    <span class="token class-name">String</span> prev <span class="token operator">=</span> ref<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">other</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Sleeper</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C1D\u8BD5\u6539\u4E3A C</span>
    log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;change A-&gt;C {}&quot;</span><span class="token punctuation">,</span> ref<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">other</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;change A-&gt;B {}&quot;</span><span class="token punctuation">,</span> ref<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;t1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Sleeper</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6CE8\u610F\uFF1A\u5982\u679C\u8FD9\u91CC\u4F7F\u7528  log.debug(&quot;change B-&gt;A {}&quot;, ref.compareAndSet(ref.get(), new String(&quot;A&quot;)));</span>
        <span class="token comment">// \u90A3\u4E48\u6B64\u5B9E\u9A8C\u4E2D\u7684 log.debug(&quot;change A-&gt;C {}&quot;, ref.compareAndSet(prev, &quot;C&quot;));</span>
        <span class="token comment">// \u6253\u5370\u7684\u5C31\u662Ffalse\uFF0C \u56E0\u4E3Anew String(&quot;A&quot;) \u8FD4\u56DE\u7684\u5BF9\u8C61\u7684\u5F15\u7528\u548C&quot;A&quot;\u8FD4\u56DE\u7684\u5BF9\u8C61\u7684\u5F15\u7528\u65F6\u4E0D\u540C\u7684\uFF01</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;change B-&gt;A {}&quot;</span><span class="token punctuation">,</span> ref<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;t2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3B\u7EBF\u7A0B\u4EC5\u80FD\u5224\u65AD\u51FA\u5171\u4EAB\u53D8\u91CF\u7684\u503C\u4E0E\u6700\u521D\u503C A \u662F\u5426\u76F8\u540C\uFF0C\u4E0D\u80FD\u611F\u77E5\u5230\u8FD9\u79CD\u4ECE A \u6539\u4E3A B \u53C8\u6539\u56DE A \u7684\u60C5\u51B5\uFF0C\u5982\u679C\u4E3B\u7EBF\u7A0B\u5E0C\u671B\uFF1A\u53EA\u8981\u6709\u5176\u5B83\u7EBF\u7A0B\u3010\u52A8\u8FC7\u4E86\u3011\u5171\u4EAB\u53D8\u91CF\uFF0C\u90A3\u4E48\u81EA\u5DF1\u7684 cas \u5C31\u7B97\u5931\u8D25\uFF0C\u8FD9\u65F6\uFF0C\u4EC5\u6BD4\u8F83\u503C\u662F\u4E0D\u591F\u7684\uFF0C\u9700\u8981\u518D\u52A0\u4E00\u4E2A\u7248\u672C\u53F7\u3002\u4F7F\u7528AtomicStampedReference\u6765\u89E3\u51B3\u3002</p><h4 id="atomicstampedreference" tabindex="-1"><a class="header-anchor" href="#atomicstampedreference" aria-hidden="true">#</a> AtomicStampedReference</h4><p>\u89E3\u51B3ABA\u95EE\u9898</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;c.Test15&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test15</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> ref <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;main start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u83B7\u53D6\u503C A</span>
        <span class="token comment">// \u8FD9\u4E2A\u5171\u4EAB\u53D8\u91CF\u88AB\u5B83\u7EBF\u7A0B\u4FEE\u6539</span>
        <span class="token class-name">String</span> prev <span class="token operator">=</span> ref<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> stamp <span class="token operator">=</span> ref<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>stamp <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">other</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Sleeper</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5C1D\u8BD5\u6539\u4E3A C</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>stamp <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;change A-&gt;C {}&quot;</span><span class="token punctuation">,</span> ref<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> stamp<span class="token punctuation">,</span> stamp <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">other</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> stamp <span class="token operator">=</span> ref<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;change A-&gt;B {}&quot;</span><span class="token punctuation">,</span> ref<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> stamp<span class="token punctuation">,</span> stamp <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;t1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6CE8\u610F\uFF1A\u5982\u679C\u8FD9\u91CC\u4F7F\u7528  log.debug(&quot;change B-&gt;A {}&quot;, ref.compareAndSet(ref.get(), new String(&quot;A&quot;)));</span>
            <span class="token comment">// \u90A3\u4E48\u6B64\u5B9E\u9A8C\u4E2D\u7684 log.debug(&quot;change A-&gt;C {}&quot;, ref.compareAndSet(prev, &quot;C&quot;));</span>
            <span class="token comment">// \u6253\u5370\u7684\u5C31\u662Ffalse\uFF0C \u56E0\u4E3Anew String(&quot;A&quot;) \u8FD4\u56DE\u7684\u5BF9\u8C61\u7684\u5F15\u7528\u548C&quot;A&quot;\u8FD4\u56DE\u7684\u5BF9\u8C61\u7684\u5F15\u7528\u65F6\u4E0D\u540C\u7684\uFF01</span>
            <span class="token class-name">Sleeper</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> stamp <span class="token operator">=</span> ref<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;change B-&gt;A {}&quot;</span><span class="token punctuation">,</span> ref<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> stamp<span class="token punctuation">,</span> stamp <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;t2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">21</span><span class="token operator">:</span><span class="token number">47</span><span class="token operator">:</span><span class="token number">49.180</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test15</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token operator">-</span> main start<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">47</span><span class="token operator">:</span><span class="token number">49.183</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test15</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">0</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">47</span><span class="token operator">:</span><span class="token number">49.223</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test15</span> <span class="token punctuation">[</span>t1<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">0</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">47</span><span class="token operator">:</span><span class="token number">49.223</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test15</span> <span class="token punctuation">[</span>t1<span class="token punctuation">]</span> <span class="token operator">-</span> change <span class="token class-name">A</span><span class="token operator">-&gt;</span><span class="token class-name">B</span> <span class="token boolean">true</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">47</span><span class="token operator">:</span><span class="token number">49.727</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test15</span> <span class="token punctuation">[</span>t2<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">47</span><span class="token operator">:</span><span class="token number">49.727</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test15</span> <span class="token punctuation">[</span>t2<span class="token punctuation">]</span> <span class="token operator">-</span> change <span class="token class-name">B</span><span class="token operator">-&gt;</span><span class="token class-name">A</span> <span class="token boolean">true</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">47</span><span class="token operator">:</span><span class="token number">50.230</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test15</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">0</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">47</span><span class="token operator">:</span><span class="token number">50.230</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test15</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token operator">-</span> change <span class="token class-name">A</span><span class="token operator">-&gt;</span><span class="token class-name">C</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="atomicmarkablereference" tabindex="-1"><a class="header-anchor" href="#atomicmarkablereference" aria-hidden="true">#</a> AtomicMarkableReference</h4><p>AtomicStampedReference \u53EF\u4EE5\u7ED9\u539F\u5B50\u5F15\u7528\u52A0\u4E0A\u7248\u672C\u53F7\uFF0C\u8FFD\u8E2A\u539F\u5B50\u5F15\u7528\u6574\u4E2A\u7684\u53D8\u5316\u8FC7\u7A0B\uFF0C\u5982\uFF1AA -&gt; B -&gt; A -&gt;C\uFF0C\u901A\u8FC7AtomicStampedReference\uFF0C\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053\uFF0C\u5F15\u7528\u53D8\u91CF\u4E2D\u9014\u88AB\u66F4\u6539\u4E86\u51E0\u6B21\u3002\u4F46\u662F\u6709\u65F6\u5019\uFF0C\u5E76\u4E0D\u5173\u5FC3\u5F15\u7528\u53D8\u91CF\u66F4\u6539\u4E86\u51E0\u6B21\uFF0C\u53EA\u662F\u5355\u7EAF\u7684\u5173\u5FC3\u662F\u5426\u66F4\u6539\u8FC7\uFF0C\u6240\u4EE5\u5C31\u6709\u4E86AtomicMarkableReference</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209172153737.png" alt="image-20220917215315646"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;c.Test38&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test38</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">GarbageBag</span> bag <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GarbageBag</span><span class="token punctuation">(</span><span class="token string">&quot;\u88C5\u6EE1\u4E86\u5783\u573E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u53C2\u65702 mark \u53EF\u4EE5\u770B\u4F5C\u4E00\u4E2A\u6807\u8BB0\uFF0C\u8868\u793A\u5783\u573E\u888B\u6EE1\u4E86</span>
        <span class="token class-name">AtomicMarkableReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GarbageBag</span><span class="token punctuation">&gt;</span></span> ref <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicMarkableReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>bag<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">GarbageBag</span> prev <span class="token operator">=</span> ref<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>prev<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bag<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token string">&quot;\u7A7A\u5783\u573E\u888B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            ref<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>bag<span class="token punctuation">,</span> bag<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>bag<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;\u4FDD\u6D01\u963F\u59E8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u60F3\u6362\u4E00\u53EA\u65B0\u5783\u573E\u888B\uFF1F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> success <span class="token operator">=</span> ref<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GarbageBag</span><span class="token punctuation">(</span><span class="token string">&quot;\u7A7A\u5783\u573E\u888B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u6362\u4E86\u4E48\uFF1F&quot;</span> <span class="token operator">+</span> success<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">GarbageBag</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> desc<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">GarbageBag</span><span class="token punctuation">(</span><span class="token class-name">String</span> desc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>desc <span class="token operator">=</span> desc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDesc</span><span class="token punctuation">(</span><span class="token class-name">String</span> desc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>desc <span class="token operator">=</span> desc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> desc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">21</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">49.123</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test38</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token operator">-</span> start<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">49.127</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test38</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>GarbageBag</span><span class="token annotation punctuation">@18ef96</span> \u88C5\u6EE1\u4E86\u5783\u573E
<span class="token number">21</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">49.202</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test38</span> <span class="token punctuation">[</span>\u4FDD\u6D01\u963F\u59E8<span class="token punctuation">]</span> <span class="token operator">-</span> start<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">49.202</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test38</span> <span class="token punctuation">[</span>\u4FDD\u6D01\u963F\u59E8<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>GarbageBag</span><span class="token annotation punctuation">@18ef96</span> \u7A7A\u5783\u573E\u888B
<span class="token number">21</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">50.203</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test38</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token operator">-</span> \u60F3\u6362\u4E00\u53EA\u65B0\u5783\u573E\u888B\uFF1F
<span class="token number">21</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">50.203</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test38</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token operator">-</span> \u6362\u4E86\u4E48\uFF1F<span class="token boolean">false</span>
<span class="token number">21</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">50.203</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test38</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>GarbageBag</span><span class="token annotation punctuation">@18ef96</span> \u7A7A\u5783\u573E\u888B
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-5-\u539F\u5B50\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_6-5-\u539F\u5B50\u6570\u7EC4" aria-hidden="true">#</a> 6.5 \u539F\u5B50\u6570\u7EC4</h3><p>\u4F7F\u7528\u539F\u5B50\u7684\u65B9\u5F0F\u66F4\u65B0\u6570\u7EC4\u91CC\u7684\u67D0\u4E2A\u5143\u7D20</p><ul><li>AtomicIntegerArray\uFF1A\u6574\u5F62\u6570\u7EC4\u539F\u5B50\u7C7B</li><li>AtomicLongArray\uFF1A\u957F\u6574\u5F62\u6570\u7EC4\u539F\u5B50\u7C7B</li><li>AtomicReferenceArray \uFF1A\u5F15\u7528\u7C7B\u578B\u6570\u7EC4\u539F\u5B50\u7C7B</li></ul><p>\u4E0A\u9762\u4E09\u4E2A\u7C7B\u63D0\u4F9B\u7684\u65B9\u6CD5\u51E0\u4E4E\u76F8\u540C\uFF0C\u6240\u4EE5\u6211\u4EEC\u8FD9\u91CC\u4EE5 AtomicIntegerArray \u4E3A\u4F8B\u5B50\u6765\u4ECB\u7ECD\u3002\u5B9E\u4F8B\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
\u53C2\u65701\uFF0C\u63D0\u4F9B\u6570\u7EC4\u3001\u53EF\u4EE5\u662F\u7EBF\u7A0B\u4E0D\u5B89\u5168\u6570\u7EC4\u6216\u7EBF\u7A0B\u5B89\u5168\u6570\u7EC4
\u53C2\u65702\uFF0C\u83B7\u53D6\u6570\u7EC4\u957F\u5EA6\u7684\u65B9\u6CD5
\u53C2\u65703\uFF0C\u81EA\u589E\u65B9\u6CD5\uFF0C\u56DE\u4F20 array, index
\u53C2\u65704\uFF0C\u6253\u5370\u6570\u7EC4\u7684\u65B9\u6CD5
*/</span>
<span class="token comment">// supplier \u63D0\u4F9B\u8005 \u65E0\u4E2D\u751F\u6709 ()-&gt;\u7ED3\u679C</span>
<span class="token comment">// function \u51FD\u6570 \u4E00\u4E2A\u53C2\u6570\u4E00\u4E2A\u7ED3\u679C (\u53C2\u6570)-&gt;\u7ED3\u679C , BiFunction (\u53C2\u65701,\u53C2\u65702)-&gt;\u7ED3\u679C</span>
<span class="token comment">// consumer \u6D88\u8D39\u8005 \u4E00\u4E2A\u53C2\u6570\u6CA1\u7ED3\u679C (\u53C2\u6570)-&gt;void, BiConsumer (\u53C2\u65701,\u53C2\u65702)-&gt;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">demo</span><span class="token punctuation">(</span>
    <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> arraySupplier<span class="token punctuation">,</span>
    <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lengthFun<span class="token punctuation">,</span>
    <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> putConsumer<span class="token punctuation">,</span>
    <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> printConsumer <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Thread</span><span class="token punctuation">&gt;</span></span> ts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">T</span> array <span class="token operator">=</span> arraySupplier<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> length <span class="token operator">=</span> lengthFun<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6BCF\u4E2A\u7EBF\u7A0B\u5BF9\u6570\u7EC4\u4F5C 10000 \u6B21\u64CD\u4F5C</span>
        ts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                putConsumer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> j<span class="token operator">%</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u542F\u52A8\u6240\u6709\u7EBF\u7A0B</span>
    ts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B49\u6240\u6709\u7EBF\u7A0B\u7ED3\u675F</span>
    printConsumer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u4E0D\u5B89\u5168\u7684\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u5B89\u5168\u7684\u6570\u7EC4" aria-hidden="true">#</a> \u4E0D\u5B89\u5168\u7684\u6570\u7EC4</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">demo</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token operator">-&gt;</span>array<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    <span class="token punctuation">(</span>array<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">,</span>
    array<span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">[</span><span class="token number">9870</span><span class="token punctuation">,</span> <span class="token number">9862</span><span class="token punctuation">,</span> <span class="token number">9774</span><span class="token punctuation">,</span> <span class="token number">9697</span><span class="token punctuation">,</span> <span class="token number">9683</span><span class="token punctuation">,</span> <span class="token number">9678</span><span class="token punctuation">,</span> <span class="token number">9679</span><span class="token punctuation">,</span> <span class="token number">9668</span><span class="token punctuation">,</span> <span class="token number">9680</span><span class="token punctuation">,</span> <span class="token number">9698</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="\u5B89\u5168\u7684\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5B89\u5168\u7684\u6570\u7EC4" aria-hidden="true">#</a> \u5B89\u5168\u7684\u6570\u7EC4</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">demo</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">AtomicIntegerArray</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> array<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>array<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> array<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>
    array <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-6-\u5B57\u6BB5\u66F4\u65B0\u5668" tabindex="-1"><a class="header-anchor" href="#_6-6-\u5B57\u6BB5\u66F4\u65B0\u5668" aria-hidden="true">#</a> 6.6 \u5B57\u6BB5\u66F4\u65B0\u5668</h3><ul><li><p>AtomicReferenceFieldUpdater</p></li><li><p>AtomicIntegerFieldUpdater</p></li><li><p>AtomicLongFieldUpdater</p></li></ul><p>\u6CE8\u610F\uFF1A\u5229\u7528\u5B57\u6BB5\u66F4\u65B0\u5668\uFF0C\u53EF\u4EE5\u9488\u5BF9\u5BF9\u8C61\u7684\u67D0\u4E2A\u57DF\uFF08Field\uFF09\u8FDB\u884C\u539F\u5B50\u64CD\u4F5C\uFF0C\u53EA\u80FD\u914D\u5408 volatile \u4FEE\u9970\u7684\u5B57\u6BB5\u4F7F\u7528\uFF0C\u5426\u5219\u4F1A\u51FA\u73B0\u5F02\u5E38</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Exception</span> in thread <span class="token string">&quot;main&quot;</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>IllegalArgumentException</span><span class="token operator">:</span> <span class="token class-name">Must</span> be <span class="token keyword">volatile</span> type
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test17</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AtomicReferenceFieldUpdater</span> updater <span class="token operator">=</span> <span class="token class-name">AtomicReferenceFieldUpdater</span><span class="token punctuation">.</span><span class="token function">newUpdater</span><span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>updater<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>stu<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
    <span class="token keyword">volatile</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">// \u5FC5\u987B\u4F7F\u7528 volatile \u4FEE\u9970\uFF0C\u5426\u5219\u62A5\u9519</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Student{&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;name=&#39;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-7-\u539F\u5B50\u7D2F\u52A0\u5668" tabindex="-1"><a class="header-anchor" href="#_6-7-\u539F\u5B50\u7D2F\u52A0\u5668" aria-hidden="true">#</a> 6.7 \u539F\u5B50\u7D2F\u52A0\u5668</h3><h4 id="\u7D2F\u52A0\u5668\u6027\u80FD\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#\u7D2F\u52A0\u5668\u6027\u80FD\u6BD4\u8F83" aria-hidden="true">#</a> \u7D2F\u52A0\u5668\u6027\u80FD\u6BD4\u8F83</h4><p>LongAdder\u7D2F\u52A0\u5668\u7684\u4F7F\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">LongAdder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> adder <span class="token operator">-&gt;</span> adder<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">AtomicLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> adder <span class="token operator">-&gt;</span> adder<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> adderSupplier<span class="token punctuation">,</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">T</span> adder <span class="token operator">=</span> adderSupplier<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Thread</span><span class="token punctuation">&gt;</span></span> ts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 4 \u4E2A\u7EBF\u7A0B\uFF0C\u6BCF\u4EBA\u7D2F\u52A0 50 \u4E07</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">40</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">500000</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                action<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>adder<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>adder <span class="token operator">+</span> <span class="token string">&quot; cost:&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6027\u80FD\u63D0\u5347\u7684\u539F\u56E0\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u5728\u6709\u7ADE\u4E89\u65F6\uFF0C\u8BBE\u7F6E\u591A\u4E2A\u7D2F\u52A0\u5355\u5143(\u4F46\u4E0D\u4F1A\u8D85\u8FC7cpu\u7684\u6838\u5FC3\u6570)\uFF0CTherad-0 \u7D2F\u52A0 Cell[0]\uFF0C\u800C Thread-1 \u7D2F\u52A0Cell[1]... \u6700\u540E\u5C06\u7ED3\u679C\u6C47\u603B\u3002</p><p>\u8FD9\u6837\u5B83\u4EEC\u5728\u7D2F\u52A0\u65F6\u64CD\u4F5C\u7684\u4E0D\u540C\u7684 Cell \u53D8\u91CF\uFF0C\u56E0\u6B64\u51CF\u5C11\u4E86 CAS \u91CD\u8BD5\u5931\u8D25\uFF0C\u4ECE\u800C\u63D0\u9AD8\u6027\u80FD\u3002</p><h4 id="\u6E90\u7801\u4E4B-longadder" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u4E4B-longadder" aria-hidden="true">#</a> \u6E90\u7801\u4E4B LongAdder</h4><p>LongAdder \u7C7B\u6709\u51E0\u4E2A\u5173\u952E\u57DF</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u7D2F\u52A0\u5355\u5143\u6570\u7EC4, \u61D2\u60F0\u521D\u59CB\u5316</span>
<span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cells<span class="token punctuation">;</span>
<span class="token comment">// \u57FA\u7840\u503C, \u5982\u679C\u6CA1\u6709\u7ADE\u4E89, \u5219\u7528 cas \u7D2F\u52A0\u8FD9\u4E2A\u57DF</span>
<span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> base<span class="token punctuation">;</span>
<span class="token comment">// \u5728 cells \u521B\u5EFA\u6216\u6269\u5BB9\u65F6, \u7F6E\u4E3A 1, \u8868\u793A\u52A0\u9501</span>
<span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> cellsBusy<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="cas-1" tabindex="-1"><a class="header-anchor" href="#cas-1" aria-hidden="true">#</a> cas</h5><p>\u4F7F\u7528cas\u5B9E\u73B0\u4E00\u4E2A\u81EA\u65CB\u9501</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4E0D\u8981\u7528\u4E8E\u751F\u4EA7\u5B9E\u8DF5\uFF01\uFF01\uFF01</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LockCas</span> <span class="token punctuation">{</span>
    <span class="token comment">// 0 \u8868\u793A\u6CA1\u6709\u52A0\u9501\uFF0C1 \u8868\u793A\u52A0\u9501</span>
    <span class="token keyword">private</span> <span class="token class-name">AtomicInteger</span> state <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;unlock...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        state<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LockCas</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LockCas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;begin...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;lock...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;begin...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;lock...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">18</span><span class="token operator">:</span><span class="token number">27</span><span class="token operator">:</span><span class="token number">07.198</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test42</span> <span class="token punctuation">[</span><span class="token class-name">Thread</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> begin<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">18</span><span class="token operator">:</span><span class="token number">27</span><span class="token operator">:</span><span class="token number">07.202</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test42</span> <span class="token punctuation">[</span><span class="token class-name">Thread</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> lock<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">18</span><span class="token operator">:</span><span class="token number">27</span><span class="token operator">:</span><span class="token number">07.198</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test42</span> <span class="token punctuation">[</span><span class="token class-name">Thread</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> begin<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">18</span><span class="token operator">:</span><span class="token number">27</span><span class="token operator">:</span><span class="token number">08.204</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test42</span> <span class="token punctuation">[</span><span class="token class-name">Thread</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> unlock<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">18</span><span class="token operator">:</span><span class="token number">27</span><span class="token operator">:</span><span class="token number">08.204</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test42</span> <span class="token punctuation">[</span><span class="token class-name">Thread</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> lock<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">18</span><span class="token operator">:</span><span class="token number">27</span><span class="token operator">:</span><span class="token number">08.204</span> <span class="token class-name"><span class="token namespace">c<span class="token punctuation">.</span></span>Test42</span> <span class="token punctuation">[</span><span class="token class-name">Thread</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> unlock<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u539F\u7406\u4E4B\u4F2A\u5171\u4EAB" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406\u4E4B\u4F2A\u5171\u4EAB" aria-hidden="true">#</a> \u539F\u7406\u4E4B\u4F2A\u5171\u4EAB</h5><p>\u5176\u4E2D Cell \u5373\u4E3A\u7D2F\u52A0\u5355\u5143</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u9632\u6B62\u7F13\u5B58\u884C\u4F2A\u5171\u4EAB</span>
<span class="token annotation punctuation">@sun.misc.Contended</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Cell</span> <span class="token punctuation">{</span>
    <span class="token keyword">volatile</span> <span class="token keyword">long</span> value<span class="token punctuation">;</span>
    <span class="token class-name">Cell</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> value <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token comment">// \u6700\u91CD\u8981\u7684\u65B9\u6CD5, \u7528\u6765 cas \u65B9\u5F0F\u8FDB\u884C\u7D2F\u52A0, prev \u8868\u793A\u65E7\u503C, next \u8868\u793A\u65B0\u503C</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">cas</span><span class="token punctuation">(</span><span class="token keyword">long</span> prev<span class="token punctuation">,</span> <span class="token keyword">long</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> prev<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u7701\u7565\u4E0D\u91CD\u8981\u4EE3\u7801</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u8BA8\u8BBA @sun.misc.Contended \u6CE8\u89E3\u7684\u91CD\u8981\u610F\u4E49</p><p>\u5F97\u4ECE\u7F13\u5B58\u8BF4\u8D77\uFF0C\u7F13\u5B58\u4E0E\u5185\u5B58\u7684\u901F\u5EA6\u6BD4\u8F83</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209121603704.png" alt="1594821128208"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181349346.png" alt="image-20220918134927266"></p><p>\u56E0\u4E3A CPU \u4E0E \u5185\u5B58\u7684\u901F\u5EA6\u5DEE\u5F02\u5F88\u5927\uFF0C\u9700\u8981\u9760\u9884\u8BFB\u6570\u636E\u81F3\u7F13\u5B58\u6765\u63D0\u5347\u6548\u7387\u3002\u7F13\u5B58\u79BBcpu\u8D8A\u8FD1\u901F\u5EA6\u8D8A\u5FEB\u3002</p><p>\u800C\u7F13\u5B58\u4EE5\u7F13\u5B58\u884C\u4E3A\u5355\u4F4D\uFF0C\u6BCF\u4E2A\u7F13\u5B58\u884C\u5BF9\u5E94\u7740\u4E00\u5757\u5185\u5B58\uFF0C\u4E00\u822C\u662F <code>64 byte\uFF088 \u4E2A long\uFF09</code>\uFF0C\u7F13\u5B58\u7684\u52A0\u5165\u4F1A\u9020\u6210\u6570\u636E\u526F\u672C\u7684\u4EA7\u751F\uFF0C\u5373\u540C\u4E00\u4EFD\u6570\u636E\u4F1A\u7F13\u5B58\u5728\u4E0D\u540C\u6838\u5FC3\u7684\u7F13\u5B58\u884C\u4E2D\uFF0CCPU \u8981\u4FDD\u8BC1\u6570\u636E\u7684\u4E00\u81F4\u6027\uFF0C\u5982\u679C\u67D0\u4E2A CPU \u6838\u5FC3\u66F4\u6539\u4E86\u6570\u636E\uFF0C\u5176\u5B83 CPU \u6838\u5FC3\u5BF9\u5E94\u7684\u6574\u4E2A\u7F13\u5B58\u884C\u5FC5\u987B\u5931\u6548\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209121603033.png" alt="1594821188387"></p><p>\u56E0\u4E3A Cell \u662F\u6570\u7EC4\u5F62\u5F0F\uFF0C\u5728\u5185\u5B58\u4E2D\u662F\u8FDE\u7EED\u5B58\u50A8\u7684\uFF0C\u4E00\u4E2A Cell \u4E3A 24 \u5B57\u8282\uFF0816 \u5B57\u8282\u7684\u5BF9\u8C61\u5934\u548C 8 \u5B57\u8282\u7684 value\uFF09\uFF0C\u56E0\u6B64\u7F13\u5B58\u884C\u53EF\u4EE5\u5B58\u4E0B 2 \u4E2A\u7684 Cell \u5BF9\u8C61\u3002\u8FD9\u6837\u95EE\u9898\u6765\u4E86\uFF1A</p><ul><li>Core-0 \u8981\u4FEE\u6539 Cell[0]</li><li>Core-1 \u8981\u4FEE\u6539 Cell[1]</li></ul><p>\u65E0\u8BBA\u8C01\u4FEE\u6539\u6210\u529F\uFF0C\u90FD\u4F1A\u5BFC\u81F4\u5BF9\u65B9 Core \u7684\u7F13\u5B58\u884C\u5931\u6548\uFF0C\u6BD4\u5982 Core-0 \u4E2D Cell[0]=6000, Cell[1]=8000 \u8981\u7D2F\u52A0 Cell[0]=6001, Cell[1]=8000 \uFF0C\u8FD9\u65F6\u4F1A\u8BA9 Core-1 \u7684\u7F13\u5B58\u884C\u5931\u6548</p><p>@sun.misc.Contended \u7528\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5B83\u7684\u539F\u7406\u662F\u5728\u4F7F\u7528\u6B64\u6CE8\u89E3\u7684\u5BF9\u8C61\u6216\u5B57\u6BB5\u7684 <strong>\u524D\u540E\u5404\u589E\u52A0 128 \u5B57\u8282\u5927\u5C0F\u7684padding</strong>\uFF0C<strong>\u4ECE\u800C\u8BA9 CPU \u5C06\u5BF9\u8C61\u9884\u8BFB\u81F3\u7F13\u5B58\u65F6\u5360\u7528\u4E0D\u540C\u7684\u7F13\u5B58\u884C\uFF0C\u8FD9\u6837\uFF0C\u4E0D\u4F1A\u9020\u6210\u5BF9\u65B9\u7F13\u5B58\u884C\u7684\u5931\u6548</strong></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209121603686.png" alt="1594821225708"></p><p>\u518D\u6765\u770B\u770BLongAdder\u7C7B\u7684\u7D2F\u52A0increment()\u65B9\u6CD5\u4E2D\u53C8\u4E3B\u8981\u8C03\u7528\u4E0B\u9762\u7684\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// as \u4E3A\u7D2F\u52A0\u5355\u5143\u6570\u7EC4</span>
    <span class="token comment">// b \u4E3A\u57FA\u7840\u503C</span>
    <span class="token comment">// x \u4E3A\u7D2F\u52A0\u503C</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span> <span class="token keyword">long</span> b<span class="token punctuation">,</span> v<span class="token punctuation">;</span> <span class="token keyword">int</span> m<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token comment">// \u8FDB\u5165 if \u7684\u4E24\u4E2A\u6761\u4EF6</span>
    <span class="token comment">// 1. as \u6709\u503C, \u8868\u793A\u5DF2\u7ECF\u53D1\u751F\u8FC7\u7ADE\u4E89, \u8FDB\u5165 if</span>
    <span class="token comment">// 2. cas \u7ED9 base \u7D2F\u52A0\u65F6\u5931\u8D25\u4E86, \u8868\u793A base \u53D1\u751F\u4E86\u7ADE\u4E89, \u8FDB\u5165 if</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">casBase</span><span class="token punctuation">(</span>b <span class="token operator">=</span> base<span class="token punctuation">,</span> b <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// uncontended \u8868\u793A cell \u6CA1\u6709\u7ADE\u4E89</span>
        <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>
            <span class="token comment">// as \u8FD8\u6CA1\u6709\u521B\u5EFA</span>
            as <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
            <span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u5BF9\u5E94\u7684 cell \u8FD8\u6CA1\u6709\u88AB\u521B\u5EFA\uFF0Ca\u4E3A\u5F53\u7EBF\u7A0B\u7684cell</span>
            <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
            <span class="token comment">// \u7ED9\u5F53\u524D\u7EBF\u7A0B\u7684 cell \u7D2F\u52A0\u5931\u8D25 uncontended=false ( a \u4E3A\u5F53\u524D\u7EBF\u7A0B\u7684 cell )</span>
            <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> v <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8FDB\u5165 cell \u6570\u7EC4\u521B\u5EFA\u3001cell \u521B\u5EFA\u7684\u6D41\u7A0B</span>
            <span class="token function">longAccumulate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="add-\u65B9\u6CD5\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#add-\u65B9\u6CD5\u5206\u6790" aria-hidden="true">#</a> add \u65B9\u6CD5\u5206\u6790</h5><p>\u7D2F\u52A0\u4E3B\u8981\u8C03\u7528\u4E0B\u9762\u7684\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// as \u4E3A\u7D2F\u52A0\u5355\u5143\u6570\u7EC4</span>
    <span class="token comment">// b \u4E3A\u57FA\u7840\u503C</span>
    <span class="token comment">// x \u4E3A\u7D2F\u52A0\u503C</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span> <span class="token keyword">long</span> b<span class="token punctuation">,</span> v<span class="token punctuation">;</span> <span class="token keyword">int</span> m<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token comment">// \u8FDB\u5165 if \u7684\u4E24\u4E2A\u6761\u4EF6</span>
    <span class="token comment">// 1. as \u6709\u503C, \u8868\u793A\u5DF2\u7ECF\u53D1\u751F\u8FC7\u7ADE\u4E89, \u8FDB\u5165 if</span>
    <span class="token comment">// 2. cas \u7ED9 base \u7D2F\u52A0\u65F6\u5931\u8D25\u4E86, \u8868\u793A base \u53D1\u751F\u4E86\u7ADE\u4E89, \u8FDB\u5165 if</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">casBase</span><span class="token punctuation">(</span>b <span class="token operator">=</span> base<span class="token punctuation">,</span> b <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// uncontended \u8868\u793A cell \u6CA1\u6709\u7ADE\u4E89</span>
        <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>
            <span class="token comment">// as \u8FD8\u6CA1\u6709\u521B\u5EFA</span>
            as <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
            <span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u5BF9\u5E94\u7684 cell \u8FD8\u6CA1\u6709</span>
            <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
            <span class="token comment">// cas \u7ED9\u5F53\u524D\u7EBF\u7A0B\u7684 cell \u7D2F\u52A0\u5931\u8D25 uncontended=false ( a \u4E3A\u5F53\u524D\u7EBF\u7A0B\u7684 cell )</span>
            <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> v <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8FDB\u5165 cell \u6570\u7EC4\u521B\u5EFA\u3001cell \u521B\u5EFA\u7684\u6D41\u7A0B</span>
            <span class="token function">longAccumulate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>add \u6D41\u7A0B\u56FE</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181357657.png" alt="image-20220918135749559"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">longAccumulate</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">,</span> <span class="token class-name">LongBinaryOperator</span> fn<span class="token punctuation">,</span>
                          <span class="token keyword">boolean</span> wasUncontended<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u8FD8\u6CA1\u6709\u5BF9\u5E94\u7684 cell, \u9700\u8981\u968F\u673A\u751F\u6210\u4E00\u4E2A h \u503C\u7528\u6765\u5C06\u5F53\u524D\u7EBF\u7A0B\u7ED1\u5B9A\u5230 cell</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">=</span> <span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521D\u59CB\u5316 probe</span>
        <span class="token class-name">ThreadLocalRandom</span><span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// h \u5BF9\u5E94\u65B0\u7684 probe \u503C, \u7528\u6765\u5BF9\u5E94 cell</span>
        h <span class="token operator">=</span> <span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        wasUncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// collide \u4E3A true \u8868\u793A\u9700\u8981\u6269\u5BB9</span>
    <span class="token keyword">boolean</span> collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token keyword">long</span> v<span class="token punctuation">;</span>
        <span class="token comment">// \u5DF2\u7ECF\u6709\u4E86 cells</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> as<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4F46\u662F\u8FD8\u6CA1\u6709\u5F53\u524D\u7EBF\u7A0B\u5BF9\u5E94\u7684 cell</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E3A cellsBusy \u52A0\u9501, \u521B\u5EFA cell, cell \u7684\u521D\u59CB\u7D2F\u52A0\u503C\u4E3A x</span>
                <span class="token comment">// \u6210\u529F\u5219 break, \u5426\u5219\u7EE7\u7EED continue \u5FAA\u73AF</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token comment">// Try to attach new Cell</span>
                    <span class="token class-name">Cell</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Optimistically create</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">casCellsBusy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">boolean</span> created <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>               <span class="token comment">// Recheck under lock</span>
                            <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs<span class="token punctuation">;</span> <span class="token keyword">int</span> m<span class="token punctuation">,</span> j<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rs <span class="token operator">=</span> cells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                                <span class="token punctuation">(</span>m <span class="token operator">=</span> rs<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
                                <span class="token comment">// \u5224\u65AD\u69FD\u4F4D\u786E\u5B9E\u662F\u7A7A\u7684</span>
                                rs<span class="token punctuation">[</span>j <span class="token operator">=</span> <span class="token punctuation">(</span>m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                rs<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">;</span>
                                created <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                            cellsBusy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>created<span class="token punctuation">)</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>           <span class="token comment">// Slot is now non-empty</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u6709\u7ADE\u4E89, \u6539\u53D8\u7EBF\u7A0B\u5BF9\u5E94\u7684 cell \u6765\u91CD\u8BD5 cas</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>wasUncontended<span class="token punctuation">)</span>
                    wasUncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token comment">// cas \u5C1D\u8BD5\u7D2F\u52A0, fn \u914D\u5408 LongAccumulator \u4E0D\u4E3A null, \u914D\u5408 LongAdder \u4E3A null</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> v <span class="token operator">+</span> x <span class="token operator">:</span> fn<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5982\u679C cells \u957F\u5EA6\u5DF2\u7ECF\u8D85\u8FC7\u4E86\u6700\u5927\u957F\u5EA6, \u6216\u8005\u5DF2\u7ECF\u6269\u5BB9, \u6539\u53D8\u7EBF\u7A0B\u5BF9\u5E94\u7684 cell \u6765\u91CD\u8BD5 cas</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> NCPU <span class="token operator">||</span> cells <span class="token operator">!=</span> as<span class="token punctuation">)</span>
                    collide <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token comment">// \u786E\u4FDD collide \u4E3A false \u8FDB\u5165\u6B64\u5206\u652F, \u5C31\u4E0D\u4F1A\u8FDB\u5165\u4E0B\u9762\u7684 else if \u8FDB\u884C\u6269\u5BB9\u4E86</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>collide<span class="token punctuation">)</span>
                    collide <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token comment">// \u52A0\u9501</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">casCellsBusy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u52A0\u9501\u6210\u529F, \u6269\u5BB9</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u6539\u53D8\u7EBF\u7A0B\u5BF9\u5E94\u7684 cell</span>
                h <span class="token operator">=</span> <span class="token function">advanceProbe</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u8FD8\u6CA1\u6709 cells, cells==as\u662F\u6307\u6CA1\u6709\u5176\u5B83\u7EBF\u7A0B\u4FEE\u6539cells\uFF0Cas\u548Ccells\u5F15\u7528\u76F8\u540C\u7684\u5BF9\u8C61\uFF0C\u4F7F\u7528casCellsBusy()\u5C1D\u8BD5\u7ED9 cellsBusy \u52A0\u9501</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cellsBusy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> cells <span class="token operator">==</span> as <span class="token operator">&amp;&amp;</span> <span class="token function">casCellsBusy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u52A0\u9501\u6210\u529F, \u521D\u59CB\u5316 cells, \u6700\u5F00\u59CB\u957F\u5EA6\u4E3A 2, \u5E76\u586B\u5145\u4E00\u4E2A cell</span>
                <span class="token comment">// \u6210\u529F\u5219 break;</span>
                <span class="token keyword">boolean</span> init <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>                           <span class="token comment">// Initialize table</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>cells <span class="token operator">==</span> as<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                        rs<span class="token punctuation">[</span>h <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cell</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        cells <span class="token operator">=</span> rs<span class="token punctuation">;</span>
                        init <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    cellsBusy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>init<span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u4E0A\u4E24\u79CD\u60C5\u51B5\u5931\u8D25, \u5C1D\u8BD5\u7ED9 base \u4F7F\u7528casBase\u7D2F\u52A0</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casBase</span><span class="token punctuation">(</span>v <span class="token operator">=</span> base<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> v <span class="token operator">+</span> x <span class="token operator">:</span> fn<span class="token punctuation">.</span><span class="token function">applyAsLong</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>longAccumulate \u6D41\u7A0B\u56FE</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209121603391.png" alt="1594825327345"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209121603388.png" alt="1594826082009"></p><p>\u6BCF\u4E2A\u7EBF\u7A0B\u521A\u8FDB\u5165 longAccumulate \u65F6\uFF0C\u4F1A\u5C1D\u8BD5\u5BF9\u5E94\u4E00\u4E2A cell \u5BF9\u8C61\uFF08\u627E\u5230\u4E00\u4E2A\u5751\u4F4D\uFF09</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181412392.png" alt="image-20220918141250320"></p><h5 id="sum-\u65B9\u6CD5\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#sum-\u65B9\u6CD5\u5206\u6790" aria-hidden="true">#</a> sum \u65B9\u6CD5\u5206\u6790</h5><p>\u83B7\u53D6\u6700\u7EC8\u7ED3\u679C\u901A\u8FC7 sum \u65B9\u6CD5\uFF0C\u5C06\u5404\u4E2A\u7D2F\u52A0\u5355\u5143\u7684\u503C\u52A0\u8D77\u6765\u5C31\u5F97\u5230\u4E86\u603B\u7684\u7ED3\u679C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> cells<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">long</span> sum <span class="token operator">=</span> base<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> as<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                sum <span class="token operator">+=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-8-unsafe" tabindex="-1"><a class="header-anchor" href="#_6-8-unsafe" aria-hidden="true">#</a> 6.8 Unsafe</h3><h4 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h4><p><strong>Unsafe \u5BF9\u8C61\u63D0\u4F9B\u4E86\u975E\u5E38\u5E95\u5C42\u7684\uFF0C\u64CD\u4F5C\u5185\u5B58\u3001\u7EBF\u7A0B\u7684\u65B9\u6CD5</strong>\uFF0CUnsafe \u5BF9\u8C61\u4E0D\u80FD\u76F4\u63A5\u8C03\u7528\uFF0C\u53EA\u80FD\u901A\u8FC7\u53CD\u5C04\u83B7\u5F97\u3002</p><p>LockSupport\u7684park\u65B9\u6CD5\uFF0Ccas\u76F8\u5173\u7684\u65B9\u6CD5\u5E95\u5C42\u90FD\u662F\u901A\u8FC7Unsafe\u7C7B\u6765\u5B9E\u73B0\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnsafeAccessor</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Unsafe</span> unsafe<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Field</span> theUnsafe <span class="token operator">=</span> <span class="token class-name">Unsafe</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;theUnsafe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            theUnsafe<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            unsafe <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Unsafe</span><span class="token punctuation">)</span> theUnsafe<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchFieldException</span> <span class="token operator">|</span> <span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Unsafe</span> <span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> unsafe<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="unsafe-cas-\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#unsafe-cas-\u64CD\u4F5C" aria-hidden="true">#</a> Unsafe CAS \u64CD\u4F5C</h4><ol><li>\u4F7F\u7528Unsafe \u8FDB\u884Ccas\u64CD\u4F5C</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test19</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchFieldException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Field</span> theUnsafe <span class="token operator">=</span> <span class="token class-name">Unsafe</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;theUnsafe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        theUnsafe<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BBE\u7F6E\u53EF\u8BBF\u95EE</span>
        <span class="token class-name">Unsafe</span> unsave <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Unsafe</span><span class="token punctuation">)</span> theUnsafe<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u56E0\u4E3A\u662F\u9759\u6001\u53D8\u91CF\uFF0C\u4E0D\u9700\u8981\u4F20\u5BF9\u8C61</span>
        <span class="token comment">// System.out.println(unsave);</span>

        <span class="token comment">// 1.\u83B7\u53D6\u57DF\u7684\u504F\u79FB\u5730\u5740\uFF0C\u53EF\u4EE5\u83B7\u53D6\u5230\u503C</span>
        <span class="token keyword">long</span> idOffset <span class="token operator">=</span> unsave<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span><span class="token class-name">Teacher</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> nameOffset <span class="token operator">=</span> unsave<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span><span class="token class-name">Teacher</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Teacher</span> teacher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Teacher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        unsave<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span>teacher<span class="token punctuation">,</span> idOffset<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        unsave<span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span>teacher<span class="token punctuation">,</span> nameOffset<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>teacher<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Teacher</span> <span class="token punctuation">{</span>
    <span class="token keyword">volatile</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Teacher{&quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;id=&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span>
            <span class="token string">&quot;, name=&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span>
            <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684 AtomicData \u5B9E\u73B0\u4E4B\u524D\u7EBF\u7A0B\u5B89\u5168\u7684\u539F\u5B50\u6574\u6570 \uFF0C\u5E76\u7528\u4E4B\u524D\u7684\u53D6\u6B3E\u5B9E\u4F8B\u6765\u8FDB\u884C\u9A8C\u8BC1</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test21</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Account</span><span class="token punctuation">.</span><span class="token function">demo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyAtomicInteger</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">MyAtomicInteger</span> <span class="token keyword">implements</span> <span class="token class-name">Account</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Unsafe</span> UNSAFE<span class="token punctuation">;</span> <span class="token comment">// Unsafe \u7C7B</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> value<span class="token punctuation">;</span> <span class="token comment">// volatile \u4FDD\u8BC1\u539F\u5B50\u6027</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> valueOffset<span class="token punctuation">;</span> <span class="token comment">// \u57DF\u504F\u79FB\u91CF\uFF0C\u53EF\u4EE5\u627E\u5230\u5BF9\u5E94\u7684\u503C</span>

    <span class="token keyword">public</span> <span class="token class-name">MyAtomicInteger</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        UNSAFE <span class="token operator">=</span> <span class="token class-name">UnsafeAccessor</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            valueOffset <span class="token operator">=</span> UNSAFE<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span><span class="token class-name">MyAtomicInteger</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchFieldException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">decrease</span><span class="token punctuation">(</span><span class="token keyword">int</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> next <span class="token operator">=</span> cur <span class="token operator">-</span> amount<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> cur<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">decrease</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-9-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_6-9-\u603B\u7ED3" aria-hidden="true">#</a> 6.9 \u603B\u7ED3</h3><ol><li>CAS \u4E0E volatile</li><li>juc\u5305\u4E0BAPI <ol><li>\u539F\u5B50\u6574\u6570</li><li>\u539F\u5B50\u5F15\u7528</li><li>\u539F\u5B50\u6570\u7EC4</li><li>\u5B57\u6BB5\u66F4\u65B0\u5668</li><li>\u539F\u5B50\u7D2F\u52A0\u5668</li></ol></li><li>Unsafe</li><li>\u539F\u7406\u65B9\u9762 <ol><li>LongAdder \u6E90\u7801</li><li>\u4F2A\u5171\u4EAB</li></ol></li></ol><h2 id="_7-\u5171\u4EAB\u6A21\u578B\u4E4B\u4E0D\u53EF\u53D8" tabindex="-1"><a class="header-anchor" href="#_7-\u5171\u4EAB\u6A21\u578B\u4E4B\u4E0D\u53EF\u53D8" aria-hidden="true">#</a> 7.\u5171\u4EAB\u6A21\u578B\u4E4B\u4E0D\u53EF\u53D8</h2><h3 id="_7-1-\u65E5\u671F\u8F6C\u6362\u7684\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_7-1-\u65E5\u671F\u8F6C\u6362\u7684\u95EE\u9898" aria-hidden="true">#</a> 7.1 \u65E5\u671F\u8F6C\u6362\u7684\u95EE\u9898</h3><p>\u95EE\u9898\u63D0\u51FA\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u5728\u8FD0\u884C\u65F6\uFF0C\u7531\u4E8E SimpleDateFormat \u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u6709\u5F88\u5927\u51E0\u7387\u51FA\u73B0 <code>java.lang.NumberFormatException</code> \u6216\u8005\u51FA\u73B0\u4E0D\u6B63\u786E\u7684\u65E5\u671F\u89E3\u6790\u7ED3\u679C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">SimpleDateFormat</span> sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> sdf<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;1951-04-21&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FA\u73B0\u5F02\u5E38</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181625273.png" alt="image-20220918162528209"></p><p>\u601D\u8DEF - \u4E0D\u53EF\u53D8\u5BF9\u8C61</p><p>\u5982\u679C\u4E00\u4E2A\u5BF9\u8C61\u5728\u4E0D\u80FD\u591F\u4FEE\u6539\u5176\u5185\u90E8\u72B6\u6001\uFF08\u5C5E\u6027\uFF09\uFF0C\u90A3\u4E48\u5B83\u5C31\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u56E0\u4E3A\u4E0D\u5B58\u5728\u5E76\u53D1\u4FEE\u6539\u554A\uFF01\u8FD9\u6837\u7684\u5BF9\u8C61\u5728 Java \u4E2D\u6709\u5F88\u591A</p><p>\u4F8B\u5982\u5728 Java 8 \u540E\uFF0C\u63D0\u4F9B\u4E86\u4E00\u4E2A\u65B0\u7684\u65E5\u671F\u683C\u5F0F\u5316\u7C7BDateTimeFormatter</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181626431.png" alt="image-20220918162638378"></p><p>\u4F7F\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">DateTimeFormatter</span> stf <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">TemporalAccessor</span> parse <span class="token operator">=</span> stf<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;1951-04-21&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> parse<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181628581.png" alt="image-20220918162803529"></p><h3 id="_7-2-\u4E0D\u53EF\u53D8\u8BBE\u8BA1" tabindex="-1"><a class="header-anchor" href="#_7-2-\u4E0D\u53EF\u53D8\u8BBE\u8BA1" aria-hidden="true">#</a> 7.2 \u4E0D\u53EF\u53D8\u8BBE\u8BA1</h3>`,158),k=s("\u66F4\u591A\u4E0D\u53EF\u53D8\u7C7B\u7684\u77E5\u8BC6\uFF0C\u53EF\u53C2\u8003\u8FD9"),r={href:"https://www.cnblogs.com/dolphin0520/p/10693891.html",target:"_blank",rel:"noopener noreferrer"},d=s("\u8FD9\u91CC"),m=s("final\u7C7B\u7684\u77E5\u8BC6\uFF0C\u53C2\u8003"),v={href:"https://www.cnblogs.com/xiaoxi/p/6392154.html",target:"_blank",rel:"noopener noreferrer"},b=s("\u8FD9\u91CC"),g=t(`<p>\u53E6\u4E00\u4E2A\u5927\u5BB6\u66F4\u4E3A\u719F\u6089\u7684 String \u7C7B\u4E5F\u662F\u4E0D\u53EF\u53D8\u7684\uFF0C\u4EE5\u5B83\u4E3A\u4F8B\uFF0C\u8BF4\u660E\u4E00\u4E0B\u4E0D\u53EF\u53D8\u7C7B<strong>\u8BBE\u8BA1\u7684\u8981\u7D20</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">String</span>
    <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">CharSequence</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** The value is used for character storage. */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">char</span> value<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** Cache the hash code for the string */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span> <span class="token comment">// Default to 0</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="final-\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#final-\u7684\u4F7F\u7528" aria-hidden="true">#</a> final \u7684\u4F7F\u7528</h4><p>\u53D1\u73B0\u8BE5\u7C7B\u3001\u7C7B\u4E2D\u6240\u6709\u5C5E\u6027\u90FD\u662F final \u7684</p><ul><li>\u5C5E\u6027\u7528 final \u4FEE\u9970\u4FDD\u8BC1\u4E86\u8BE5\u5C5E\u6027\u662F\u53EA\u8BFB\u7684\uFF0C\u4E0D\u80FD\u4FEE\u6539</li><li>\u7C7B\u7528 final \u4FEE\u9970\u4FDD\u8BC1\u4E86\u8BE5\u7C7B\u4E2D\u7684\u65B9\u6CD5\u4E0D\u80FD\u88AB\u8986\u76D6\uFF0C\u9632\u6B62\u5B50\u7C7B\u65E0\u610F\u95F4\u7834\u574F\u4E0D\u53EF\u53D8\u6027\u3002</li></ul><h4 id="\u4FDD\u62A4\u6027\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u4FDD\u62A4\u6027\u62F7\u8D1D" aria-hidden="true">#</a> \u4FDD\u62A4\u6027\u62F7\u8D1D</h4><p>\u4F46\u6709\u540C\u5B66\u4F1A\u8BF4\uFF0C\u4F7F\u7528\u5B57\u7B26\u4E32\u65F6\uFF0C\u4E5F\u6709\u4E00\u4E9B\u8DDF\u4FEE\u6539\u76F8\u5173\u7684\u65B9\u6CD5\u554A\uFF0C\u6BD4\u5982 substring \u7B49\uFF0C\u90A3\u4E48\u4E0B\u9762\u5C31\u770B\u4E00\u770B\u8FD9\u4E9B\u65B9\u6CD5\u662F\u5982\u4F55\u5B9E\u73B0\u7684\uFF0C\u5C31\u4EE5 substring \u4E3A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">substring</span><span class="token punctuation">(</span><span class="token keyword">int</span> beginIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>beginIndex <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">StringIndexOutOfBoundsException</span><span class="token punctuation">(</span>beginIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>endIndex <span class="token operator">&gt;</span> value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">StringIndexOutOfBoundsException</span><span class="token punctuation">(</span>endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> subLen <span class="token operator">=</span> endIndex <span class="token operator">-</span> beginIndex<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>subLen <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">StringIndexOutOfBoundsException</span><span class="token punctuation">(</span>subLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4E0A\u9762\u662F\u4E00\u4E9B\u6821\u9A8C\uFF0C\u4E0B\u9762\u624D\u662F\u771F\u6B63\u7684\u521B\u5EFA\u65B0\u7684String\u5BF9\u8C61</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>beginIndex <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>endIndex <span class="token operator">==</span> value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">this</span>
        <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> beginIndex<span class="token punctuation">,</span> subLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D1\u73B0\u5176\u5185\u90E8\u662F\u8C03\u7528 String \u7684\u6784\u9020\u65B9\u6CD5\u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0\u5B57\u7B26\u4E32\uFF0C\u518D\u8FDB\u5165\u8FD9\u4E2A\u6784\u9020\u770B\u770B\uFF0C\u662F\u5426\u5BF9 final char[] value \u505A\u51FA\u4E86\u4FEE\u6539</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token keyword">char</span> value<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> offset<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>offset <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">StringIndexOutOfBoundsException</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">StringIndexOutOfBoundsException</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>offset <span class="token operator">&lt;=</span> value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Note: offset or count might be near -1&gt;&gt;&gt;1.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>offset <span class="token operator">&gt;</span> value<span class="token punctuation">.</span>length <span class="token operator">-</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">StringIndexOutOfBoundsException</span><span class="token punctuation">(</span>offset <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4E0A\u9762\u662F\u4E00\u4E9B\u5B89\u5168\u6027\u7684\u6821\u9A8C\uFF0C\u4E0B\u9762\u662F\u7ED9String\u5BF9\u8C61\u7684value\u8D4B\u503C\uFF0C\u65B0\u521B\u5EFA\u4E86\u4E00\u4E2A\u6570\u7EC4\u6765\u4FDD\u5B58String\u5BF9\u8C61\u7684\u503C</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> offset<span class="token punctuation">,</span> offset<span class="token operator">+</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\u53D1\u73B0\u4E5F\u6CA1\u6709\uFF0C\u6784\u9020\u65B0\u5B57\u7B26\u4E32\u5BF9\u8C61\u65F6\uFF0C\u4F1A\u751F\u6210\u65B0\u7684 char[] value\uFF0C\u5BF9\u5185\u5BB9\u8FDB\u884C\u590D\u5236\u3002\u8FD9\u79CD\u901A\u8FC7\u521B\u5EFA\u526F\u672C\u5BF9\u8C61\u6765\u907F\u514D\u5171\u4EAB\u7684\u624B\u6BB5\u79F0\u4E4B\u4E3A\u3010\u4FDD\u62A4\u6027\u62F7\u8D1D\uFF08defensive copy\uFF09\u3011</p><h4 id="\u6A21\u5F0F\u4E4B\u4EAB\u5143" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F\u4E4B\u4EAB\u5143" aria-hidden="true">#</a> \u6A21\u5F0F\u4E4B\u4EAB\u5143</h4><h5 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1.\u7B80\u4ECB</h5><p>\u5B9A\u4E49 \u82F1\u6587\u540D\u79F0\uFF1AFlyweight pattern. \u5F53\u9700\u8981\u91CD\u7528\u6570\u91CF\u6709\u9650\u7684\u540C\u4E00\u7C7B\u5BF9\u8C61\u65F6</p><blockquote><p>wikipedia\uFF1A A flyweight is an object that minimizes memory usage by sharing as much data as possible with other similar objects</p></blockquote><h5 id="_2-\u4F53\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-\u4F53\u73B0" aria-hidden="true">#</a> 2.\u4F53\u73B0</h5><h6 id="_2-1-\u5305\u88C5\u7C7B" tabindex="-1"><a class="header-anchor" href="#_2-1-\u5305\u88C5\u7C7B" aria-hidden="true">#</a> 2.1 \u5305\u88C5\u7C7B</h6><p>\u5728JDK\u4E2D Boolean\uFF0CByte\uFF0CShort\uFF0CInteger\uFF0CLong\uFF0CCharacter \u7B49\u5305\u88C5\u7C7B\u63D0\u4F9B\u4E86 valueOf \u65B9\u6CD5\uFF0C\u4F8B\u5982 Long \u7684valueOf \u4F1A\u7F13\u5B58 -128~127 \u4E4B\u95F4\u7684 Long \u5BF9\u8C61\uFF0C\u5728\u8FD9\u4E2A\u8303\u56F4\u4E4B\u95F4\u4F1A\u91CD\u7528\u5BF9\u8C61\uFF0C\u5927\u4E8E\u8FD9\u4E2A\u8303\u56F4\uFF0C\u624D\u4F1A\u65B0\u5EFA Long \u5BF9\u8C61\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Long</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">long</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> offset <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;=</span> <span class="token operator">-</span><span class="token number">128</span> <span class="token operator">&amp;&amp;</span> l <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// will cache</span>
        <span class="token keyword">return</span> <span class="token class-name">LongCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>l <span class="token operator">+</span> offset<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Byte, Short, Long \u7F13\u5B58\u7684\u8303\u56F4\u90FD\u662F -128~127</p><p>Character \u7F13\u5B58\u7684\u8303\u56F4\u662F 0~127</p><p>Integer\u7684\u9ED8\u8BA4\u8303\u56F4\u662F -128~127\uFF0C\u6700\u5C0F\u503C\u4E0D\u80FD\u53D8\uFF0C\u4F46\u6700\u5927\u503C\u53EF\u4EE5\u901A\u8FC7\u8C03\u6574\u865A\u62DF\u673A\u53C2\u6570 <code> &quot;-Djava.lang.Integer.IntegerCache.high</code> &quot;\u6765\u6539\u53D8</p><p>Boolean \u7F13\u5B58\u4E86 TRUE \u548C FALSE</p></blockquote><h6 id="_2-2-string-\u4E32\u6C60" tabindex="-1"><a class="header-anchor" href="#_2-2-string-\u4E32\u6C60" aria-hidden="true">#</a> 2.2 String \u4E32\u6C60</h6><p>jvm\u8BFE\u7A0B\u4E2D\u5DF2\u7ECF\u8BE6\u7EC6\u8BB2\u8FC7\uFF0C\u8FD9\u91CC\u4E0D\u518D\u8D58\u8FF0</p><h6 id="_2-3-bigdecimal-biginteger" tabindex="-1"><a class="header-anchor" href="#_2-3-bigdecimal-biginteger" aria-hidden="true">#</a> 2.3 BigDecimal BigInteger</h6><p>\u65E2\u7136 BigDecimal \u662F\u4E0D\u53EF\u53D8\u7C7B\uFF0C\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u90A3\u4E48\u6211\u4EEC\u4E4B\u524D\u53D6\u6B3E\u7684\u6848\u4F8B\u4E3A\u4EC0\u4E48\u9700\u8981 AtomicReference \u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">DecimalAccountCas</span> <span class="token keyword">implements</span> <span class="token class-name">DecimalAccount</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BigDecimal</span><span class="token punctuation">&gt;</span></span> balance<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">DecimalAccountCas</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> balance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        this.balance = balance;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>balance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> balance<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

   	<span class="token comment">// \u53D6\u6B3E</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">BigDecimal</span> prev <span class="token operator">=</span> balance<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D6\u503C</span>
            <span class="token class-name">BigDecimal</span> next <span class="token operator">=</span> prev<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u51CF\u6CD5</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>balance<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u56E0\u4E3A\u6211\u4EEC\u5728\u53D6\u6B3E\u65F6\u6709\u591A\u4E2A\u64CD\u4F5C\uFF0CBigDecimal \u53EA\u80FD\u4FDD\u8BC1\u5355\u4E2A\u65B9\u6CD5\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u4E0D\u80FD\u4FDD\u8BC1\u65B9\u6CD5\u7684\u7EC4\u5408\u662F\u7EBF\u7A0B\u5B89\u5168\u7684</p><h5 id="_3-diy" tabindex="-1"><a class="header-anchor" href="#_3-diy" aria-hidden="true">#</a> 3.DIY</h5><p>\u4E00\u4E2A\u7EBF\u4E0A\u5546\u57CE\u5E94\u7528\uFF0CQPS \u8FBE\u5230\u6570\u5343\uFF0C\u5982\u679C\u6BCF\u6B21\u90FD\u91CD\u65B0\u521B\u5EFA\u548C\u5173\u95ED\u6570\u636E\u5E93\u8FDE\u63A5\uFF0C\u6027\u80FD\u4F1A\u53D7\u5230\u6781\u5927\u5F71\u54CD\u3002 \u8FD9\u65F6\u9884\u5148\u521B\u5EFA\u597D\u4E00\u6279\u8FDE\u63A5\uFF0C\u653E\u5165\u8FDE\u63A5\u6C60\u3002\u4E00\u6B21\u8BF7\u6C42\u5230\u8FBE\u540E\uFF0C\u4ECE\u8FDE\u63A5\u6C60\u83B7\u53D6\u8FDE\u63A5\uFF0C\u4F7F\u7528\u5B8C\u6BD5\u540E\u518D\u8FD8\u56DE\u8FDE\u63A5\u6C60\uFF0C\u8FD9\u6837\u65E2\u8282\u7EA6\u4E86\u8FDE\u63A5\u7684\u521B\u5EFA\u548C\u5173\u95ED\u65F6\u95F4\uFF0C\u4E5F\u5B9E\u73B0\u4E86\u8FDE\u63A5\u7684\u91CD\u7528\uFF0C\u4E0D\u81F3\u4E8E\u8BA9\u5E9E\u5927\u7684\u8FDE\u63A5\u6570\u538B\u57AE\u6570\u636E\u5E93\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Pool</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. \u8FDE\u63A5\u6C60\u5927\u5C0F</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> poolSize<span class="token punctuation">;</span>
    <span class="token comment">// 2. \u8FDE\u63A5\u5BF9\u8C61\u6570\u7EC4</span>
    <span class="token keyword">private</span> <span class="token class-name">Connection</span><span class="token punctuation">[</span><span class="token punctuation">]</span> connections<span class="token punctuation">;</span>
    <span class="token comment">// 3. \u8FDE\u63A5\u72B6\u6001\u6570\u7EC4 0 \u8868\u793A\u7A7A\u95F2\uFF0C 1 \u8868\u793A\u7E41\u5FD9</span>
    <span class="token keyword">private</span> <span class="token class-name">AtomicIntegerArray</span> states<span class="token punctuation">;</span> <span class="token comment">// \u82E5\u4F7F\u7528 int[] \u4E0D\u80FD\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168</span>
    <span class="token comment">// 4. \u6784\u9020\u65B9\u6CD5\u521D\u59CB\u5316</span>
    <span class="token keyword">public</span> <span class="token class-name">Pool</span><span class="token punctuation">(</span><span class="token keyword">int</span> poolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>poolSize <span class="token operator">=</span> poolSize<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>connections <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connection</span><span class="token punctuation">[</span>poolSize<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>states <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicIntegerArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>poolSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> poolSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            connections<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MockConnection</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDE\u63A5&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 5. \u501F\u8FDE\u63A5</span>
    <span class="token keyword">public</span> <span class="token class-name">Connection</span> <span class="token function">borrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> poolSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u83B7\u53D6\u7A7A\u95F2\u8FDE\u63A5</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>states<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// states.set(i, 1); \u7EBF\u7A0B\u4E0D\u5B89\u5168</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>states<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;borrow {}&quot;</span><span class="token punctuation">,</span> connections<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> connections<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5982\u679C\u6CA1\u6709\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5F53\u524D\u7EBF\u7A0B\u8FDB\u5165\u7B49\u5F85\uFF0C\u9632\u6B62\u4E86 CPU \u7A7A\u8F6C</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;wait...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 6. \u5F52\u8FD8\u8FDE\u63A5</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">free</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> poolSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>connections<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                states<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;free {}&quot;</span><span class="token punctuation">,</span> conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">MockConnection</span> <span class="token keyword">implements</span> <span class="token class-name">Connection</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9E\u73B0\u7565</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u8FDE\u63A5\u6C60\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test20</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pool</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">Connection</span> connection <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">borrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                pool<span class="token punctuation">.</span><span class="token function">free</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181812981.png" alt="image-20220918181229907"></p><p>\u4EE5\u4E0A\u5B9E\u73B0\u6CA1\u6709\u8003\u8651\uFF1A</p><ul><li>\u8FDE\u63A5\u7684\u52A8\u6001\u589E\u957F\u4E0E\u6536\u7F29</li><li>\u8FDE\u63A5\u4FDD\u6D3B\uFF08\u53EF\u7528\u6027\u68C0\u6D4B\uFF09</li><li>\u7B49\u5F85\u8D85\u65F6\u5904\u7406</li><li>\u5206\u5E03\u5F0F hash</li></ul><p>\u5BF9\u4E8E\u5173\u7CFB\u578B\u6570\u636E\u5E93\uFF0C\u6709\u6BD4\u8F83\u6210\u719F\u7684\u8FDE\u63A5\u6C60\u5B9E\u73B0\uFF0C\u4F8B\u5982c3p0, druid\u7B49</p><p>\u5BF9\u4E8E\u66F4\u901A\u7528\u7684\u5BF9\u8C61\u6C60\uFF0C\u53EF\u4EE5\u8003\u8651\u4F7F\u7528apache commons pool\uFF0C\u4F8B\u5982redis\u8FDE\u63A5\u6C60\u53EF\u4EE5\u53C2\u8003jedis\u4E2D\u5173\u4E8E\u8FDE\u63A5\u6C60\u7684\u5B9E\u73B0</p><h4 id="final\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#final\u7684\u539F\u7406" aria-hidden="true">#</a> final\u7684\u539F\u7406</h4><h5 id="_1-\u8BBE\u7F6E-final-\u53D8\u91CF\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_1-\u8BBE\u7F6E-final-\u53D8\u91CF\u7684\u539F\u7406" aria-hidden="true">#</a> 1.\u8BBE\u7F6E final \u53D8\u91CF\u7684\u539F\u7406</h5><p>\u7406\u89E3\u4E86 volatile \u539F\u7406\uFF0C\u518D\u5BF9\u6BD4 final \u7684\u5B9E\u73B0\u5C31\u6BD4\u8F83\u7B80\u5355\u4E86</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestFinal</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B57\u8282\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">0</span><span class="token operator">:</span> aload_0
<span class="token number">1</span><span class="token operator">:</span> invokespecial ##<span class="token number">1</span> <span class="token comment">// Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
<span class="token number">4</span><span class="token operator">:</span> aload_0
<span class="token number">5</span><span class="token operator">:</span> bipush <span class="token number">20</span>
<span class="token number">7</span><span class="token operator">:</span> putfield ##<span class="token number">2</span> <span class="token comment">// Field a:I</span>
 	<span class="token operator">&lt;</span><span class="token operator">--</span> \u5199\u5C4F\u969C
<span class="token number">10</span><span class="token operator">:</span> <span class="token keyword">return</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>final\u53D8\u91CF\u7684\u8D4B\u503C\u64CD\u4F5C\u90FD\u5FC5\u987B\u5728\u5B9A\u4E49\u65F6\u6216\u8005\u6784\u9020\u5668\u4E2D\u8FDB\u884C\u521D\u59CB\u5316\u8D4B\u503C\uFF0C\u5E76\u53D1\u73B0 final \u53D8\u91CF\u7684\u8D4B\u503C\u4E5F\u4F1A\u901A\u8FC7 putfield \u6307\u4EE4\u6765\u5B8C\u6210\uFF0C\u540C\u6837\u5728\u8FD9\u6761\u6307\u4EE4\u4E4B\u540E\u4E5F\u4F1A\u52A0\u5165\u5199\u5C4F\u969C\uFF0C\u4FDD\u8BC1\u5728\u5176\u5B83\u7EBF\u7A0B\u8BFB\u5230\u5B83\u7684\u503C\u65F6\u4E0D\u4F1A\u51FA\u73B0\u4E3A 0 \u7684\u60C5\u51B5\u3002</p><h5 id="_2-\u83B7\u53D6-final-\u53D8\u91CF\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_2-\u83B7\u53D6-final-\u53D8\u91CF\u7684\u539F\u7406" aria-hidden="true">#</a> 2.\u83B7\u53D6 final \u53D8\u91CF\u7684\u539F\u7406</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestFinal</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">A</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">B</span> <span class="token operator">=</span> <span class="token class-name">Short</span><span class="token punctuation">.</span>MAX_VALUE<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">final</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>

    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
        <span class="token keyword">class</span> <span class="token class-name">Task</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">UseFinal1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">TestFinal<span class="token punctuation">.</span>A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">TestFinal<span class="token punctuation">.</span>B</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TestFinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TestFinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">TestFinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">UseFinal2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">TestFinal<span class="token punctuation">.</span>A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u52A0 final</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181918729.png" alt="image-20220918191852626"></p><p>\u4E0D\u52A0 final\uFF0C\u9700\u8981\u4ECE\u53E6\u4E00\u4E2A\u7C7B\u4E2D\u53D6\u503C</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181918084.png" alt="image-20220918191821923"></p><p>\u53D6\u503C\u8D85\u8FC7\u6781\u9650</p><p>\u52A0 final</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181919468.png" alt="image-20220918191947345"></p><p>\u4E0D\u52A0 final</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209181921095.png" alt="image-20220918192100969"></p><h3 id="_7-3-\u65E0\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#_7-3-\u65E0\u72B6\u6001" aria-hidden="true">#</a> 7.3 \u65E0\u72B6\u6001</h3><p>\u5728 web \u9636\u6BB5\u5B66\u4E60\u65F6\uFF0C\u8BBE\u8BA1 Servlet \u65F6\u4E3A\u4E86\u4FDD\u8BC1\u5176\u7EBF\u7A0B\u5B89\u5168\uFF0C\u90FD\u4F1A\u6709\u8FD9\u6837\u7684\u5EFA\u8BAE\uFF0C\u4E0D\u8981\u4E3A Servlet \u8BBE\u7F6E\u6210\u5458\u53D8\u91CF\uFF0C\u8FD9\u79CD\u6CA1\u6709\u4EFB\u4F55\u6210\u5458\u53D8\u91CF\u7684\u7C7B\u662F\u7EBF\u7A0B\u5B89\u5168\u7684</p><p>\u56E0\u4E3A\u6210\u5458\u53D8\u91CF\u4FDD\u5B58\u7684\u6570\u636E\u4E5F\u53EF\u4EE5\u79F0\u4E3A\u72B6\u6001\u4FE1\u606F\uFF0C\u56E0\u6B64\u6CA1\u6709\u6210\u5458\u53D8\u91CF\u5C31\u79F0\u4E4B\u4E3A\u3010\u65E0\u72B6\u6001\u3011</p><h3 id="_7-4-\u672C\u7AE0\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#_7-4-\u672C\u7AE0\u5C0F\u7ED3" aria-hidden="true">#</a> 7.4 \u672C\u7AE0\u5C0F\u7ED3</h3><ol><li>\u4E0D\u53EF\u53D8\u7C7B\u4F7F\u7528</li><li>\u4E0D\u53EF\u53D8\u7C7B\u8BBE\u8BA1</li><li>\u539F\u7406\u65B9\u9762\uFF1Afinal</li><li>\u6A21\u5F0F\u65B9\u9762 <ol><li>\u4EAB\u5143\u6A21\u5F0F-&gt; \u8BBE\u7F6E\u7EBF\u7A0B\u6C60</li></ol></li></ol>`,60);function y(w,f){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("blockquote",null,[n("ol",null,[n("li",null,[k,n("a",r,[d,p(a)])]),n("li",null,[m,n("a",v,[b,p(a)])])])]),g])}var x=e(i,[["render",y],["__file","juc03.html.vue"]]);export{x as default};
