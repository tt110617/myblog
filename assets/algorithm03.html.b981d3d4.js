import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c,a as n,b as p,d as t,e as s,r as l}from"./app.6a2d513d.js";const i={},u=t('<h1 id="\u7B2C\u4E09\u7AE0-\u5FC5\u77E5\u5FC5\u4F1A\u7B97\u6CD5\u6280\u5DE7" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u7AE0-\u5FC5\u77E5\u5FC5\u4F1A\u7B97\u6CD5\u6280\u5DE7" aria-hidden="true">#</a> \u7B2C\u4E09\u7AE0 \u5FC5\u77E5\u5FC5\u4F1A\u7B97\u6CD5\u6280\u5DE7</h1><h2 id="_1-\u66B4\u529B\u641C\u7D22\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u66B4\u529B\u641C\u7D22\u7B97\u6CD5" aria-hidden="true">#</a> 1.\u66B4\u529B\u641C\u7D22\u7B97\u6CD5</h2><h3 id="_1-1-\u56DE\u6EAF\u7B97\u6CD5\u89E3\u9898\u5957\u8DEF\u6846\u67B6" tabindex="-1"><a class="header-anchor" href="#_1-1-\u56DE\u6EAF\u7B97\u6CD5\u89E3\u9898\u5957\u8DEF\u6846\u67B6" aria-hidden="true">#</a> 1.1 \u56DE\u6EAF\u7B97\u6CD5\u89E3\u9898\u5957\u8DEF\u6846\u67B6</h3><p>\u5E9F\u8BDD\u4E0D\u591A\u8BF4\uFF0C\u76F4\u63A5\u4E0A\u56DE\u6EAF\u7B97\u6CD5\u6846\u67B6\uFF0C\u89E3\u51B3\u4E00\u4E2A\u56DE\u6EAF\u95EE\u9898\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u4E00\u4E2A\u51B3\u7B56\u6811\u7684\u904D\u5386\u8FC7\u7A0B\uFF0C\u7AD9\u5728\u56DE\u6EAF\u6811\u7684\u4E00\u4E2A\u8282\u70B9\u4E0A\uFF0C\u4F60\u53EA\u9700\u8981\u601D\u8003 3 \u4E2A\u95EE\u9898\uFF1A</p><p><strong>1\u3001\u8DEF\u5F84\uFF1A\u4E5F\u5C31\u662F\u5DF2\u7ECF\u505A\u51FA\u7684\u9009\u62E9\u3002</strong></p><p><strong>2\u3001\u9009\u62E9\u5217\u8868\uFF1A\u4E5F\u5C31\u662F\u4F60\u5F53\u524D\u53EF\u4EE5\u505A\u7684\u9009\u62E9\u3002</strong></p><p><strong>3\u3001\u7ED3\u675F\u6761\u4EF6\uFF1A\u4E5F\u5C31\u662F\u5230\u8FBE\u51B3\u7B56\u6811\u5E95\u5C42\uFF0C\u65E0\u6CD5\u518D\u505A\u9009\u62E9\u7684\u6761\u4EF6\u3002</strong></p>',7),k={id:"_46-\u5168\u6392\u5217",tabindex:"-1"},r=n("a",{class:"header-anchor",href:"#_46-\u5168\u6392\u5217","aria-hidden":"true"},"#",-1),d=s(),m={href:"https://leetcode.cn/problems/permutations/",target:"_blank",rel:"noopener noreferrer"},v=s("46. \u5168\u6392\u5217"),b=t(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u4E0D\u542B\u91CD\u590D\u6570\u5B57\u7684\u6570\u7EC4 nums \uFF0C\u8FD4\u56DE\u5176 \u6240\u6709\u53EF\u80FD\u7684\u5168\u6392\u5217 \u3002\u4F60\u53EF\u4EE5 \u6309\u4EFB\u610F\u987A\u5E8F \u8FD4\u56DE\u7B54\u6848\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [1,2,3] \u8F93\u51FA\uFF1A[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</p><blockquote><p>\u56DE\u6EAF\u7B97\u6CD5\u601D\u8DEF\uFF1A</p><p>1.\u5B9A\u4E49 track \u96C6\u5408\u8868\u793A\u8DEF\u5F84\uFF0Cused\u6570\u7EC4\u8868\u793A\u5DF2\u7ECF\u904D\u5386\u8FC7\u7684\u5143\u7D20</p><p>2.\u7ED3\u675F\u6761\u4EF6\uFF1A\u8DEF\u5F84\u4E2D\u7684\u5143\u7D20\u4E2A\u6570\u548C nums \u76F8\u7B49</p><p>3.\u904D\u5386\u6570\u7EC4</p><p>4.\u5982\u679C\u5DF2\u7ECF\u4F7F\u7528\u8FC7\uFF0Ccontinue</p><p>5.\u9009\u62E9\uFF1A\u52A0\u5165\u8DEF\u5F84\uFF0C\u4FEE\u6539 used</p><p>6.\u56DE\u6EAF</p><p>7.\u64A4\u9500\u9009\u62E9\uFF1A\u79FB\u51FA\u8DEF\u5F84\uFF0C\u4FEE\u6539 used</p></blockquote><p><img src="https://tuchuang-tt110617.oss-cn-shenzhen.aliyuncs.com/img/202209021715403.png" alt="image-20220902105237593"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">permute</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u5B9A\u4E49 track \u96C6\u5408\u8868\u793A\u8DEF\u5F84\uFF0Cused\u6570\u7EC4\u8868\u793A\u5DF2\u7ECF\u904D\u5386\u8FC7\u7684\u5143\u7D20</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> track <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> used <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> track<span class="token punctuation">,</span> used<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> track<span class="token punctuation">,</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> used<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 2.\u7ED3\u675F\u6761\u4EF6\uFF1A\u8DEF\u5F84\u4E2D\u7684\u5143\u7D20\u4E2A\u6570\u548C nums \u76F8\u7B49</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> track<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>track<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// --------- \u6CE8\u610F\uFF1A\u8FD9\u91CC\u9700\u8981\u91CD\u65B0new\uFF0C\u4E0D\u7136\u540E\u9762\u7684 track \u90FD\u662F\u5171\u4EAB\u4E00\u5757\u7A7A\u95F4</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.\u904D\u5386\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 4.\u5982\u679C\u5DF2\u7ECF\u4F7F\u7528\u8FC7\uFF0Ccontinue</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token comment">// 5.\u9009\u62E9\uFF1A\u52A0\u5165\u8DEF\u5F84\uFF0C\u4FEE\u6539 used</span>
            track<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token comment">// 6.\u8FDB\u5165\u4E0B\u4E00\u5C42\u51B3\u7B56\u6811</span>
            <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> track<span class="token punctuation">,</span> used<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 7.\u64A4\u9500\u9009\u62E9\uFF1A\u79FB\u51FA\u8DEF\u5F84\uFF0C\u4FEE\u6539 used       </span>
            track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),g={id:"_51-n-\u7687\u540E",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#_51-n-\u7687\u540E","aria-hidden":"true"},"#",-1),w=s(),y={href:"https://leetcode.cn/problems/n-queens/",target:"_blank",rel:"noopener noreferrer"},f=s("51. N \u7687\u540E"),_=t(`<p>\u6309\u7167\u56FD\u9645\u8C61\u68CB\u7684\u89C4\u5219\uFF0C\u7687\u540E\u53EF\u4EE5\u653B\u51FB\u4E0E\u4E4B\u5904\u5728\u540C\u4E00\u884C\u6216\u540C\u4E00\u5217\u6216\u540C\u4E00\u659C\u7EBF\u4E0A\u7684\u68CB\u5B50\u3002</p><p>n \u7687\u540E\u95EE\u9898 \u7814\u7A76\u7684\u662F\u5982\u4F55\u5C06 n \u4E2A\u7687\u540E\u653E\u7F6E\u5728 n\xD7n \u7684\u68CB\u76D8\u4E0A\uFF0C\u5E76\u4E14\u4F7F\u7687\u540E\u5F7C\u6B64\u4E4B\u95F4\u4E0D\u80FD\u76F8\u4E92\u653B\u51FB\u3002</p><p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570 n \uFF0C\u8FD4\u56DE\u6240\u6709\u4E0D\u540C\u7684 n \u7687\u540E\u95EE\u9898 \u7684\u89E3\u51B3\u65B9\u6848\u3002</p><p>\u6BCF\u4E00\u79CD\u89E3\u6CD5\u5305\u542B\u4E00\u4E2A\u4E0D\u540C\u7684 n \u7687\u540E\u95EE\u9898 \u7684\u68CB\u5B50\u653E\u7F6E\u65B9\u6848\uFF0C\u8BE5\u65B9\u6848\u4E2D &#39;Q&#39; \u548C &#39;.&#39; \u5206\u522B\u4EE3\u8868\u4E86\u7687\u540E\u548C\u7A7A\u4F4D\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209282341566.png" alt="image-20220928234105435"></p><blockquote><p>\u56DE\u6EAF\u601D\u8DEF\uFF1A</p><p>\u8DEF\u5F84\uFF1A\u5C0F\u4E8E row \u7684\u884C\u90FD\u5DF2\u7ECF\u6210\u529F\u9632\u6B62\u7687\u540E</p><p>\u9009\u62E9\uFF1Arow \u884C\u6240\u6709\u7684\u4F4D\u7F6E\u90FD\u53EF\u4EE5\u9009\u62E9</p><p>\u7ED3\u675F\u6761\u4EF6\uFF1Arow == n</p><p>1.\u5B9A\u4E49\u4E8C\u7EF4\u6570\u7EC4 board \u6A21\u62DF\u68CB\u76D8</p><p>2.\u521D\u59CB\u5316 board \u4E3A .</p><p>3.\u8C03\u7528 backtrack(board, 0)</p><p>4.\u7ED3\u675F\u6761\u4EF6\uFF1Arow == n</p><p>5.\u904D\u5386 row \u884C</p><p>6.\u5224\u65AD\u662F\u5426\u53EF\u4EE5\u653E\u7F6E\u7687\u540E</p><p>7.\u9009\u62E9</p><p>8.\u8FDB\u5165\u4E0B\u4E00\u884C\u51B3\u7B56</p><p>9.\u64A4\u9500\u9009\u62E9</p><p>isValid(): \u5224\u65AD\u662F\u5426\u53EF\u4EE5\u653E\u7F6E\u7687\u540E</p><p>1.\u5224\u65AD\u5F53\u524D\u5217</p><p>2.\u5224\u65AD\u5DE6\u4E0A\u89D2</p><p>3.\u5224\u65AD\u53F3\u4E0A\u89D2</p><p>charToList\uFF1A\u5C06\u4E8C\u7EF4char\u6570\u7EC4\u8F6C\u5316\u4E3A List</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">solveNQueens</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u5B9A\u4E49\u4E8C\u7EF4\u6570\u7EC4 board \u6A21\u62DF\u68CB\u76D8</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.\u521D\u59CB\u5316 board \u4E3A .</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">:</span> board<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.\u8C03\u7528 backtrack(board, 0)</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>board<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 4.\u7ED3\u675F\u6761\u4EF6\uFF1Arow == n</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> board<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">==</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">charToList</span><span class="token punctuation">(</span>board<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 5.\u904D\u5386 row \u884C</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> col<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 6.\u5224\u65AD\u662F\u5426\u53EF\u4EE5\u653E\u7F6E\u7687\u540E</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isValid</span><span class="token punctuation">(</span>board<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token comment">// 7.\u9009\u62E9</span>
            board<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;Q&#39;</span><span class="token punctuation">;</span>
            <span class="token comment">// 8.\u8FDB\u5165\u4E0B\u4E00\u884C\u51B3\u7B56</span>
            <span class="token function">backtrack</span><span class="token punctuation">(</span>board<span class="token punctuation">,</span> row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 9.\u64A4\u9500\u9009\u62E9</span>
            board<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u53EF\u4EE5\u653E\u7F6E\u7687\u540E</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> col<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u5224\u65AD\u5F53\u524D\u5217</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> row<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;Q&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2.\u5224\u65AD\u5DE6\u4E0A\u89D2</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> row <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> col <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> board<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">,</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;Q&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.\u5224\u65AD\u53F3\u4E0A\u89D2</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> row <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> col <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">,</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;Q&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5C06\u4E8C\u7EF4char\u6570\u7EC4\u8F6C\u5316\u4E3A List</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">charToList</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">:</span> board<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> list<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-\u7ECF\u5178\u56DE\u6EAF\u7B97\u6CD5-\u96C6\u5408\u5212\u5206\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_1-2-\u7ECF\u5178\u56DE\u6EAF\u7B97\u6CD5-\u96C6\u5408\u5212\u5206\u95EE\u9898" aria-hidden="true">#</a> 1.2 \u7ECF\u5178\u56DE\u6EAF\u7B97\u6CD5\uFF1A\u96C6\u5408\u5212\u5206\u95EE\u9898</h3>`,8),j={id:"_698-\u5212\u5206\u4E3Ak\u4E2A\u76F8\u7B49\u7684\u5B50\u96C6",tabindex:"-1"},q=n("a",{class:"header-anchor",href:"#_698-\u5212\u5206\u4E3Ak\u4E2A\u76F8\u7B49\u7684\u5B50\u96C6","aria-hidden":"true"},"#",-1),x=s(),L={href:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/",target:"_blank",rel:"noopener noreferrer"},S=s("698. \u5212\u5206\u4E3Ak\u4E2A\u76F8\u7B49\u7684\u5B50\u96C6"),I=t(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 <code>nums</code> \u548C\u4E00\u4E2A\u6B63\u6574\u6570 <code>k</code>\uFF0C\u627E\u51FA\u662F\u5426\u6709\u53EF\u80FD\u628A\u8FD9\u4E2A\u6570\u7EC4\u5206\u6210 <code>k</code> \u4E2A\u975E\u7A7A\u5B50\u96C6\uFF0C\u5176\u603B\u548C\u90FD\u76F8\u7B49\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1A nums = [4, 3, 2, 3, 5, 2, 1], k = 4 \u8F93\u51FA\uFF1A True \u8BF4\u660E\uFF1A \u6709\u53EF\u80FD\u5C06\u5176\u5206\u6210 4 \u4E2A\u5B50\u96C6\uFF085\uFF09\uFF0C\uFF081,4\uFF09\uFF0C\uFF082,3\uFF09\uFF0C\uFF082,3\uFF09\u7B49\u4E8E\u603B\u548C\u3002</p><blockquote><p>\u7AD9\u5728\u7403\u7684\u89D2\u5EA6\uFF0C\u5C06 n \u4E2A\u7403\u88C5\u5165 k \u4E2A\u6876</p><p>\u56DE\u6EAF\u7B97\u6CD5\u601D\u8DEF\uFF1A</p><p>1.\u68C0\u67E5\u5408\u6CD5\u6027</p><p>\u200B 1.1 \u6570\u7EC4\u7684\u957F\u5EA6 \u548C k</p><p>\u200B 1.2 \u6570\u7EC4\u7684\u603B\u548C % k</p><p>// start\uFF1A\u4ECE\u7B2C start \u4E2A\u5143\u7D20\u5F00\u59CB</p><p>// buckets\uFF1A\u6876</p><p>2.\u8C03\u7528\u51FD\u6570 backtrack(int[] nums, int start, int[] buckets, int target)</p><p>3.\u5F53 start == nums.length\uFF0C\u5DF2\u7ECF\u88C5\u6EE1\uFF0C\u8FD4\u56DEtrue</p><p>4.\u904D\u5386\u6876</p><p>5.\u526A\u679D</p><p>\u200B 5.1 \u7B2C\u4E00\u4E2A\u7403\u9009\u62E9\u54EA\u4E00\u4E2A\u6876\u90FD\u662F\u4E00\u6837\u7684</p><p>\u200B 5.2 \u5DF2\u7ECF\u8D85\u8FC7 target</p><p>\u200B 5.3 \u5F53\u4E0A\u4E00\u4E2A\u6876\u548C\u5F53\u524D\u6876\u7684\u5143\u7D20\u548C\u76F8\u7B49\u65F6\uFF0C\u9009\u62E9\u54EA\u4E00\u4E2A\u6876\u90FD\u662F\u4E00\u6837\u7684</p><p>6.\u505A\u9009\u62E9\uFF0C\u5C06\u5F53\u524D\u7403\u653E\u5728\u6876\u91CC\u9762</p><p>7.\u8FDB\u5165\u4E0B\u4E00\u5C42\u51B3\u7B56\u6811</p><p>8.\u64A4\u9500\u9009\u62E9</p><p>9.\u627E\u4E0D\u5230\u5408\u9002\u7684\u6876\uFF0C\u8FD4\u56DE false</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPartitionKSubsets</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u964D\u5E8F\u6392\u5217\uFF0C\u4F7F\u89E6\u53D1 5.2\u526A\u679D \u7684\u6982\u7387\u66F4\u5927</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right<span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
            nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
            nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            left<span class="token operator">++</span><span class="token punctuation">;</span>
            right<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 1.\u68C0\u67E5\u5408\u6CD5\u6027</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// 1.1 \u6570\u7EC4\u7684\u957F\u5EA6 \u548C k</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> n<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> sum <span class="token operator">+=</span> num<span class="token punctuation">;</span>
        <span class="token comment">// 1.2 \u6570\u7EC4\u7684\u603B\u548C % k</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">%</span> k <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> 
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buckets <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6BCF\u4E2A\u6876\u5E94\u8BE5\u88C5\u7684\u603B\u6570</span>
        <span class="token keyword">int</span> target <span class="token operator">=</span> sum <span class="token operator">/</span> k<span class="token punctuation">;</span>
        <span class="token comment">// 2.\u8C03\u7528\u51FD\u6570</span>
        <span class="token keyword">return</span> <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buckets<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// start\uFF1A\u4ECE\u7B2C index \u4E2A\u5143\u7D20\u5F00\u59CB</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buckets<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 3.\u5F53 start == nums.length\uFF0C\u5DF2\u7ECF\u88C5\u6EE1\uFF0C\u8FD4\u56DEtrue</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">==</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5DF2\u7ECF\u88C5\u6EE1</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4.\u904D\u5386\u6876</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> buckets<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 5.\u526A\u679D</span>
            <span class="token comment">// 5.1 \u7B2C\u4E00\u4E2A\u7403\u9009\u62E9\u54EA\u4E00\u4E2A\u6876\u90FD\u662F\u4E00\u6837\u7684</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> start <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token comment">// 5.2 \u5DF2\u7ECF\u8D85\u8FC7 target</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token comment">// 5.3 \u5F53\u4E0A\u4E00\u4E2A\u6876\u548C\u5F53\u524D\u6876\u7684\u5143\u7D20\u548C\u76F8\u7B49\u65F6\uFF0C\u9009\u62E9\u54EA\u4E00\u4E2A\u6876\u90FD\u662F\u4E00\u6837\u7684</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> buckets<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// \u5173\u952E\uFF0C\u901F\u5EA6\u63D0\u5347\u5F88\u591A</span>
            <span class="token comment">// 6.\u505A\u9009\u62E9\uFF0C\u5C06\u5F53\u524D\u7403\u653E\u5728\u6876\u91CC\u9762</span>
            buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// 7.\u8FDB\u5165\u4E0B\u4E00\u5C42\u51B3\u7B56\u6811</span>
            <span class="token comment">// \u627E\u5230\u7ED3\u679C\u5C31\u76F4\u63A5\u8FD4\u56DE</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> buckets<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token comment">// 8.\u64A4\u9500\u9009\u62E9</span>
            buckets<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-=</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 9.\u627E\u4E0D\u5230\u5408\u9002\u7684\u6876\uFF0C\u8FD4\u56DE false</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-\u56DE\u6EAF\u7B97\u6CD5\u79D2\u6740\u6240\u6709\u6392\u5217-\u7EC4\u5408-\u5B50\u96C6\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_1-3-\u56DE\u6EAF\u7B97\u6CD5\u79D2\u6740\u6240\u6709\u6392\u5217-\u7EC4\u5408-\u5B50\u96C6\u95EE\u9898" aria-hidden="true">#</a> 1.3 \u56DE\u6EAF\u7B97\u6CD5\u79D2\u6740\u6240\u6709\u6392\u5217/\u7EC4\u5408/\u5B50\u96C6\u95EE\u9898</h3>`,6),A={id:"_78-\u5B50\u96C6",tabindex:"-1"},M=n("a",{class:"header-anchor",href:"#_78-\u5B50\u96C6","aria-hidden":"true"},"#",-1),N=s(),z={href:"https://leetcode.cn/problems/subsets/",target:"_blank",rel:"noopener noreferrer"},B=s("78. \u5B50\u96C6"),T=t(`<p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \uFF0C\u6570\u7EC4\u4E2D\u7684\u5143\u7D20 \u4E92\u4E0D\u76F8\u540C \u3002\u8FD4\u56DE\u8BE5\u6570\u7EC4\u6240\u6709\u53EF\u80FD\u7684\u5B50\u96C6\uFF08\u5E42\u96C6\uFF09\u3002</p><p>\u89E3\u96C6 \u4E0D\u80FD \u5305\u542B\u91CD\u590D\u7684\u5B50\u96C6\u3002\u4F60\u53EF\u4EE5\u6309 \u4EFB\u610F\u987A\u5E8F \u8FD4\u56DE\u89E3\u96C6\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [1,2,3] \u8F93\u51FA\uFF1A[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]</p><blockquote><p>\u56DE\u6EAF\u7B97\u6CD5\u601D\u8DEF\uFF1A</p><p>\u901A\u8FC7\u4FDD\u8BC1\u5143\u7D20\u7684\u76F8\u5BF9\u987A\u5E8F\u6765\u4FDD\u8BC1\u4E0D\u4F1A\u51FA\u73B0\u91CD\u590D\u5143\u7D20</p><p>1.\u904D\u5386\u6570\u7EC4</p><p>2.\u505A\u9009\u62E9</p><p>3.\u8FDB\u5165\u4E0B\u4E00\u5C42\u51B3\u7B56\u6811</p><p>4.\u64A4\u9500\u9009\u62E9</p></blockquote><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209041037402.jpeg" alt="img"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> track <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">subsets</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u524D\u5E8F\u4F4D\u7F6E\uFF0C\u52A0\u5165\u7ED3\u679C\u96C6</span>
        res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>track<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.\u904D\u5386\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 2.\u505A\u9009\u62E9</span>
            track<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.\u8FDB\u5165\u4E0B\u4E00\u5C42\u51B3\u7B56\u6811</span>
            <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 4.\u64A4\u9500\u9009\u62E9</span>
            track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),C={id:"_77-\u7EC4\u5408",tabindex:"-1"},D=n("a",{class:"header-anchor",href:"#_77-\u7EC4\u5408","aria-hidden":"true"},"#",-1),O=s(),V={href:"https://leetcode.cn/problems/combinations/",target:"_blank",rel:"noopener noreferrer"},H=s("77. \u7EC4\u5408"),Q=t(`<p>\u7ED9\u5B9A\u4E24\u4E2A\u6574\u6570 n \u548C k\uFF0C\u8FD4\u56DE\u8303\u56F4 [1, n] \u4E2D\u6240\u6709\u53EF\u80FD\u7684 k \u4E2A\u6570\u7684\u7EC4\u5408\u3002</p><p>\u4F60\u53EF\u4EE5\u6309 \u4EFB\u4F55\u987A\u5E8F \u8FD4\u56DE\u7B54\u6848\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1An = 4, k = 2 \u8F93\u51FA\uFF1A [ [2,4], [3,4], [2,3], [1,2], [1,3], [1,4], ]</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> track <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">combine</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u524D\u5E8F\u4F4D\u7F6E\uFF0C\u52A0\u5165\u7ED3\u679C\u96C6</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>track<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>track<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u53EF\u4EE5\u76F4\u63A5\u8FD4\u56DE\u4E86</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 1.\u904D\u5386\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 2.\u505A\u9009\u62E9</span>
            track<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.\u8FDB\u5165\u4E0B\u4E00\u5C42\u51B3\u7B56\u6811</span>
            <span class="token function">backtrack</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 4.\u64A4\u9500\u9009\u62E9</span>
            track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),W={id:"_90-\u5B50\u96C6-ii",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#_90-\u5B50\u96C6-ii","aria-hidden":"true"},"#",-1),F=s(),P={href:"https://leetcode.cn/problems/subsets-ii/",target:"_blank",rel:"noopener noreferrer"},K=s("90. \u5B50\u96C6 II"),R=t(`<p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \uFF0C\u5176\u4E2D\u53EF\u80FD\u5305\u542B\u91CD\u590D\u5143\u7D20\uFF0C\u8BF7\u4F60\u8FD4\u56DE\u8BE5\u6570\u7EC4\u6240\u6709\u53EF\u80FD\u7684\u5B50\u96C6\uFF08\u5E42\u96C6\uFF09\u3002</p><p>\u89E3\u96C6 \u4E0D\u80FD \u5305\u542B\u91CD\u590D\u7684\u5B50\u96C6\u3002\u8FD4\u56DE\u7684\u89E3\u96C6\u4E2D\uFF0C\u5B50\u96C6\u53EF\u4EE5\u6309 \u4EFB\u610F\u987A\u5E8F \u6392\u5217\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209282349491.png" alt="image-20220928234912397"></p><blockquote><p>\u6DFB\u52A0\u526A\u679D\u903B\u8F91</p><p>1.\u5148\u628A\u6570\u7EC4\u6392\u5E8F\uFF0C\u8BA9\u76F8\u7B49\u7684\u5143\u7D20\u9760\u5728\u4E00\u8D77</p><p>2.\u5F53\u51FA\u73B0\u91CD\u590D\u7684\u6811\u679D\u65F6\uFF0C\u53EA\u7528\u7B2C\u4E00\u6761\u6811\u679D\uFF0C\u5176\u4ED6\u7684\u526A\u6389</p></blockquote><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209041056981.jpeg" alt="img"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> track <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">subsetsWithDup</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u5148\u628A\u6570\u7EC4\u6392\u5E8F\uFF0C\u8BA9\u76F8\u7B49\u7684\u5143\u7D20\u9760\u5728\u4E00\u8D77</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>track<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u526A\u679D\u903B\u8F91</span>
            <span class="token comment">// 2.\u5F53\u51FA\u73B0\u91CD\u590D\u7684\u6811\u679D\u65F6\uFF0C\u53EA\u7528\u7B2C\u4E00\u6761\u6811\u679D\uFF0C\u5176\u4ED6\u7684\u526A\u6389</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> start <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            track<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),U={id:"_40-\u7EC4\u5408\u603B\u548C-ii",tabindex:"-1"},G=n("a",{class:"header-anchor",href:"#_40-\u7EC4\u5408\u603B\u548C-ii","aria-hidden":"true"},"#",-1),J=s(),X={href:"https://leetcode.cn/problems/combination-sum-ii/",target:"_blank",rel:"noopener noreferrer"},Y=s("40. \u7EC4\u5408\u603B\u548C II"),Z=t(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u5019\u9009\u4EBA\u7F16\u53F7\u7684\u96C6\u5408 candidates \u548C\u4E00\u4E2A\u76EE\u6807\u6570 target \uFF0C\u627E\u51FA candidates \u4E2D\u6240\u6709\u53EF\u4EE5\u4F7F\u6570\u5B57\u548C\u4E3A target \u7684\u7EC4\u5408\u3002</p><p>candidates \u4E2D\u7684\u6BCF\u4E2A\u6570\u5B57\u5728\u6BCF\u4E2A\u7EC4\u5408\u4E2D\u53EA\u80FD\u4F7F\u7528 \u4E00\u6B21 \u3002</p><p>\u6CE8\u610F\uFF1A\u89E3\u96C6\u4E0D\u80FD\u5305\u542B\u91CD\u590D\u7684\u7EC4\u5408\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209282349543.png" alt="image-20220928234924457"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> track <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">combinationSum2</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> candidates<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u5148\u628A\u6570\u7EC4\u6392\u5E8F\uFF0C\u8BA9\u76F8\u7B49\u7684\u5143\u7D20\u9760\u5728\u4E00\u8D77</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>candidates<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>candidates<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> candidates<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u627E\u5230\u76EE\u6807\u548C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>track<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">// \u5927\u4E8E\u76EE\u6807\u548C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u76F4\u63A5\u8FD4\u56DE</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> candidates<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u526A\u679D\u903B\u8F91</span>
            <span class="token comment">// 2.\u5F53\u51FA\u73B0\u91CD\u590D\u7684\u6811\u679D\u65F6\uFF0C\u53EA\u7528\u7B2C\u4E00\u6761\u6811\u679D\uFF0C\u5176\u4ED6\u7684\u526A\u6389</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> start <span class="token operator">&amp;&amp;</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> candidates<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            track<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sum <span class="token operator">+=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token function">backtrack</span><span class="token punctuation">(</span>candidates<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
            track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sum <span class="token operator">-=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),$={id:"_47-\u5168\u6392\u5217-ii",tabindex:"-1"},nn=n("a",{class:"header-anchor",href:"#_47-\u5168\u6392\u5217-ii","aria-hidden":"true"},"#",-1),sn=s(),an={href:"https://leetcode.cn/problems/permutations-ii/",target:"_blank",rel:"noopener noreferrer"},pn=s("47. \u5168\u6392\u5217 II"),tn=t(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u53EF\u5305\u542B\u91CD\u590D\u6570\u5B57\u7684\u5E8F\u5217 <code>nums</code> \uFF0C<em><strong>\u6309\u4EFB\u610F\u987A\u5E8F</strong></em> \u8FD4\u56DE\u6240\u6709\u4E0D\u91CD\u590D\u7684\u5168\u6392\u5217\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209282349877.png" alt="image-20220928234937800"></p><blockquote><p>\u5168\u6392\u5E8F</p><p>\u6DFB\u52A0\u526A\u679D\u903B\u8F91\uFF1A\u4FDD\u6301\u91CD\u590D\u5143\u7D20\u7684\u76F8\u5BF9\u987A\u5E8F 2-&gt;2&#39;&gt;2&#39;&#39;</p></blockquote><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209051518247.jpeg" alt="img"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> track <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> used<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">permuteUnique</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        used <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6392\u5E8F\uFF0C\u4F7F\u91CD\u590D\u5143\u7D20\u9760\u5728\u4E00\u8D77</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// base case</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>track<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>track<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u8BB0\u5F55\u4E0A\u4E00\u6761\u6811\u679D\u7684\u503C\uFF0C\u521D\u59CB\u5316\u4E3A\u7279\u6B8A\u503C</span>
        <span class="token comment">// -10 &lt;= nums[i] &lt;= 10</span>
        <span class="token keyword">int</span> preNum <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">666</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token comment">// \u540C\u4E00\u4E2A\u4F4D\u7F6E\u7684\u503C\u76F8\u7B49\uFF0C\u8DF3\u8FC7</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>preNum <span class="token operator">==</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token comment">// \u9009\u62E9</span>
            track<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8BB0\u5F55\u6811\u679D\u7684\u503C</span>
            preNum <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u64A4\u9500\u9009\u62E9</span>
            used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),on={id:"_39-\u7EC4\u5408\u603B\u548C",tabindex:"-1"},en=n("a",{class:"header-anchor",href:"#_39-\u7EC4\u5408\u603B\u548C","aria-hidden":"true"},"#",-1),cn=s(),ln={href:"https://leetcode.cn/problems/combination-sum/",target:"_blank",rel:"noopener noreferrer"},un=s("39. \u7EC4\u5408\u603B\u548C"),kn=t(`<p>\u7ED9\u4F60\u4E00\u4E2A \u65E0\u91CD\u590D\u5143\u7D20 \u7684\u6574\u6570\u6570\u7EC4 candidates \u548C\u4E00\u4E2A\u76EE\u6807\u6574\u6570 target \uFF0C\u627E\u51FA candidates \u4E2D\u53EF\u4EE5\u4F7F\u6570\u5B57\u548C\u4E3A\u76EE\u6807\u6570 target \u7684 \u6240\u6709 \u4E0D\u540C\u7EC4\u5408 \uFF0C\u5E76\u4EE5\u5217\u8868\u5F62\u5F0F\u8FD4\u56DE\u3002\u4F60\u53EF\u4EE5\u6309 \u4EFB\u610F\u987A\u5E8F \u8FD4\u56DE\u8FD9\u4E9B\u7EC4\u5408\u3002</p><p>candidates \u4E2D\u7684 \u540C\u4E00\u4E2A \u6570\u5B57\u53EF\u4EE5 <strong>\u65E0\u9650\u5236\u91CD\u590D\u88AB\u9009\u53D6</strong> \u3002\u5982\u679C\u81F3\u5C11\u4E00\u4E2A\u6570\u5B57\u7684\u88AB\u9009\u6570\u91CF\u4E0D\u540C\uFF0C\u5219\u4E24\u79CD\u7EC4\u5408\u662F\u4E0D\u540C\u7684\u3002</p><p>\u5BF9\u4E8E\u7ED9\u5B9A\u7684\u8F93\u5165\uFF0C\u4FDD\u8BC1\u548C\u4E3A target \u7684\u4E0D\u540C\u7EC4\u5408\u6570\u5C11\u4E8E 150 \u4E2A\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209282349640.png" alt="image-20220928234950557"></p><blockquote><p>\u5143\u7D20\u53EF\u4EE5\u91CD\u590D\u4F7F\u7528</p><p>start = i</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> track <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">combinationSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> candidates<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>candidates<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> candidates<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>track<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> candidates<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u505A\u9009\u62E9</span>
            track<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sum <span class="token operator">+=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8FDB\u5165\u4E0B\u4E00\u5C42\u51B3\u7B56\u6811</span>
            <span class="token comment">// \u6CE8\u610F\uFF1A\u5143\u7D20\u53EF\u4EE5\u91CD\u590D\u9009\u62E9\uFF0C\u4F20\u5165 i</span>
            <span class="token function">backtrack</span><span class="token punctuation">(</span>candidates<span class="token punctuation">,</span> i<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
            track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sum <span class="token operator">-=</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3\uFF1A</h4><p><strong>\u5F62\u5F0F\u4E00\u3001\u5143\u7D20\u65E0\u91CD\u4E0D\u53EF\u590D\u9009\uFF0C\u5373 <code>nums</code> \u4E2D\u7684\u5143\u7D20\u90FD\u662F\u552F\u4E00\u7684\uFF0C\u6BCF\u4E2A\u5143\u7D20\u6700\u591A\u53EA\u80FD\u88AB\u4F7F\u7528\u4E00\u6B21</strong>\uFF0C<code>backtrack</code> \u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/* \u7EC4\u5408/\u5B50\u96C6\u95EE\u9898\u56DE\u6EAF\u7B97\u6CD5\u6846\u67B6 */</span>
<span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56DE\u6EAF\u7B97\u6CD5\u6807\u51C6\u6846\u67B6</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u505A\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6CE8\u610F\u53C2\u6570</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u64A4\u9500\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u6392\u5217\u95EE\u9898\u56DE\u6EAF\u7B97\u6CD5\u6846\u67B6 */</span>
<span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u526A\u679D\u903B\u8F91</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u505A\u9009\u62E9</span>
        used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        track<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u64A4\u9500\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5F62\u5F0F\u4E8C\u3001\u5143\u7D20\u53EF\u91CD\u4E0D\u53EF\u590D\u9009\uFF0C\u5373 <code>nums</code> \u4E2D\u7684\u5143\u7D20\u53EF\u4EE5\u5B58\u5728\u91CD\u590D\uFF0C\u6BCF\u4E2A\u5143\u7D20\u6700\u591A\u53EA\u80FD\u88AB\u4F7F\u7528\u4E00\u6B21</strong>\uFF0C\u5176\u5173\u952E\u5728\u4E8E\u6392\u5E8F\u548C\u526A\u679D\uFF0C<code>backtrack</code> \u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* \u7EC4\u5408/\u5B50\u96C6\u95EE\u9898\u56DE\u6EAF\u7B97\u6CD5\u6846\u67B6 */</span>
<span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56DE\u6EAF\u7B97\u6CD5\u6807\u51C6\u6846\u67B6</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u526A\u679D\u903B\u8F91\uFF0C\u8DF3\u8FC7\u503C\u76F8\u540C\u7684\u76F8\u90BB\u6811\u679D</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> start <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u505A\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6CE8\u610F\u53C2\u6570</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u64A4\u9500\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* \u6392\u5217\u95EE\u9898\u56DE\u6EAF\u7B97\u6CD5\u6846\u67B6 */</span>
<span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BB0\u5F55\u4E0A\u4E00\u6761\u6811\u679D\u7684\u503C\uFF0C\u521D\u59CB\u5316\u4E3A\u7279\u6B8A\u503C</span>
    <span class="token comment">// -10 &lt;= nums[i] &lt;= 10</span>
    <span class="token keyword">int</span> preNum <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">666</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token comment">// \u540C\u4E00\u4E2A\u4F4D\u7F6E\u7684\u503C\u76F8\u7B49\uFF0C\u8DF3\u8FC7</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>preNum <span class="token operator">==</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BB0\u5F55\u6811\u679D\u7684\u503C</span>
        preNum <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u64A4\u9500\u9009\u62E9</span>
        used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5F62\u5F0F\u4E09\u3001\u5143\u7D20\u65E0\u91CD\u53EF\u590D\u9009\uFF0C\u5373 <code>nums</code> \u4E2D\u7684\u5143\u7D20\u90FD\u662F\u552F\u4E00\u7684\uFF0C\u6BCF\u4E2A\u5143\u7D20\u53EF\u4EE5\u88AB\u4F7F\u7528\u82E5\u5E72\u6B21</strong>\uFF0C\u53EA\u8981\u5220\u6389\u53BB\u91CD\u903B\u8F91\u5373\u53EF\uFF0C<code>backtrack</code> \u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/* \u7EC4\u5408/\u5B50\u96C6\u95EE\u9898\u56DE\u6EAF\u7B97\u6CD5\u6846\u67B6 */</span>
<span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56DE\u6EAF\u7B97\u6CD5\u6807\u51C6\u6846\u67B6</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u505A\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6CE8\u610F\u53C2\u6570</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u64A4\u9500\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u6392\u5217\u95EE\u9898\u56DE\u6EAF\u7B97\u6CD5\u6846\u67B6 */</span>
<span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u505A\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u64A4\u9500\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-\u4E00\u6587\u79D2\u6740\u6240\u6709\u5C9B\u5C7F\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#_1-4-\u4E00\u6587\u79D2\u6740\u6240\u6709\u5C9B\u5C7F\u9898\u76EE" aria-hidden="true">#</a> 1.4 \u4E00\u6587\u79D2\u6740\u6240\u6709\u5C9B\u5C7F\u9898\u76EE</h3><p>\u4E8C\u7EF4\u77E9\u9635\u7684 DFS \u4EE3\u7801\u6846\u67B6\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4E8C\u7EF4\u77E9\u9635\u904D\u5386\u6846\u67B6</span>
<span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">,</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> visited<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> m <span class="token operator">||</span> j <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8D85\u51FA\u7D22\u5F15\u8FB9\u754C</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5DF2\u904D\u5386\u8FC7 (i, j)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8FDB\u5165\u8282\u70B9 (i, j)</span>
    visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> visited<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0A</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> visited<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0B</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> visited<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5DE6</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> visited<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53F3</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),rn={id:"_200-\u5C9B\u5C7F\u6570\u91CF",tabindex:"-1"},dn=n("a",{class:"header-anchor",href:"#_200-\u5C9B\u5C7F\u6570\u91CF","aria-hidden":"true"},"#",-1),mn=s(),vn={href:"https://leetcode.cn/problems/number-of-islands/",target:"_blank",rel:"noopener noreferrer"},bn=s("200. \u5C9B\u5C7F\u6570\u91CF"),gn=t(`<p>\u7ED9\u4F60\u4E00\u4E2A\u7531 &#39;1&#39;\uFF08\u9646\u5730\uFF09\u548C &#39;0&#39;\uFF08\u6C34\uFF09\u7EC4\u6210\u7684\u7684\u4E8C\u7EF4\u7F51\u683C\uFF0C\u8BF7\u4F60\u8BA1\u7B97\u7F51\u683C\u4E2D\u5C9B\u5C7F\u7684\u6570\u91CF\u3002</p><p>\u5C9B\u5C7F\u603B\u662F\u88AB\u6C34\u5305\u56F4\uFF0C\u5E76\u4E14\u6BCF\u5EA7\u5C9B\u5C7F\u53EA\u80FD\u7531\u6C34\u5E73\u65B9\u5411\u548C/\u6216\u7AD6\u76F4\u65B9\u5411\u4E0A\u76F8\u90BB\u7684\u9646\u5730\u8FDE\u63A5\u5F62\u6210\u3002</p><p>\u6B64\u5916\uFF0C\u4F60\u53EF\u4EE5\u5047\u8BBE\u8BE5\u7F51\u683C\u7684\u56DB\u6761\u8FB9\u5747\u88AB\u6C34\u5305\u56F4\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Agrid = [ [&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;0&quot;], [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;], [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;], [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;] ] \u8F93\u51FA\uFF1A1</p><blockquote><p>DFS\u601D\u8DEF\uFF1A</p><p>1.\u904D\u5386\u6570\u7EC4</p><p>2.\u9047\u5230\u5C9B\u5C7F\u65F6\uFF0Cres++\uFF0C\u5E76\u7528\u6D77\u6C34\u6DF9\u6CA1\u5F53\u524D\u5C9B\u5C7F\u548C\u5468\u56F4\u5C9B\u5C7F(\u907F\u514D\u7EF4\u62A4 visited \u6570\u7EC4\uFF0C\u8D70\u56DE\u5934\u8DEF)</p><p>dfs():</p><p>1.\u68C0\u67E5\u8FB9\u754C</p><p>2.\u5F53\u524D\u5DF2\u7ECF\u662F\u6D77\u6C34\uFF0C\u8DF3\u8FC7</p><p>3.\u6DF9\u6CA1\u5F53\u524D\u5C9B\u5C7F</p><p>4.\u6DF9\u6CA1\u4E0A\u4E0B\u5DE6\u53F3\u7684\u5C9B\u5C7F</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">numIslands</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.\u904D\u5386\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 2.\u9047\u5230\u5C9B\u5C7F\u65F6\uFF0Cres++\uFF0C\u5E76\u7528\u6D77\u6C34\u6DF9\u6CA1\u5F53\u524D\u5C9B\u5C7F\u548C\u5468\u56F4\u5C9B\u5C7F(\u907F\u514D\u7EF4\u62A4 visited \u6570\u7EC4\uFF0C\u8D70\u56DE\u5934\u8DEF)</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4ECE (i, j) \u5F00\u59CB\uFF0C\u5C06\u4E0E\u4E4B\u76F8\u90BB\u7684\u9646\u5730\u90FD\u53D8\u6210\u6D77\u6C34</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// 1.\u68C0\u67E5\u8FB9\u754C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> m <span class="token operator">||</span> j <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 2.\u5F53\u524D\u5DF2\u7ECF\u662F\u6D77\u6C34\uFF0C\u8DF3\u8FC7</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.\u6DF9\u6CA1\u5F53\u524D\u5C9B\u5C7F</span>
        grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.\u6DF9\u6CA1\u4E0A\u4E0B\u5DE6\u53F3\u7684\u5C9B\u5C7F        </span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),hn={id:"_1254-\u7EDF\u8BA1\u5C01\u95ED\u5C9B\u5C7F\u7684\u6570\u76EE",tabindex:"-1"},wn=n("a",{class:"header-anchor",href:"#_1254-\u7EDF\u8BA1\u5C01\u95ED\u5C9B\u5C7F\u7684\u6570\u76EE","aria-hidden":"true"},"#",-1),yn=s(),fn={href:"https://leetcode.cn/problems/number-of-closed-islands/",target:"_blank",rel:"noopener noreferrer"},_n=s("1254. \u7EDF\u8BA1\u5C01\u95ED\u5C9B\u5C7F\u7684\u6570\u76EE"),jn=t(`<p>\u4E8C\u7EF4\u77E9\u9635 grid \u7531 0 \uFF08\u571F\u5730\uFF09\u548C 1 \uFF08\u6C34\uFF09\u7EC4\u6210\u3002\u5C9B\u662F\u7531\u6700\u5927\u76844\u4E2A\u65B9\u5411\u8FDE\u901A\u7684 0 \u7EC4\u6210\u7684\u7FA4\uFF0C\u5C01\u95ED\u5C9B\u662F\u4E00\u4E2A \u5B8C\u5168 \u75311\u5305\u56F4\uFF08\u5DE6\u3001\u4E0A\u3001\u53F3\u3001\u4E0B\uFF09\u7684\u5C9B\u3002</p><p>\u8BF7\u8FD4\u56DE \u5C01\u95ED\u5C9B\u5C7F \u7684\u6570\u76EE\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209061120257.png" alt="img"></p><p>\u8F93\u5165\uFF1Agrid = [[1,1,1,1,1,1,1,0],[1,0,0,0,0,1,1,0],[1,0,1,0,1,1,1,0],[1,0,0,0,0,1,0,1],[1,1,1,1,1,1,1,0]] \u8F93\u51FA\uFF1A2 \u89E3\u91CA\uFF1A \u7070\u8272\u533A\u57DF\u7684\u5C9B\u5C7F\u662F\u5C01\u95ED\u5C9B\u5C7F\uFF0C\u56E0\u4E3A\u8FD9\u5EA7\u5C9B\u5C7F\u5B8C\u5168\u88AB\u6C34\u57DF\u5305\u56F4\uFF08\u5373\u88AB 1 \u533A\u57DF\u5305\u56F4\uFF09\u3002</p><blockquote><p>\u601D\u8DEF\uFF1A</p><p>\u628A\u5728\u8FB9\u754C\u7684\u5C9B\u5C7F\u6392\u9664\u6389\uFF0C\u5269\u4E0B\u7684\u5C31\u662F\u5C01\u95ED\u5C9B\u5C7F</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">closedIsland</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6DF9\u6CA1\u8FB9\u754C\u4E0A\u7684\u5C9B\u5C7F\uFF0C\u5305\u62EC\u5468\u56F4\u7684\u5C9B\u5C7F</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E0A\u8FB9\u754C</span>
            <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u4E0B\u8FB9\u754C</span>
            <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5DE6\u8FB9\u754C   </span>
            <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u53F3\u8FB9\u754C</span>
            <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 1.\u904D\u5386\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 2.\u9047\u5230\u5C9B\u5C7F\u65F6\uFF0Cres++\uFF0C\u5E76\u7528\u6D77\u6C34\u6DF9\u6CA1\u5F53\u524D\u5C9B\u5C7F\u548C\u5468\u56F4\u5C9B\u5C7F(\u907F\u514D\u7EF4\u62A4 visited \u6570\u7EC4\uFF0C\u8D70\u56DE\u5934\u8DEF)</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//  // \u4ECE (i, j) \u5F00\u59CB\uFF0C\u5C06\u4E0E\u4E4B\u76F8\u90BB\u7684\u9646\u5730\u90FD\u53D8\u6210\u6D77\u6C34</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u68C0\u67E5\u8FB9\u754C</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> m <span class="token operator">||</span> j <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2.\u5DF2\u7ECF\u662F\u6D77\u6C34\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.\u6DF9\u6CA1\u5F53\u524D\u5C9B\u5C7F</span>
        grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.\u4E0A\u4E0B\u5DE6\u53F3</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),qn={id:"_1020-\u98DE\u5730\u7684\u6570\u91CF",tabindex:"-1"},xn=n("a",{class:"header-anchor",href:"#_1020-\u98DE\u5730\u7684\u6570\u91CF","aria-hidden":"true"},"#",-1),Ln=s(),Sn={href:"https://leetcode.cn/problems/number-of-enclaves/",target:"_blank",rel:"noopener noreferrer"},In=s("1020. \u98DE\u5730\u7684\u6570\u91CF"),An=t(`<p>\u7ED9\u4F60\u4E00\u4E2A\u5927\u5C0F\u4E3A m x n \u7684\u4E8C\u8FDB\u5236\u77E9\u9635 grid \uFF0C\u5176\u4E2D 0 \u8868\u793A\u4E00\u4E2A\u6D77\u6D0B\u5355\u5143\u683C\u30011 \u8868\u793A\u4E00\u4E2A\u9646\u5730\u5355\u5143\u683C\u3002</p><p>\u4E00\u6B21 \u79FB\u52A8 \u662F\u6307\u4ECE\u4E00\u4E2A\u9646\u5730\u5355\u5143\u683C\u8D70\u5230\u53E6\u4E00\u4E2A\u76F8\u90BB\uFF08\u4E0A\u3001\u4E0B\u3001\u5DE6\u3001\u53F3\uFF09\u7684\u9646\u5730\u5355\u5143\u683C\u6216\u8DE8\u8FC7 grid \u7684\u8FB9\u754C\u3002</p><p>\u8FD4\u56DE\u7F51\u683C\u4E2D \u65E0\u6CD5 \u5728\u4EFB\u610F\u6B21\u6570\u7684\u79FB\u52A8\u4E2D\u79BB\u5F00\u7F51\u683C\u8FB9\u754C\u7684\u9646\u5730\u5355\u5143\u683C\u7684\u6570\u91CF\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209061152646.png" alt="image-20220906115200551"></p><p>\u8F93\u5165\uFF1Agrid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]] \u8F93\u51FA\uFF1A3 \u89E3\u91CA\uFF1A\u6709\u4E09\u4E2A 1 \u88AB 0 \u5305\u56F4\u3002\u4E00\u4E2A 1 \u6CA1\u6709\u88AB\u5305\u56F4\uFF0C\u56E0\u4E3A\u5B83\u5728\u8FB9\u754C\u4E0A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">numEnclaves</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6DF9\u6CA1\u8FB9\u754C\u4E0A\u7684\u5C9B\u5C7F\uFF0C\u5305\u62EC\u5468\u56F4\u7684\u5C9B\u5C7F</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E0A\u8FB9\u754C</span>
            <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u4E0B\u8FB9\u754C</span>
            <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5DE6\u8FB9\u754C   </span>
            <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u53F3\u8FB9\u754C</span>
            <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 1.\u904D\u5386\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 2.\u9047\u5230\u5C9B\u5C7F\u65F6\uFF0Cres++</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4ECE (i, j) \u5F00\u59CB\uFF0C\u5C06\u4E0E\u4E4B\u76F8\u90BB\u7684\u9646\u5730\u90FD\u53D8\u6210\u6D77\u6C34</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u68C0\u67E5\u8FB9\u754C</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> m <span class="token operator">||</span> j <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2.\u5DF2\u7ECF\u662F\u6D77\u6C34\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.\u6DF9\u6CA1\u5F53\u524D\u5C9B\u5C7F</span>
        grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.\u4E0A\u4E0B\u5DE6\u53F3</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),Mn={id:"_695-\u5C9B\u5C7F\u7684\u6700\u5927\u9762\u79EF",tabindex:"-1"},Nn=n("a",{class:"header-anchor",href:"#_695-\u5C9B\u5C7F\u7684\u6700\u5927\u9762\u79EF","aria-hidden":"true"},"#",-1),zn=s(),Bn={href:"https://leetcode.cn/problems/max-area-of-island/",target:"_blank",rel:"noopener noreferrer"},Tn=s("695. \u5C9B\u5C7F\u7684\u6700\u5927\u9762\u79EF"),Cn=n("p",null,"\u7ED9\u4F60\u4E00\u4E2A\u5927\u5C0F\u4E3A m x n \u7684\u4E8C\u8FDB\u5236\u77E9\u9635 grid \u3002",-1),Dn=n("p",null,"\u5C9B\u5C7F \u662F\u7531\u4E00\u4E9B\u76F8\u90BB\u7684 1 (\u4EE3\u8868\u571F\u5730) \u6784\u6210\u7684\u7EC4\u5408\uFF0C\u8FD9\u91CC\u7684\u300C\u76F8\u90BB\u300D\u8981\u6C42\u4E24\u4E2A 1 \u5FC5\u987B\u5728 \u6C34\u5E73\u6216\u8005\u7AD6\u76F4\u7684\u56DB\u4E2A\u65B9\u5411\u4E0A \u76F8\u90BB\u3002\u4F60\u53EF\u4EE5\u5047\u8BBE grid \u7684\u56DB\u4E2A\u8FB9\u7F18\u90FD\u88AB 0\uFF08\u4EE3\u8868\u6C34\uFF09\u5305\u56F4\u7740\u3002",-1),On=n("p",null,"\u5C9B\u5C7F\u7684\u9762\u79EF\u662F\u5C9B\u4E0A\u503C\u4E3A 1 \u7684\u5355\u5143\u683C\u7684\u6570\u76EE\u3002",-1),Vn=n("p",null,"\u8BA1\u7B97\u5E76\u8FD4\u56DE grid \u4E2D\u6700\u5927\u7684\u5C9B\u5C7F\u9762\u79EF\u3002\u5982\u679C\u6CA1\u6709\u5C9B\u5C7F\uFF0C\u5219\u8FD4\u56DE\u9762\u79EF\u4E3A 0 \u3002",-1),Hn=s("\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A"),Qn={href:"https://leetcode.cn/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},Wn=s("https://leetcode.cn/problems/max-area-of-island"),En=s(" \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002"),Fn=t(`<p>\u793A\u4F8B 1\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/image-20220907101133974.png" alt="image-20220907101133974"></p><p>\u8F93\u5165\uFF1Agrid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]] \u8F93\u51FA\uFF1A6 \u89E3\u91CA\uFF1A\u7B54\u6848\u4E0D\u5E94\u8BE5\u662F 11 \uFF0C\u56E0\u4E3A\u5C9B\u5C7F\u53EA\u80FD\u5305\u542B\u6C34\u5E73\u6216\u5782\u76F4\u8FD9\u56DB\u4E2A\u65B9\u5411\u4E0A\u7684 1 \u3002</p><blockquote><p>\u601D\u8DEF\uFF1A</p><p>count\u53D8\u91CF\u8BB0\u5F55\u88AB\u6DF9\u6CA1\u5C9B\u5C7F\u7684\u6570\u91CF\uFF0C\u53D6\u6700\u5927\u503C\uFF0C\u5C31\u662F\u5C9B\u5C7F\u7684\u6700\u5927\u9762\u79EF</p></blockquote><p>\u89E3\u6CD5\u4E00\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u8BB0\u5F55\u5C9B\u5C7F\u7684\u9762\u79EF</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BB0\u5F55\u5C9B\u5C7F\u7684\u6700\u5927\u9762\u79EF</span>
    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxAreaOfIsland</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u9047\u5230\u5C9B\u5C7F</span>
                    count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                    <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4ECE (i, j) \u5F00\u59CB\uFF0C\u5C06\u4E0E\u4E4B\u76F8\u90BB\u7684\u9646\u5730\u90FD\u53D8\u6210\u6D77\u6C34</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u68C0\u67E5\u8FB9\u754C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> m <span class="token operator">||</span> j <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5DF2\u7ECF\u662F\u6D77\u6C34</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6DF9\u6CA1\u5C9B\u5C7F</span>
        grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6570\u91CF+1</span>
        count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment">// \u53D6\u6700\u5927\u503C</span>
        res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u6CD5\u4E8C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u8BB0\u5F55\u5C9B\u5C7F\u7684\u6700\u5927\u9762\u79EF</span>
    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxAreaOfIsland</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u9047\u5230\u5C9B\u5C7F</span>
                    res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4ECE (i, j) \u5F00\u59CB\uFF0C\u5C06\u4E0E\u4E4B\u76F8\u90BB\u7684\u9646\u5730\u90FD\u53D8\u6210\u6D77\u6C34\uFF0C\u8FD4\u56DE\u6DF9\u6CA1\u7684\u5C9B\u5C7F\u7684\u9762\u79EF</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u68C0\u67E5\u8FB9\u754C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> m <span class="token operator">||</span> j <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5DF2\u7ECF\u662F\u6D77\u6C34</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6DF9\u6CA1\u5C9B\u5C7F</span>
        grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">+</span> 
                <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">+</span> 
                <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> 
                <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),Pn={id:"_1905-\u7EDF\u8BA1\u5B50\u5C9B\u5C7F",tabindex:"-1"},Kn=n("a",{class:"header-anchor",href:"#_1905-\u7EDF\u8BA1\u5B50\u5C9B\u5C7F","aria-hidden":"true"},"#",-1),Rn=s(),Un={href:"https://leetcode.cn/problems/count-sub-islands/",target:"_blank",rel:"noopener noreferrer"},Gn=s("1905. \u7EDF\u8BA1\u5B50\u5C9B\u5C7F"),Jn=t(`<p>\u7ED9\u4F60\u4E24\u4E2A m x n \u7684\u4E8C\u8FDB\u5236\u77E9\u9635 grid1 \u548C grid2 \uFF0C\u5B83\u4EEC\u53EA\u5305\u542B 0 \uFF08\u8868\u793A\u6C34\u57DF\uFF09\u548C 1 \uFF08\u8868\u793A\u9646\u5730\uFF09\u3002\u4E00\u4E2A \u5C9B\u5C7F \u662F\u7531 \u56DB\u4E2A\u65B9\u5411 \uFF08\u6C34\u5E73\u6216\u8005\u7AD6\u76F4\uFF09\u4E0A\u76F8\u90BB\u7684 1 \u7EC4\u6210\u7684\u533A\u57DF\u3002\u4EFB\u4F55\u77E9\u9635\u4EE5\u5916\u7684\u533A\u57DF\u90FD\u89C6\u4E3A\u6C34\u57DF\u3002</p><p>\u5982\u679C grid2 \u7684\u4E00\u4E2A\u5C9B\u5C7F\uFF0C\u88AB grid1 \u7684\u4E00\u4E2A\u5C9B\u5C7F \u5B8C\u5168 \u5305\u542B\uFF0C\u4E5F\u5C31\u662F\u8BF4 grid2 \u4E2D\u8BE5\u5C9B\u5C7F\u7684\u6BCF\u4E00\u4E2A\u683C\u5B50\u90FD\u88AB grid1 \u4E2D\u540C\u4E00\u4E2A\u5C9B\u5C7F\u5B8C\u5168\u5305\u542B\uFF0C\u90A3\u4E48\u6211\u4EEC\u79F0 grid2 \u4E2D\u7684\u8FD9\u4E2A\u5C9B\u5C7F\u4E3A \u5B50\u5C9B\u5C7F \u3002</p><p>\u8BF7\u4F60\u8FD4\u56DE grid2 \u4E2D \u5B50\u5C9B\u5C7F \u7684 \u6570\u76EE \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/image-20220907103813290.png" alt="image-20220907103813290"></p><p>\u8F93\u5165\uFF1Agrid1 = [[1,1,1,0,0],[0,1,1,1,1],[0,0,0,0,0],[1,0,0,0,0],[1,1,0,1,1]], grid2 = [[1,1,1,0,0],[0,0,1,1,1],[0,1,0,0,0],[1,0,1,1,0],[0,1,0,1,0]] \u8F93\u51FA\uFF1A3 \u89E3\u91CA\uFF1A\u5982\u4E0A\u56FE\u6240\u793A\uFF0C\u5DE6\u8FB9\u4E3A grid1 \uFF0C\u53F3\u8FB9\u4E3A grid2 \u3002 grid2 \u4E2D\u6807\u7EA2\u7684 1 \u533A\u57DF\u662F\u5B50\u5C9B\u5C7F\uFF0C\u603B\u5171\u6709 3 \u4E2A\u5B50\u5C9B\u5C7F\u3002</p><blockquote><p>\u601D\u8DEF\uFF1A</p><p>1.\u5148\u6392\u9664\u6240\u6709\u7684\u975E\u5B50\u5C9B\u5C7F grid1[i] [j] = 0 &amp;&amp; grid2[i] [j] = 1</p><p>2.\u7EDF\u8BA1 grid2 \u4E2D\u7684\u5C9B\u5C7F\u6570\u91CF</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">countSubIslands</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid2<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>grid1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> grid2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u975E\u5B50\u5C9B\u5C7F\uFF0C\u6DF9\u6CA1</span>
                    <span class="token function">dfs</span><span class="token punctuation">(</span>grid2<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 1.\u904D\u5386\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>grid2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 2.\u9047\u5230\u5C9B\u5C7F\u65F6\uFF0Cres++\uFF0C\u5E76\u7528\u6D77\u6C34\u6DF9\u6CA1\u5F53\u524D\u5C9B\u5C7F\u548C\u5468\u56F4\u5C9B\u5C7F(\u907F\u514D\u7EF4\u62A4 visited \u6570\u7EC4\uFF0C\u8D70\u56DE\u5934\u8DEF)</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token function">dfs</span><span class="token punctuation">(</span>grid2<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
     <span class="token comment">// \u4ECE (i, j) \u5F00\u59CB\uFF0C\u5C06\u4E0E\u4E4B\u76F8\u90BB\u7684\u9646\u5730\u90FD\u53D8\u6210\u6D77\u6C34</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// 1.\u68C0\u67E5\u8FB9\u754C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> m <span class="token operator">||</span> j <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 2.\u5F53\u524D\u5DF2\u7ECF\u662F\u6D77\u6C34\uFF0C\u8DF3\u8FC7</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.\u6DF9\u6CA1\u5F53\u524D\u5C9B\u5C7F</span>
        grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.\u6DF9\u6CA1\u4E0A\u4E0B\u5DE6\u53F3\u7684\u5C9B\u5C7F        </span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),Xn={id:"_694-\u4E0D\u540C\u7684\u5C9B\u5C7F\u6570\u91CF",tabindex:"-1"},Yn=n("a",{class:"header-anchor",href:"#_694-\u4E0D\u540C\u7684\u5C9B\u5C7F\u6570\u91CF","aria-hidden":"true"},"#",-1),Zn=s(),$n={href:"https://leetcode.cn/problems/number-of-distinct-islands/",target:"_blank",rel:"noopener noreferrer"},ns=s("694. \u4E0D\u540C\u7684\u5C9B\u5C7F\u6570\u91CF"),ss=t(`<p>\u8F93\u5165\u4E00\u4E2A\u4E8C\u7EF4\u77E9\u9635\uFF0C<code>0</code> \u8868\u793A\u6D77\u6C34\uFF0C<code>1</code> \u8868\u793A\u9646\u5730\uFF0C\u8FD9\u6B21\u8BA9\u4F60\u8BA1\u7B97 <strong>\u4E0D\u540C\u7684 (distinct)</strong> \u5C9B\u5C7F\u6570\u91CF\uFF0C\u51FD\u6570\u7B7E\u540D\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token function">numDistinctIslands</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6BD4\u5982\u9898\u76EE\u8F93\u5165\u4E0B\u9762\u8FD9\u4E2A\u4E8C\u7EF4\u77E9\u9635\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/image-20220907105706720.png" alt="image-20220907105706720"></p><p>\u5176\u4E2D\u6709\u56DB\u4E2A\u5C9B\u5C7F\uFF0C\u4F46\u662F\u5DE6\u4E0B\u89D2\u548C\u53F3\u4E0A\u89D2\u7684\u5C9B\u5C7F\u5F62\u72B6\u76F8\u540C\uFF0C\u6240\u4EE5\u4E0D\u540C\u7684\u5C9B\u5C7F\u5171\u6709\u4E09\u4E2A\uFF0C\u7B97\u6CD5\u8FD4\u56DE 3\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/image-20220907105823149.png" alt="image-20220907105823149"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">numDistinctIslands</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u8BB0\u5F55\u6240\u6709\u5C9B\u5C7F\u7684\u5E8F\u5217\u5316\u7ED3\u679C</span>
        <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> islands <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u6DF9\u6389\u8FD9\u4E2A\u5C9B\u5C7F\uFF0C\u540C\u65F6\u5B58\u50A8\u5C9B\u5C7F\u7684\u5E8F\u5217\u5316\u7ED3\u679C</span>
                    <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u521D\u59CB\u7684\u65B9\u5411\u53EF\u4EE5\u968F\u4FBF\u5199\uFF0C\u4E0D\u5F71\u54CD\u6B63\u786E\u6027</span>
                    <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> sb<span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    islands<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4E0D\u76F8\u540C\u7684\u5C9B\u5C7F\u6570\u91CF</span>
        <span class="token keyword">return</span> islands<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">,</span> <span class="token class-name">StringBuilder</span> sb<span class="token punctuation">,</span> <span class="token keyword">int</span> dir<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> m <span class="token operator">||</span> j <span class="token operator">&gt;=</span> n <span class="token operator">||</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u524D\u5E8F\u904D\u5386\u4F4D\u7F6E\uFF1A\u8FDB\u5165 (i, j)</span>
        grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> sb<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0A</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> sb<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0B</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> sb<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5DE6</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> sb<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53F3</span>

        <span class="token comment">// \u540E\u5E8F\u904D\u5386\u4F4D\u7F6E\uFF1A\u79BB\u5F00 (i, j)</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token operator">-</span>dir<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-\u56DE\u6EAF\u7B97\u6CD5\u6700\u4F73\u5B9E\u8DF5-\u62EC\u53F7\u751F\u6210" tabindex="-1"><a class="header-anchor" href="#_1-5-\u56DE\u6EAF\u7B97\u6CD5\u6700\u4F73\u5B9E\u8DF5-\u62EC\u53F7\u751F\u6210" aria-hidden="true">#</a> 1.5 \u56DE\u6EAF\u7B97\u6CD5\u6700\u4F73\u5B9E\u8DF5\uFF1A\u62EC\u53F7\u751F\u6210</h3>`,8),as={id:"_22-\u62EC\u53F7\u751F\u6210",tabindex:"-1"},ps=n("a",{class:"header-anchor",href:"#_22-\u62EC\u53F7\u751F\u6210","aria-hidden":"true"},"#",-1),ts=s(),os={href:"https://leetcode.cn/problems/generate-parentheses/",target:"_blank",rel:"noopener noreferrer"},es=s("22. \u62EC\u53F7\u751F\u6210"),cs=t(`<p>\u6570\u5B57 n \u4EE3\u8868\u751F\u6210\u62EC\u53F7\u7684\u5BF9\u6570\uFF0C\u8BF7\u4F60\u8BBE\u8BA1\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u4E8E\u80FD\u591F\u751F\u6210\u6240\u6709\u53EF\u80FD\u7684\u5E76\u4E14 \u6709\u6548\u7684 \u62EC\u53F7\u7EC4\u5408\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1An = 3 \u8F93\u51FA\uFF1A[&quot;((()))&quot;,&quot;(()())&quot;,&quot;(())()&quot;,&quot;()(())&quot;,&quot;()()()&quot;]</p><blockquote><p>\u56DE\u6EAF\u7B97\u6CD5\u601D\u8DEF\uFF1A</p><p>track\uFF1A\u8BB0\u5F55\u8DEF\u5F84</p><p>\u9009\u62E9\u5217\u8868\uFF1A()</p><p>\u7ED3\u675F\u6761\u4EF6\uFF1A\u6CA1\u6709\u53EF\u7528\u7684\u5DE6\u53F3\u62EC\u53F7</p><p>left \u8868\u793A\u53EF\u7528\u7684\u5DE6\u62EC\u53F7\u6570\u91CF</p><p>right \u8868\u793A\u53EF\u7528\u7684\u53F3\u62EC\u53F7\u6570\u91CF</p><p>backtrack(track, left, right)</p><p>0.\u7ED3\u675F\u6761\u4EF6\uFF1A\u6CA1\u6709\u53EF\u7528\u7684\u5DE6\u53F3\u62EC\u53F7</p><p>1.\u526A\u679D\u903B\u8F91</p><p>1.1 \u53EF\u7528\u7684\u5DE6\u53F3\u62EC\u53F7 &lt; 0</p><p>1.2 \u5269\u4E0B\u7684\u5DE6\u62EC\u53F7 &gt; \u5269\u4E0B\u7684\u53F3\u62EC\u53F7</p><p>2.\u9009\u62E9\u5DE6\u62EC\u53F7</p><p>3.\u8FDB\u5165\u4E0B\u4E00\u5C42\u51B3\u7B56\u6811</p><p>4.\u64A4\u9500\u9009\u62E9</p><p>5.\u53F3\u62EC\u53F7\u540C\u7406</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">generateParenthesis</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> track <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>track<span class="token punctuation">,</span> n<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// left \u8868\u793A\u53EF\u7528\u7684\u5DE6\u62EC\u53F7\u6570\u91CF</span>
    <span class="token comment">// right \u8868\u793A\u53EF\u7528\u7684\u53F3\u62EC\u53F7\u6570\u91CF</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token class-name">StringBuilder</span> track<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 0.\u7ED3\u675F\u6761\u4EF6\uFF1A\u6CA1\u6709\u53EF\u7528\u7684\u5DE6\u53F3\u62EC\u53F7</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>track<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 1.\u526A\u679D\u903B\u8F91\uFF08\u526A\u6389\u4E0D\u5408\u6CD5\u7684\u62EC\u53F7\u7EC4\u5408\uFF09</span>
        <span class="token comment">// 1.1 \u53EF\u7528\u7684\u5DE6\u53F3\u62EC\u53F7 &lt; 0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> right <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.2 \u5269\u4E0B\u7684\u5DE6\u62EC\u53F7 &gt; \u5269\u4E0B\u7684\u53F3\u62EC\u53F7</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&gt;</span> right<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.\u9009\u62E9\u5DE6\u62EC\u53F7</span>
        track<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;(&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.\u8FDB\u5165\u4E0B\u4E00\u5C42\u51B3\u7B56\u6811</span>
        <span class="token comment">// \u53EF\u7528\u7684\u5DE6\u62EC\u53F7\u6570\u91CF-1</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>track<span class="token punctuation">,</span> left <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.\u64A4\u9500\u9009\u62E9</span>
        track<span class="token punctuation">.</span><span class="token function">deleteCharAt</span><span class="token punctuation">(</span>track<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5.\u53F3\u62EC\u53F7\u540C\u7406</span>
        track<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>track<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        track<span class="token punctuation">.</span><span class="token function">deleteCharAt</span><span class="token punctuation">(</span>track<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-6-\u56DE\u6EAF\u7B97\u6CD5\u6700\u4F73\u5B9E\u8DF5-\u89E3\u6570\u72EC" tabindex="-1"><a class="header-anchor" href="#_1-6-\u56DE\u6EAF\u7B97\u6CD5\u6700\u4F73\u5B9E\u8DF5-\u89E3\u6570\u72EC" aria-hidden="true">#</a> 1.6 \u56DE\u6EAF\u7B97\u6CD5\u6700\u4F73\u5B9E\u8DF5\uFF1A\u89E3\u6570\u72EC</h3>`,6),ls={id:"_37-\u89E3\u6570\u72EC",tabindex:"-1"},is=n("a",{class:"header-anchor",href:"#_37-\u89E3\u6570\u72EC","aria-hidden":"true"},"#",-1),us=s(),ks={href:"https://leetcode.cn/problems/sudoku-solver/",target:"_blank",rel:"noopener noreferrer"},rs=s("37. \u89E3\u6570\u72EC"),ds=t(`<p>\u7F16\u5199\u4E00\u4E2A\u7A0B\u5E8F\uFF0C\u901A\u8FC7\u586B\u5145\u7A7A\u683C\u6765\u89E3\u51B3\u6570\u72EC\u95EE\u9898\u3002</p><p>\u6570\u72EC\u7684\u89E3\u6CD5\u9700 \u9075\u5FAA\u5982\u4E0B\u89C4\u5219\uFF1A</p><p>\u6570\u5B57 1-9 \u5728\u6BCF\u4E00\u884C\u53EA\u80FD\u51FA\u73B0\u4E00\u6B21\u3002 \u6570\u5B57 1-9 \u5728\u6BCF\u4E00\u5217\u53EA\u80FD\u51FA\u73B0\u4E00\u6B21\u3002 \u6570\u5B57 1-9 \u5728\u6BCF\u4E00\u4E2A\u4EE5\u7C97\u5B9E\u7EBF\u5206\u9694\u7684 3x3 \u5BAB\u5185\u53EA\u80FD\u51FA\u73B0\u4E00\u6B21\u3002\uFF08\u8BF7\u53C2\u8003\u793A\u4F8B\u56FE\uFF09 \u6570\u72EC\u90E8\u5206\u7A7A\u683C\u5185\u5DF2\u586B\u5165\u4E86\u6570\u5B57\uFF0C\u7A7A\u767D\u683C\u7528 &#39;.&#39; \u8868\u793A\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209081119398.png" alt="image-20220908111918235"></p><blockquote><p>\u56DE\u6EAF\u7B97\u6CD5\u601D\u8DEF\uFF1A</p><p>i \u8868\u793A \u7B2C i \u884C</p><p>j \u8868\u793A \u7B2C j \u5217</p><p>backtrack(board, i, j)</p><p>\u8DEF\u5F84\uFF1Aboard</p><p>\u9009\u62E9: &#39;1&#39;-&#39;9&#39;</p><p>\u7ED3\u675F\u6761\u4EF6\uFF1Ai \u5DF2\u7ECF\u904D\u5386\u5B8C\u6240\u6709\u7684\u884C</p><p>1.\u7ED3\u675F\u6761\u4EF6\uFF1Ai \u5DF2\u7ECF\u904D\u5386\u5B8C\u6240\u6709\u7684\u884C</p><p>2.j \u5DF2\u7ECF\u904D\u5386\u5B8C\u6240\u6709\u7684\u5217\uFF0C\u7EE7\u7EED\u4E0B\u4E00\u884C</p><p>3.\u9884\u8BBE\u6570\u5B57\uFF0C\u7EE7\u7EED\u4E0B\u4E00\u5217</p><p>4.\u505A\u9009\u62E9 &#39;1&#39;-&#39;9&#39;</p><p>5.\u5224\u65AD\u662F\u5426\u5408\u6CD5</p><p>6.\u9009\u62E9\uFF0C\u7EE7\u7EED\u4E0B\u4E00\u5217</p><p>7.\u64A4\u9500\u9009\u62E9</p><p>\u4F18\u5316\uFF1A\u8BA9 backtrace \u6709\u8FD4\u56DE\u503C\uFF0C\u627E\u5230\u4E00\u4E2A\u53EF\u884C\u89E3\u6551\u8FD4\u56DEtrue\uFF0C\u963B\u6B62\u540E\u9762\u7684\u9012\u5F52\uFF0C\u8FD9\u9053\u9898\u4E5F\u662F\u53EA\u8981\u6C42\u4E00\u4E2A\u53EF\u884C\u89E3</p></blockquote><p>\u5224\u65AD3*3\u77E9\u9635\u662F\u5426\u91CD\u590D</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209081140029.png" alt="image-20220908114031954"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">solveSudoku</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">backtrack</span><span class="token punctuation">(</span>board<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// i \u8868\u793A \u7B2C i \u884C</span>
    <span class="token comment">// j \u8868\u793A \u7B2C j \u5217    </span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.\u7ED3\u675F\u6761\u4EF6\uFF1Ai \u5DF2\u7ECF\u904D\u5386\u5B8C\u6240\u6709\u7684\u884C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2.j \u5DF2\u7ECF\u904D\u5386\u5B8C\u6240\u6709\u7684\u5217\uFF0C\u7EE7\u7EED\u4E0B\u4E00\u884C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">backtrack</span><span class="token punctuation">(</span>board<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.\u9884\u8BBE\u6570\u5B57\uFF0C\u7EE7\u7EED\u4E0B\u4E00\u5217</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">backtrack</span><span class="token punctuation">(</span>board<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4.\u505A\u9009\u62E9 &#39;1&#39;-&#39;9&#39;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> ch <span class="token operator">=</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">;</span> ch <span class="token operator">&lt;=</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">;</span> ch<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 5.\u5224\u65AD\u662F\u5426\u5408\u6CD5</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isValid</span><span class="token punctuation">(</span>board<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E0D\u5408\u6CD5</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 6.\u9009\u62E9\uFF0C\u7EE7\u7EED\u4E0B\u4E00\u5217</span>
            board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> ch<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">backtrack</span><span class="token punctuation">(</span>board<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 7.\u64A4\u9500\u9009\u62E9</span>
            board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5DF2\u7ECF\u904D\u5386\u5B8C\u6240\u6709\u7684\u6570\u5B57\uFF0C\u627E\u4E0D\u5230\u89E3</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> col<span class="token punctuation">,</span> <span class="token keyword">char</span> ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1.\u5224\u65AD\u884C\u662F\u5426\u91CD\u590D</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> ch<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token comment">// 2.\u5224\u65AD\u5217\u662F\u5426\u91CD\u590D</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">==</span> ch<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.\u5224\u65AD3*3\u77E9\u9635\u662F\u5426\u91CD\u590D</span>
            <span class="token keyword">int</span> startRow <span class="token operator">=</span> row <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> startCol <span class="token operator">=</span> col <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>startRow <span class="token operator">+</span> i <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>startCol <span class="token operator">+</span> i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> ch<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-7-bfs-\u7B97\u6CD5\u89E3\u9898\u5957\u8DEF\u6846\u67B6" tabindex="-1"><a class="header-anchor" href="#_1-7-bfs-\u7B97\u6CD5\u89E3\u9898\u5957\u8DEF\u6846\u67B6" aria-hidden="true">#</a> 1.7 BFS \u7B97\u6CD5\u89E3\u9898\u5957\u8DEF\u6846\u67B6</h3><p>\u6A21\u677F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8BA1\u7B97\u4ECE\u8D77\u70B9 start \u5230\u7EC8\u70B9 target \u7684\u6700\u8FD1\u8DDD\u79BB</span>
<span class="token keyword">int</span> <span class="token function">BFS</span><span class="token punctuation">(</span><span class="token class-name">Node</span> start<span class="token punctuation">,</span> <span class="token class-name">Node</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> q<span class="token punctuation">;</span> <span class="token comment">// \u6838\u5FC3\u6570\u636E\u7ED3\u6784</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> visited<span class="token punctuation">;</span> <span class="token comment">// \u907F\u514D\u8D70\u56DE\u5934\u8DEF</span>
    
    q<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u8D77\u70B9\u52A0\u5165\u961F\u5217</span>
    visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> step <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u6269\u6563\u7684\u6B65\u6570</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>q not empty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> sz <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/* \u5C06\u5F53\u524D\u961F\u5217\u4E2D\u7684\u6240\u6709\u8282\u70B9\u5411\u56DB\u5468\u6269\u6563 */</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sz<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span> cur <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">/* \u5212\u91CD\u70B9\uFF1A\u8FD9\u91CC\u5224\u65AD\u662F\u5426\u5230\u8FBE\u7EC8\u70B9 */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cur is target<span class="token punctuation">)</span>
                <span class="token keyword">return</span> step<span class="token punctuation">;</span>
            <span class="token comment">/* \u5C06 cur \u7684\u76F8\u90BB\u8282\u70B9\u52A0\u5165\u961F\u5217 */</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> x <span class="token operator">:</span> cur<span class="token punctuation">.</span><span class="token function">adj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>x not in visited<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    q<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">/* \u5212\u91CD\u70B9\uFF1A\u66F4\u65B0\u6B65\u6570\u5728\u8FD9\u91CC */</span>
        step<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),ms={id:"_111-\u4E8C\u53C9\u6811\u7684\u6700\u5C0F\u6DF1\u5EA6",tabindex:"-1"},vs=n("a",{class:"header-anchor",href:"#_111-\u4E8C\u53C9\u6811\u7684\u6700\u5C0F\u6DF1\u5EA6","aria-hidden":"true"},"#",-1),bs=s(),gs={href:"https://leetcode.cn/problems/minimum-depth-of-binary-tree/",target:"_blank",rel:"noopener noreferrer"},hs=s("111. \u4E8C\u53C9\u6811\u7684\u6700\u5C0F\u6DF1\u5EA6"),ws=t(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u53C9\u6811\uFF0C\u627E\u51FA\u5176\u6700\u5C0F\u6DF1\u5EA6\u3002</p><p>\u6700\u5C0F\u6DF1\u5EA6\u662F\u4ECE\u6839\u8282\u70B9\u5230\u6700\u8FD1\u53F6\u5B50\u8282\u70B9\u7684\u6700\u77ED\u8DEF\u5F84\u4E0A\u7684\u8282\u70B9\u6570\u91CF\u3002</p><p>**\u8BF4\u660E\uFF1A**\u53F6\u5B50\u8282\u70B9\u662F\u6307\u6CA1\u6709\u5B50\u8282\u70B9\u7684\u8282\u70B9\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209282351723.png" alt="image-20220928235102625"></p><blockquote><p>1.\u58F0\u660E\u961F\u5217</p><p>2.\u5C06\u6839\u8282\u70B9\u52A0\u5165\u961F\u5217\u4E2D</p><p>3.\u5BF9\u4E8E\u6BCF\u4E00\u5C42\uFF0C\u53D6\u51FA\u8282\u70B9\uFF0C\u5224\u65AD\u662F\u5426\u662F\u53F6\u5B50\u7ED3\u70B9</p><p>4.\u53F6\u5B50\u7ED3\u70B9\uFF0C\u8FD4\u56DE\u7ED3\u679C res</p><p>5.\u975E\u53F6\u5B50\u7ED3\u70B9\uFF0C\u5C06\u8BE5\u8282\u70B9\u7684\u5DE6\u53F3\u8282\u70B9\u52A0\u5165\u961F\u5217</p><p>6.\u66F4\u65B0res</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minDepth</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.\u58F0\u660E\u961F\u5217</span>
        <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.\u5C06\u6839\u8282\u70B9\u52A0\u5165\u961F\u5217\u4E2D</span>
        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> sz <span class="token operator">=</span>  queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sz<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 3.\u53D6\u51FA\u5F53\u524D\u8282\u70B9\uFF0C\u5224\u65AD\u662F\u5426\u662F\u53F6\u5B50\u7ED3\u70B9</span>
                <span class="token class-name">TreeNode</span> node <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 4.\u53F6\u5B50\u7ED3\u70B9\uFF0C\u8FD4\u56DE\u7ED3\u679C res</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> 
                <span class="token comment">// 5.\u975E\u53F6\u5B50\u7ED3\u70B9\uFF0C\u5C06\u8BE5\u8282\u70B9\u7684\u5DE6\u53F3\u8282\u70B9\u52A0\u5165\u961F\u5217</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 6.\u66F4\u65B0res</span>
            res<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9012\u5F52\u89E3\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minDepth</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token function">minDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token function">minDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5DE6\u8282\u70B9\u4E3A\u7A7A\uFF0C\u8FD4\u56DE\u53F3\u8282\u70B9\u7684\u6700\u5C0F\u6DF1\u5EA6</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u540C\u7406</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5DE6\u53F3\u8282\u70B9\u90FD\u4E0D\u4E3A\u7A7A</span>
        <span class="token comment">// \u6700\u5C0F\u6DF1\u5EA6\u7B49\u4E8Emin(\u5DE6\u5B50\u6811\u7684\u6700\u5C0F\u6DF1\u5EA6, \u53F3\u5B50\u6811\u7684\u6700\u5C0F\u6DF1\u5EA6) + 1</span>
        <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5408\u5E76\u8D77\u6765</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minDepth</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token function">minDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token function">minDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> root<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> root<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> l <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),ys={id:"_752-\u6253\u5F00\u8F6C\u76D8\u9501",tabindex:"-1"},fs=n("a",{class:"header-anchor",href:"#_752-\u6253\u5F00\u8F6C\u76D8\u9501","aria-hidden":"true"},"#",-1),_s=s(),js={href:"https://leetcode.cn/problems/open-the-lock/",target:"_blank",rel:"noopener noreferrer"},qs=s("752. \u6253\u5F00\u8F6C\u76D8\u9501"),xs=t(`<p>\u4F60\u6709\u4E00\u4E2A\u5E26\u6709\u56DB\u4E2A\u5706\u5F62\u62E8\u8F6E\u7684\u8F6C\u76D8\u9501\u3002\u6BCF\u4E2A\u62E8\u8F6E\u90FD\u670910\u4E2A\u6570\u5B57\uFF1A &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39; \u3002\u6BCF\u4E2A\u62E8\u8F6E\u53EF\u4EE5\u81EA\u7531\u65CB\u8F6C\uFF1A\u4F8B\u5982\u628A &#39;9&#39; \u53D8\u4E3A &#39;0&#39;\uFF0C&#39;0&#39; \u53D8\u4E3A &#39;9&#39; \u3002\u6BCF\u6B21\u65CB\u8F6C\u90FD\u53EA\u80FD\u65CB\u8F6C\u4E00\u4E2A\u62E8\u8F6E\u7684\u4E00\u4F4D\u6570\u5B57\u3002</p><p>\u9501\u7684\u521D\u59CB\u6570\u5B57\u4E3A &#39;0000&#39; \uFF0C\u4E00\u4E2A\u4EE3\u8868\u56DB\u4E2A\u62E8\u8F6E\u7684\u6570\u5B57\u7684\u5B57\u7B26\u4E32\u3002</p><p>\u5217\u8868 deadends \u5305\u542B\u4E86\u4E00\u7EC4\u6B7B\u4EA1\u6570\u5B57\uFF0C\u4E00\u65E6\u62E8\u8F6E\u7684\u6570\u5B57\u548C\u5217\u8868\u91CC\u7684\u4EFB\u4F55\u4E00\u4E2A\u5143\u7D20\u76F8\u540C\uFF0C\u8FD9\u4E2A\u9501\u5C06\u4F1A\u88AB\u6C38\u4E45\u9501\u5B9A\uFF0C\u65E0\u6CD5\u518D\u88AB\u65CB\u8F6C\u3002</p><p>\u5B57\u7B26\u4E32 target \u4EE3\u8868\u53EF\u4EE5\u89E3\u9501\u7684\u6570\u5B57\uFF0C\u4F60\u9700\u8981\u7ED9\u51FA\u89E3\u9501\u9700\u8981\u7684\u6700\u5C0F\u65CB\u8F6C\u6B21\u6570\uFF0C\u5982\u679C\u65E0\u8BBA\u5982\u4F55\u4E0D\u80FD\u89E3\u9501\uFF0C\u8FD4\u56DE -1 \u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165\uFF1Adeadends = [&quot;0201&quot;,&quot;0101&quot;,&quot;0102&quot;,&quot;1212&quot;,&quot;2002&quot;], target = &quot;0202&quot; \u8F93\u51FA\uFF1A6 \u89E3\u91CA\uFF1A \u53EF\u80FD\u7684\u79FB\u52A8\u5E8F\u5217\u4E3A &quot;0000&quot; -&gt; &quot;1000&quot; -&gt; &quot;1100&quot; -&gt; &quot;1200&quot; -&gt; &quot;1201&quot; -&gt; &quot;1202&quot; -&gt; &quot;0202&quot;\u3002 \u6CE8\u610F &quot;0000&quot; -&gt; &quot;0001&quot; -&gt; &quot;0002&quot; -&gt; &quot;0102&quot; -&gt; &quot;0202&quot; \u8FD9\u6837\u7684\u5E8F\u5217\u662F\u4E0D\u80FD\u89E3\u9501\u7684\uFF0C \u56E0\u4E3A\u5F53\u62E8\u52A8\u5230 &quot;0102&quot; \u65F6\u8FD9\u4E2A\u9501\u5C31\u4F1A\u88AB\u9501\u5B9A\u3002</p><blockquote><p>s[j] \u5411\u4E0A\u62E8\u52A8</p><p>s[j] \u5411\u4E0B\u62E8\u52A8</p><p>1.\u521B\u5EFA\u6B7B\u4EA1\u6570\u5B57\u96C6\u5408 dead\uFF0C\u5DF2\u7ECF\u904D\u5386\u8FC7\u7684\u96C6\u5408 visited</p><p>2.\u521B\u5EFA\u961F\u5217</p><p>3.\u5C06 &quot;0000&quot; \u52A0\u5165\u961F\u5217\u548Cvisited</p><p>4.\u904D\u5386\u6BCF\u4E00\u5C42</p><p>5.\u5224\u65AD\u662F\u5426\u5230\u76EE\u6807\u6570\u5B57</p><p>6.\u5224\u65AD\u662F\u5426\u662F\u6B7B\u4EA1\u6570\u5B57</p><p>7.\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u6570\u5B57\uFF0C\u5411\u4E0A\u6216\u5411\u4E0B\u62E8\u52A8</p><p>8.\u6CA1\u6709\u904D\u5386\u8FC7\uFF0C\u52A0\u5165\u961F\u5217\u548Cvisited</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">openLock</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> deadends<span class="token punctuation">,</span> <span class="token class-name">String</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u521B\u5EFA\u6B7B\u4EA1\u6570\u5B57\u96C6\u5408 dead\uFF0C\u5DF2\u7ECF\u904D\u5386\u8FC7\u7684\u96C6\u5408 visited</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> deads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> dead <span class="token operator">:</span> deadends<span class="token punctuation">)</span> deads<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>dead<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.\u521B\u5EFA\u961F\u5217</span>
        <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.\u5C06 &quot;0000&quot; \u52A0\u5165\u961F\u5217\u548Cvisited</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        q<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;0000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 4.\u904D\u5386\u6BCF\u4E00\u5C42</span>
            <span class="token keyword">int</span> sz <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sz<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> cur <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 5.\u5224\u65AD\u662F\u5426\u5230\u76EE\u6807\u6570\u5B57</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">;</span>
                <span class="token comment">// 6.\u5224\u65AD\u662F\u5426\u662F\u6B7B\u4EA1\u6570\u5B57</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>deads<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token comment">// 7.\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u6570\u5B57\uFF0C\u5411\u4E0A\u6216\u5411\u4E0B\u62E8\u52A8</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> plus <span class="token operator">=</span> <span class="token function">plus</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">String</span> minus <span class="token operator">=</span> <span class="token function">minus</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 8.\u6CA1\u6709\u904D\u5386\u8FC7\uFF0C\u52A0\u5165\u961F\u5217\u548Cvisited</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>plus<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>plus<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        q<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>plus<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>minus<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>minus<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        q<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>minus<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            res<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4E0D\u80FD\u89E3\u9501</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5411\u4E0A\u62E8\u52A8\u4E00\u683C</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">plus</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5411\u4E0B\u62E8\u52A8\u4E00\u683C</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">minus</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-8-\u5982\u4F55\u7528-bfs-\u7B97\u6CD5\u79D2\u6740\u5404\u79CD\u667A\u529B\u9898" tabindex="-1"><a class="header-anchor" href="#_1-8-\u5982\u4F55\u7528-bfs-\u7B97\u6CD5\u79D2\u6740\u5404\u79CD\u667A\u529B\u9898" aria-hidden="true">#</a> 1.8 \u5982\u4F55\u7528 BFS \u7B97\u6CD5\u79D2\u6740\u5404\u79CD\u667A\u529B\u9898</h3>`,9),Ls={id:"_773-\u6ED1\u52A8\u8C1C\u9898",tabindex:"-1"},Ss=n("a",{class:"header-anchor",href:"#_773-\u6ED1\u52A8\u8C1C\u9898","aria-hidden":"true"},"#",-1),Is=s(),As={href:"https://leetcode.cn/problems/sliding-puzzle/",target:"_blank",rel:"noopener noreferrer"},Ms=s("773. \u6ED1\u52A8\u8C1C\u9898"),Ns=t(`<p>\u5728\u4E00\u4E2A 2 x 3 \u7684\u677F\u4E0A\uFF08board\uFF09\u6709 5 \u5757\u7816\u74E6\uFF0C\u7528\u6570\u5B57 1~5 \u6765\u8868\u793A, \u4EE5\u53CA\u4E00\u5757\u7A7A\u7F3A\u7528 0 \u6765\u8868\u793A\u3002\u4E00\u6B21 \u79FB\u52A8 \u5B9A\u4E49\u4E3A\u9009\u62E9 0 \u4E0E\u4E00\u4E2A\u76F8\u90BB\u7684\u6570\u5B57\uFF08\u4E0A\u4E0B\u5DE6\u53F3\uFF09\u8FDB\u884C\u4EA4\u6362.</p><p>\u6700\u7EC8\u5F53\u677F board \u7684\u7ED3\u679C\u662F [[1,2,3],[4,5,0]] \u8C1C\u677F\u88AB\u89E3\u5F00\u3002</p><p>\u7ED9\u51FA\u4E00\u4E2A\u8C1C\u677F\u7684\u521D\u59CB\u72B6\u6001 board \uFF0C\u8FD4\u56DE\u6700\u5C11\u53EF\u4EE5\u901A\u8FC7\u591A\u5C11\u6B21\u79FB\u52A8\u89E3\u5F00\u8C1C\u677F\uFF0C\u5982\u679C\u4E0D\u80FD\u89E3\u5F00\u8C1C\u677F\uFF0C\u5219\u8FD4\u56DE -1 \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209101103169.png" alt="image-20220910110324093"></p><p>\u8F93\u5165\uFF1Aboard = [[1,2,3],[4,0,5]] \u8F93\u51FA\uFF1A1 \u89E3\u91CA\uFF1A\u4EA4\u6362 0 \u548C 5 \uFF0C1 \u6B65\u5B8C\u6210</p><blockquote><p>BFS\u601D\u8DEF\uFF1A</p><p>1.\u58F0\u660E\u961F\u5217\u548Cvisited</p><p>2.\u904D\u5386\u6BCF\u4E00\u5C42</p><p>3.\u53D6\u51FA\u5F53\u524D\u5143\u7D20</p><p>4.\u5224\u65AD\u662F\u5426\u5230\u8FBE target</p><p>5.\u627E\u5230 0 \u7684\u7D22\u5F15</p><p>6.\u904D\u5386 0 \u7684\u76F8\u90BB\u7D22\u5F15\uFF0C\u4EA4\u6362\u4F4D\u7F6E</p><p>7.\u4E0D\u5728visited\u5185\uFF0C\u52A0\u5165\u961F\u5217\u548Cvisited</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">slidingPuzzle</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
         <span class="token comment">// \u58F0\u660E\u4E8C\u7EF4\u6570\u7EC4\u5B58\u653E\u76F8\u90BB\u7D22\u5F15</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nei <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
            <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.\u58F0\u660E\u961F\u5217\u548Cvisited</span>
        <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> start <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        q<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
        visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.\u904D\u5386\u6BCF\u4E00\u5C42</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   
            <span class="token keyword">int</span> sz <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sz<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 3.\u53D6\u51FA\u5F53\u524D\u5143\u7D20</span>
                <span class="token class-name">String</span> cur <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 4.\u5224\u65AD\u662F\u5426\u5230\u8FBE target</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;123450&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 5.\u627E\u5230 0 \u7684\u7D22\u5F15</span>
                <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> cur<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 6.\u904D\u5386 0 \u7684\u76F8\u90BB\u7D22\u5F15\uFF0C\u4EA4\u6362\u4F4D\u7F6E</span>
                <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> nei<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> new_str <span class="token operator">=</span> <span class="token function">swap</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> idx<span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 7.\u4E0D\u5728visited\u5185\uFF0C\u52A0\u5165\u961F\u5217\u548Cvisited</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>new_str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>new_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        q<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>new_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            res<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u65E0\u89E3</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span> temp <span class="token operator">=</span> ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u7ECF\u5178\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#_2-\u7ECF\u5178\u9762\u8BD5\u9898" aria-hidden="true">#</a> 2.\u7ECF\u5178\u9762\u8BD5\u9898</h2><h3 id="_2-1-\u5206\u6CBB\u7B97\u6CD5\u8BE6\u89E3-\u8FD0\u7B97\u4F18\u5148\u7EA7" tabindex="-1"><a class="header-anchor" href="#_2-1-\u5206\u6CBB\u7B97\u6CD5\u8BE6\u89E3-\u8FD0\u7B97\u4F18\u5148\u7EA7" aria-hidden="true">#</a> 2.1 \u5206\u6CBB\u7B97\u6CD5\u8BE6\u89E3\uFF1A\u8FD0\u7B97\u4F18\u5148\u7EA7</h3>`,10),zs={id:"_241-\u4E3A\u8FD0\u7B97\u8868\u8FBE\u5F0F\u8BBE\u8BA1\u4F18\u5148\u7EA7",tabindex:"-1"},Bs=n("a",{class:"header-anchor",href:"#_241-\u4E3A\u8FD0\u7B97\u8868\u8FBE\u5F0F\u8BBE\u8BA1\u4F18\u5148\u7EA7","aria-hidden":"true"},"#",-1),Ts=s(),Cs={href:"https://leetcode.cn/problems/different-ways-to-add-parentheses/",target:"_blank",rel:"noopener noreferrer"},Ds=s("241. \u4E3A\u8FD0\u7B97\u8868\u8FBE\u5F0F\u8BBE\u8BA1\u4F18\u5148\u7EA7"),Os=t(`<p>\u7ED9\u4F60\u4E00\u4E2A\u7531\u6570\u5B57\u548C\u8FD0\u7B97\u7B26\u7EC4\u6210\u7684\u5B57\u7B26\u4E32 expression \uFF0C\u6309\u4E0D\u540C\u4F18\u5148\u7EA7\u7EC4\u5408\u6570\u5B57\u548C\u8FD0\u7B97\u7B26\uFF0C\u8BA1\u7B97\u5E76\u8FD4\u56DE\u6240\u6709\u53EF\u80FD\u7EC4\u5408\u7684\u7ED3\u679C\u3002\u4F60\u53EF\u4EE5 \u6309\u4EFB\u610F\u987A\u5E8F \u8FD4\u56DE\u7B54\u6848\u3002</p><p>\u751F\u6210\u7684\u6D4B\u8BD5\u7528\u4F8B\u6EE1\u8DB3\u5176\u5BF9\u5E94\u8F93\u51FA\u503C\u7B26\u5408 32 \u4F4D\u6574\u6570\u8303\u56F4\uFF0C\u4E0D\u540C\u7ED3\u679C\u7684\u6570\u91CF\u4E0D\u8D85\u8FC7 104 \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Aexpression = &quot;2-1-1&quot; \u8F93\u51FA\uFF1A[0,2] \u89E3\u91CA\uFF1A ((2-1)-1) = 0 (2-(1-1)) = 2</p><blockquote><p>\u5206\u6CBB\u7B97\u6CD5\uFF1A</p><p>1.\u626B\u63CF\u6240\u6709\u7684\u8FD0\u7B97\u7B26</p><p>2.\u5206\u9694\u8868\u8FBE\u5F0F\u5F97\u5230\u7ED3\u679C</p><p>3.\u5408\u5E76\u7ED3\u679C</p><p>4.base case\uFF1A\u53EA\u6709\u4E00\u4E2A\u6570\u5B57</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">diffWaysToCompute</span><span class="token punctuation">(</span><span class="token class-name">String</span> expression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> expression<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 1.\u626B\u63CF\u6240\u6709\u7684\u8FD0\u7B97\u7B26</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;*&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;+&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 2.\u5206\u9694\u8868\u8FBE\u5F0F\u5F97\u5230\u7ED3\u679C</span>
                <span class="token comment">// ------ \u5206 -------------</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> <span class="token function">diffWaysToCompute</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> <span class="token function">diffWaysToCompute</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 3.\u5408\u5E76\u7ED3\u679C</span>
                <span class="token comment">// ------- \u6CBB ---------------</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">:</span> list1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> b <span class="token operator">:</span> list2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;+&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a <span class="token operator">*</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4.base case\uFF1A\u53EA\u6709\u4E00\u4E2A\u6570\u5B57</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>expression<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F18\u5316\uFF1A\u6DFB\u52A0\u5907\u5FD8\u5F55</p><p>\u8FD0\u7B97\u8868\u8FBE\u5F0F\uFF1A1 + 1 + 1 + 1 + 1</p><p>\u80AF\u5B9A\u4F1A\u51FA\u73B0 (1 + 1) + (1 + 1 + 1) (1 + 1 + 1) + (1 + 1)</p><p>\u91CD\u590D\u8BA1\u7B97</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
	
    <span class="token comment">// \u5907\u5FD8\u5F55</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> memo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">diffWaysToCompute</span><span class="token punctuation">(</span><span class="token class-name">String</span> expression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> expression<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>memo<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>expression<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> memo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>expression<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 1.\u626B\u63CF\u6240\u6709\u7684\u8FD0\u7B97\u7B26</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;*&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;+&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 2.\u5206\u9694\u8868\u8FBE\u5F0F\u5F97\u5230\u7ED3\u679C</span>
                <span class="token comment">// ------ \u5206 -------------</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> <span class="token function">diffWaysToCompute</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> <span class="token function">diffWaysToCompute</span><span class="token punctuation">(</span>expression<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 3.\u5408\u5E76\u7ED3\u679C</span>
                <span class="token comment">// ------- \u6CBB ---------------</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">:</span> list1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> b <span class="token operator">:</span> list2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;+&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a <span class="token operator">*</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4.base case\uFF1A\u53EA\u6709\u4E00\u4E2A\u6570\u5B57</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>expression<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        memo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>expression<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-\u4E00\u4E2A\u65B9\u6CD5\u89E3\u51B3\u4E09\u9053\u533A\u95F4\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_2-2-\u4E00\u4E2A\u65B9\u6CD5\u89E3\u51B3\u4E09\u9053\u533A\u95F4\u95EE\u9898" aria-hidden="true">#</a> 2.2 \u4E00\u4E2A\u65B9\u6CD5\u89E3\u51B3\u4E09\u9053\u533A\u95F4\u95EE\u9898</h3>`,12),Vs={id:"_1288-\u5220\u9664\u88AB\u8986\u76D6\u533A\u95F4",tabindex:"-1"},Hs=n("a",{class:"header-anchor",href:"#_1288-\u5220\u9664\u88AB\u8986\u76D6\u533A\u95F4","aria-hidden":"true"},"#",-1),Qs=s(),Ws={href:"https://leetcode.cn/problems/remove-covered-intervals/",target:"_blank",rel:"noopener noreferrer"},Es=s("1288. \u5220\u9664\u88AB\u8986\u76D6\u533A\u95F4"),Fs=t(`<p>\u7ED9\u4F60\u4E00\u4E2A\u533A\u95F4\u5217\u8868\uFF0C\u8BF7\u4F60\u5220\u9664\u5217\u8868\u4E2D\u88AB\u5176\u4ED6\u533A\u95F4\u6240\u8986\u76D6\u7684\u533A\u95F4\u3002</p><p>\u53EA\u6709\u5F53 c &lt;= a \u4E14 b &lt;= d \u65F6\uFF0C\u6211\u4EEC\u624D\u8BA4\u4E3A\u533A\u95F4 [a,b) \u88AB\u533A\u95F4 [c,d) \u8986\u76D6\u3002</p><p>\u5728\u5B8C\u6210\u6240\u6709\u5220\u9664\u64CD\u4F5C\u540E\uFF0C\u8BF7\u4F60\u8FD4\u56DE\u5217\u8868\u4E2D\u5269\u4F59\u533A\u95F4\u7684\u6570\u76EE\u3002</p><p>\u793A\u4F8B\uFF1A</p><p>\u8F93\u5165\uFF1Aintervals = [[1,4],[3,6],[2,8]] \u8F93\u51FA\uFF1A2 \u89E3\u91CA\uFF1A\u533A\u95F4 [3,6] \u88AB\u533A\u95F4 [2,8] \u8986\u76D6\uFF0C\u6240\u4EE5\u5B83\u88AB\u5220\u9664\u4E86\u3002</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209131100344.png" alt="image-20220913110032222"></p><blockquote><p>1.\u6309\u8D77\u70B9\u6392\u5E8F\uFF0C\u8D77\u70B9\u76F8\u540C\u7EC8\u70B9\u6392\u5E8F</p><p>2.\u904D\u5386\u6570\u7EC4</p><p>3.\u76F8\u90BB\u533A\u95F4\u7684\u72B6\u6001</p><p>3.1 \u8986\u76D6</p><p>3.2 \u76F8\u4EA4</p><p>3.3 \u5B8C\u5168\u4E0D\u76F8\u4EA4</p><p>4.\u8FD4\u56DE\u7ED3\u679C</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">removeCoveredIntervals</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intervals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u6309\u8D77\u70B9\u5347\u5E8F\u6392\u5E8F\uFF0C\u8D77\u70B9\u76F8\u540C\u7EC8\u70B9\u964D\u5E8F\u6392\u5E8F</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>intervals<span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u533A\u95F4</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> intervals<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> right <span class="token operator">=</span> intervals<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BB0\u5F55\u88AB\u8986\u76D6\u7684\u533A\u95F4\u6570</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.\u904D\u5386\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> intervals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 3.\u76F8\u90BB\u533A\u95F4\u7684\u72B6\u6001</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> interv <span class="token operator">=</span> intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.1 \u8986\u76D6</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> interv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> interv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 3.2 \u76F8\u4EA4</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;=</span> interv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">&lt;=</span> interv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5408\u5E76\u533A\u95F4</span>
                right <span class="token operator">=</span> interv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 3.3 \u5B8C\u5168\u4E0D\u76F8\u4EA4</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>interv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u66F4\u65B0\u533A\u95F4</span>
                left <span class="token operator">=</span> interv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                right <span class="token operator">=</span> interv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4.\u8FD4\u56DE\u7ED3\u679C\uFF0C\u5269\u4F59\u533A\u95F4\u7684\u4E2A\u6570</span>
        <span class="token keyword">return</span> intervals<span class="token punctuation">.</span>length <span class="token operator">-</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),Ps={id:"_56-\u5408\u5E76\u533A\u95F4",tabindex:"-1"},Ks=n("a",{class:"header-anchor",href:"#_56-\u5408\u5E76\u533A\u95F4","aria-hidden":"true"},"#",-1),Rs=s(),Us={href:"https://leetcode.cn/problems/merge-intervals/",target:"_blank",rel:"noopener noreferrer"},Gs=s("56. \u5408\u5E76\u533A\u95F4"),Js=t(`<p>\u4EE5\u6570\u7EC4 intervals \u8868\u793A\u82E5\u5E72\u4E2A\u533A\u95F4\u7684\u96C6\u5408\uFF0C\u5176\u4E2D\u5355\u4E2A\u533A\u95F4\u4E3A intervals[i] = [starti, endi] \u3002\u8BF7\u4F60\u5408\u5E76\u6240\u6709\u91CD\u53E0\u7684\u533A\u95F4\uFF0C\u5E76\u8FD4\u56DE \u4E00\u4E2A\u4E0D\u91CD\u53E0\u7684\u533A\u95F4\u6570\u7EC4\uFF0C\u8BE5\u6570\u7EC4\u9700\u6070\u597D\u8986\u76D6\u8F93\u5165\u4E2D\u7684\u6240\u6709\u533A\u95F4 \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Aintervals = [[1,3],[2,6],[8,10],[15,18]] \u8F93\u51FA\uFF1A[[1,6],[8,10],[15,18]] \u89E3\u91CA\uFF1A\u533A\u95F4 [1,3] \u548C [2,6] \u91CD\u53E0, \u5C06\u5B83\u4EEC\u5408\u5E76\u4E3A [1,6].</p><p>\u89E3\u6CD5\u4E00\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intervals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u6309\u8D77\u70B9\u5347\u5E8F\u6392\u5E8F\uFF0C\u8D77\u70B9\u76F8\u540C\u7EC8\u70B9\u964D\u5E8F\u6392\u5E8F</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>intervals<span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u533A\u95F4</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> intervals<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> right <span class="token operator">=</span> intervals<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
         <span class="token comment">// 2.\u904D\u5386\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> intervals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> interv <span class="token operator">=</span> intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.1 \u76F8\u4EA4</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;=</span> interv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">&lt;=</span> interv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5408\u5E76\u533A\u95F4</span>
                right <span class="token operator">=</span> interv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 3.2 \u5B8C\u5168\u4E0D\u76F8\u4EA4</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>interv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>left<span class="token punctuation">,</span> right<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u66F4\u65B0\u533A\u95F4</span>
                left <span class="token operator">=</span> interv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                right <span class="token operator">=</span> interv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u628A\u6700\u540E\u4E00\u4E2A\u533A\u95F4\u52A0\u5165\u5230\u7ED3\u679C\u4E2D</span>
        res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>left<span class="token punctuation">,</span> right<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>1.\u6309\u8D77\u70B9\u5347\u5E8F</p><p>2.\u5C06\u7B2C\u4E00\u4E2A\u533A\u95F4\u52A0\u5165\u5230\u7ED3\u679C\u4E2D</p><p>3.\u627E\u5230\u76F8\u4EA4\u533A\u95F4\u4E2D\u6700\u957F\u7684end</p><p>4.\u7EE7\u7EED\u5408\u5E76\u4E0B\u4E00\u4E2A\u533A\u95F4</p><p>5.\u8FD4\u56DE\u7ED3\u679C</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intervals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u6309\u8D77\u70B9\u5347\u5E8F</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>intervals<span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.\u5C06\u7B2C\u4E00\u4E2A\u533A\u95F4\u52A0\u5165\u5230\u7ED3\u679C\u4E2D</span>
        <span class="token class-name">LinkedList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>intervals<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> intervals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cur <span class="token operator">=</span> intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> last <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">getLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> last<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 3.\u627E\u5230\u76F8\u4EA4\u533A\u95F4\u4E2D\u6700\u957F\u7684end</span>
                last<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> last<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 4.\u7EE7\u7EED\u5408\u5E76\u4E0B\u4E00\u4E2A\u533A\u95F4</span>
                res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 5.\u8FD4\u56DE\u7ED3\u679C</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),Xs={id:"_986-\u533A\u95F4\u5217\u8868\u7684\u4EA4\u96C6",tabindex:"-1"},Ys=n("a",{class:"header-anchor",href:"#_986-\u533A\u95F4\u5217\u8868\u7684\u4EA4\u96C6","aria-hidden":"true"},"#",-1),Zs=s(),$s={href:"https://leetcode.cn/problems/interval-list-intersections/",target:"_blank",rel:"noopener noreferrer"},na=s("986. \u533A\u95F4\u5217\u8868\u7684\u4EA4\u96C6"),sa=t(`<p>\u7ED9\u5B9A\u4E24\u4E2A\u7531\u4E00\u4E9B \u95ED\u533A\u95F4 \u7EC4\u6210\u7684\u5217\u8868\uFF0CfirstList \u548C secondList \uFF0C\u5176\u4E2D firstList[i] = [starti, endi] \u800C secondList[j] = [startj, endj] \u3002\u6BCF\u4E2A\u533A\u95F4\u5217\u8868\u90FD\u662F\u6210\u5BF9 \u4E0D\u76F8\u4EA4 \u7684\uFF0C\u5E76\u4E14 \u5DF2\u7ECF\u6392\u5E8F \u3002</p><p>\u8FD4\u56DE\u8FD9 \u4E24\u4E2A\u533A\u95F4\u5217\u8868\u7684\u4EA4\u96C6 \u3002</p><p>\u5F62\u5F0F\u4E0A\uFF0C\u95ED\u533A\u95F4 [a, b]\uFF08\u5176\u4E2D a &lt;= b\uFF09\u8868\u793A\u5B9E\u6570 x \u7684\u96C6\u5408\uFF0C\u800C a &lt;= x &lt;= b \u3002</p><p>\u4E24\u4E2A\u95ED\u533A\u95F4\u7684 \u4EA4\u96C6 \u662F\u4E00\u7EC4\u5B9E\u6570\uFF0C\u8981\u4E48\u4E3A\u7A7A\u96C6\uFF0C\u8981\u4E48\u4E3A\u95ED\u533A\u95F4\u3002\u4F8B\u5982\uFF0C[1, 3] \u548C [2, 4] \u7684\u4EA4\u96C6\u4E3A [2, 3] \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209131159788.png" alt="image-20220913115903698"></p><p>\u8F93\u5165\uFF1AfirstList = [[0,2],[5,10],[13,23],[24,25]], secondList = [[1,5],[8,12],[15,24],[25,26]] \u8F93\u51FA\uFF1A[[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]</p><blockquote><p>\u53CC\u6307\u9488\u601D\u8DEF\uFF1A</p><p>\u4E0D\u5B58\u5728\u4EA4\u96C6\u7684\u60C5\u51B5\uFF1A b1 &gt; a2 || b2 &lt; a1</p><p>\u5B58\u5728\u4EA4\u96C6\u7684\u60C5\u51B5\uFF1Aa2 &gt;= b1 &amp;&amp; b2 &gt;= a1</p><p>1.\u5B9A\u4E49 i, j \u53CC\u6307\u9488</p><p>2.\u5F97\u5230 A, B \u4E24\u4E2A\u533A\u95F4</p><p>3.\u5224\u65AD\u662F\u5426\u5B58\u5728\u4EA4\u96C6</p><p>4.\u5B58\u5728\uFF0C\u6C42\u51FA\u4EA4\u96C6\uFF08\u5DE6\u533A\u95F4\u7684\u6700\u5927\u503C\uFF0C\u53F3\u533A\u95F4\u7684\u6700\u5C0F\u503C\uFF09</p><p>5.\u6307\u9488\u79FB\u52A8</p><p>5.1 a2 &lt; b2, i++</p><p>5.2 else j++</p><p>6.\u8FD4\u56DE\u7ED3\u679C</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">intervalIntersection</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> firstList<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> secondList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u5B9A\u4E49 i, j \u53CC\u6307\u9488</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> firstList<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> secondList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.\u5F97\u5230 A, B \u4E24\u4E2A\u533A\u95F4</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> m <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> a1 <span class="token operator">=</span> firstList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a2 <span class="token operator">=</span> firstList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> b1 <span class="token operator">=</span> secondList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> b2 <span class="token operator">=</span> secondList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.\u5224\u65AD\u662F\u5426\u5B58\u5728\u4EA4\u96C6</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>b2 <span class="token operator">&gt;=</span> a1 <span class="token operator">&amp;&amp;</span> b1 <span class="token operator">&lt;=</span> a2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 4.\u5B58\u5728\uFF0C\u6C42\u51FA\u4EA4\u96C6\uFF08\u5DE6\u533A\u95F4\u7684\u6700\u5927\u503C\uFF0C\u53F3\u533A\u95F4\u7684\u6700\u5C0F\u503C\uFF09</span>
                res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> b1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>a2<span class="token punctuation">,</span> b2<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 5.\u6307\u9488\u79FB\u52A8</span>
            <span class="token comment">// 5.1 a2 &lt; b2, i++</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>a2 <span class="token operator">&lt;</span> b2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 5.2 else j++</span>
                j<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 6.\u8FD4\u56DE\u7ED3\u679C</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-\u5B57\u7B26\u4E32\u4E58\u6CD5\u8BA1\u7B97" tabindex="-1"><a class="header-anchor" href="#_2-3-\u5B57\u7B26\u4E32\u4E58\u6CD5\u8BA1\u7B97" aria-hidden="true">#</a> 2.3 \u5B57\u7B26\u4E32\u4E58\u6CD5\u8BA1\u7B97</h3>`,10),aa={id:"_43-\u5B57\u7B26\u4E32\u76F8\u4E58",tabindex:"-1"},pa=n("a",{class:"header-anchor",href:"#_43-\u5B57\u7B26\u4E32\u76F8\u4E58","aria-hidden":"true"},"#",-1),ta=s(),oa={href:"https://leetcode.cn/problems/multiply-strings/",target:"_blank",rel:"noopener noreferrer"},ea=s("43. \u5B57\u7B26\u4E32\u76F8\u4E58"),ca=t(`<p>\u7ED9\u5B9A\u4E24\u4E2A\u4EE5\u5B57\u7B26\u4E32\u5F62\u5F0F\u8868\u793A\u7684\u975E\u8D1F\u6574\u6570 num1 \u548C num2\uFF0C\u8FD4\u56DE num1 \u548C num2 \u7684\u4E58\u79EF\uFF0C\u5B83\u4EEC\u7684\u4E58\u79EF\u4E5F\u8868\u793A\u4E3A\u5B57\u7B26\u4E32\u5F62\u5F0F\u3002</p><p>\u6CE8\u610F\uFF1A\u4E0D\u80FD\u4F7F\u7528\u4EFB\u4F55\u5185\u7F6E\u7684 BigInteger \u5E93\u6216\u76F4\u63A5\u5C06\u8F93\u5165\u8F6C\u6362\u4E3A\u6574\u6570\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: num1 = &quot;2&quot;, num2 = &quot;3&quot; \u8F93\u51FA: &quot;6&quot;</p><blockquote><p>1.\u4ECE\u4E2A\u4F4D\u5F00\u59CB\u4E58\u79EF</p><p>2.\u5F97\u5230\u4E58\u79EF\u5728 res \u4E0A\u7684\u7D22\u5F15 [i+j, i+j+1]</p><p>3.\u7D2F\u52A0</p><p>4.\u5904\u7406\u8FDB\u4F4D</p><p>5.\u5904\u7406\u524D\u7F000</p></blockquote><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209141040069.png" alt="image-20220914104001928"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token class-name">String</span> num1<span class="token punctuation">,</span> <span class="token class-name">String</span> num2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> num2<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6700\u591A\u7684\u4F4D\u6570\u662F m + n</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m <span class="token operator">+</span> n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.\u4ECE\u4E2A\u4F4D\u5F00\u59CB\u4E58\u79EF</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E58\u79EF</span>
                <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token punctuation">(</span>num1<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>num2<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 2.\u5F97\u5230\u4E58\u79EF\u5728 res \u4E0A\u7684\u7D22\u5F15 [i+j, i+j+1]</span>
                <span class="token keyword">int</span> idx1 <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>
                <span class="token keyword">int</span> idx2 <span class="token operator">=</span> i <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token comment">// 3.\u7D2F\u52A0</span>
                <span class="token keyword">int</span> sum <span class="token operator">=</span> num <span class="token operator">+</span> res<span class="token punctuation">[</span>idx2<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token comment">// 4.\u5904\u7406\u8FDB\u4F4D</span>
                res<span class="token punctuation">[</span>idx2<span class="token punctuation">]</span> <span class="token operator">=</span> sum <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
                res<span class="token punctuation">[</span>idx1<span class="token punctuation">]</span> <span class="token operator">+=</span> sum <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 5.\u5904\u7406\u524D\u7F000</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> res<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> index<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token comment">// \u6CE8\u610F\u8D8A\u754C</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> res<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">:</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-\u5982\u4F55\u9AD8\u6548\u89E3\u51B3\u63A5\u96E8\u6C34\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_2-4-\u5982\u4F55\u9AD8\u6548\u89E3\u51B3\u63A5\u96E8\u6C34\u95EE\u9898" aria-hidden="true">#</a> 2.4 \u5982\u4F55\u9AD8\u6548\u89E3\u51B3\u63A5\u96E8\u6C34\u95EE\u9898</h3>`,8),la={id:"_42-\u63A5\u96E8\u6C34",tabindex:"-1"},ia=n("a",{class:"header-anchor",href:"#_42-\u63A5\u96E8\u6C34","aria-hidden":"true"},"#",-1),ua=s(),ka={href:"https://leetcode.cn/problems/trapping-rain-water/",target:"_blank",rel:"noopener noreferrer"},ra=s("42. \u63A5\u96E8\u6C34"),da=t(`<p>\u7ED9\u5B9A n \u4E2A\u975E\u8D1F\u6574\u6570\u8868\u793A\u6BCF\u4E2A\u5BBD\u5EA6\u4E3A 1 \u7684\u67F1\u5B50\u7684\u9AD8\u5EA6\u56FE\uFF0C\u8BA1\u7B97\u6309\u6B64\u6392\u5217\u7684\u67F1\u5B50\uFF0C\u4E0B\u96E8\u4E4B\u540E\u80FD\u63A5\u591A\u5C11\u96E8\u6C34\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209141105398.png" alt="image-20220914110541320"></p><p>\u8F93\u5165\uFF1Aheight = [0,1,0,2,1,0,1,3,2,1,2,1] \u8F93\u51FA\uFF1A6 \u89E3\u91CA\uFF1A\u4E0A\u9762\u662F\u7531\u6570\u7EC4 [0,1,0,2,1,0,1,3,2,1,2,1] \u8868\u793A\u7684\u9AD8\u5EA6\u56FE\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u63A5 6 \u4E2A\u5355\u4F4D\u7684\u96E8\u6C34\uFF08\u84DD\u8272\u90E8\u5206\u8868\u793A\u96E8\u6C34\uFF09\u3002</p><blockquote><p>\u66B4\u529B\u89E3\u6CD5\uFF1A</p><p>\u7B2C i \u4E2A\u4F4D\u7F6E\u53EF\u4EE5\u63A5\u5230\u7684\u96E8\u6C34 = min(\u5DE6\u8FB9\u6700\u9AD8\u7684\u67F1\u5B50\uFF0C\u53F3\u8FB9\u6700\u9AD8\u7684\u67F1\u5B50) - height[i]</p><p>\u7B2C 1 \u4E2A \u548C \u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u4E0D\u80FD\u63A5\u5230\u96E8\u6C34</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u65F6\u95F4\u590D\u6742\u5EA6 O(N^2)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">trap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> height<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u7B2C 1 \u4E2A \u548C \u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u4E0D\u80FD\u63A5\u5230\u96E8\u6C34</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> l_max <span class="token operator">=</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> r_max <span class="token operator">=</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// \u627E\u5DE6\u8FB9\u6700\u9AD8\u7684\u67F1\u5B50</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                l_max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>l_max<span class="token punctuation">,</span> height<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u627E\u53F3\u8FB9\u6700\u9AD8\u7684\u67F1\u5B50</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                r_max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>r_max<span class="token punctuation">,</span> height<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u7B2C i \u4E2A\u4F4D\u7F6E\u53EF\u4EE5\u63A5\u5230\u7684\u96E8\u6C34</span>
			<span class="token comment">// \u81EA\u5DF1\u5C31\u662F\u6700\u9AD8\u7684\u8BDD\uFF0Cl_max = r_max = height[i]</span>
            res <span class="token operator">+=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>l_max<span class="token punctuation">,</span> r_max<span class="token punctuation">)</span> <span class="token operator">-</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5907\u5FD8\u5F55\u4F18\u5316\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">trap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> height<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u6570\u7EC4\u5145\u5F53\u5907\u5FD8\u5F55</span>
        <span class="token comment">// l_max[i] \u8868\u793A\u7B2C i \u4E2A\u5143\u7D20\u5DE6\u8FB9\u6700\u9AD8\u7684\u67F1\u5B50</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> l_max <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> r_max <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u5316\u6570\u7EC4\uFF0C\u8FB9\u754C\u5904\u7406</span>
        l_max<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> height<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        r_max<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> height<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u627E\u5DE6\u8FB9\u6700\u9AD8\u7684\u67F1\u5B50</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            l_max<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>l_max<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u627E\u53F3\u8FB9\u6700\u9AD8\u7684\u67F1\u5B50</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r_max<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>r_max<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u7B2C 1 \u4E2A \u548C \u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u4E0D\u80FD\u63A5\u5230\u96E8\u6C34</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7B2C i \u4E2A\u4F4D\u7F6E\u53EF\u4EE5\u63A5\u5230\u7684\u96E8\u6C34</span>
            res <span class="token operator">+=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>l_max<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> r_max<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209141149662.png" alt="image-20220914114908468"></p><p>\u53CC\u6307\u9488\u4F18\u5316\uFF1A</p><p>\u590D\u6742\u5EA6\u5206\u6790</p><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n)\uFF0C\u5176\u4E2D n \u662F\u6570\u7EC4 height \u7684\u957F\u5EA6\u3002\u4E24\u4E2A\u6307\u9488\u7684\u79FB\u52A8\u603B\u6B21\u6570\u4E0D\u8D85\u8FC7 n\u3002</li><li>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(1)\u3002\u53EA\u9700\u8981\u4F7F\u7528\u5E38\u6570\u7684\u989D\u5916\u7A7A\u95F4\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">trap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> height<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u53CC\u6307\u9488</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> l_max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> r_max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// l_max \u4EE3\u8868[0...left] \u4E2D\u7684\u6700\u9AD8\u67F1\u5B50\uFF0Cr_max \u4EE3\u8868 [right...n - 1] \u4E2D\u7684\u6700\u9AD8\u67F1\u5B50</span>
            l_max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>l_max<span class="token punctuation">,</span> height<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            r_max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>r_max<span class="token punctuation">,</span> height<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Math.min(l_max[i], r_max[i]) - height[i];</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>l_max <span class="token operator">&lt;</span> r_max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res <span class="token operator">+=</span> l_max <span class="token operator">-</span> height<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
                left<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                res <span class="token operator">+=</span> r_max <span class="token operator">-</span> height<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
                right<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6211\u4EEC\u5DF2\u7ECF\u77E5\u9053 <code>l_max &lt; r_max</code> \u4E86\uFF0C\u81F3\u4E8E\u8FD9\u4E2A <code>r_max</code> \u662F\u4E0D\u662F\u53F3\u8FB9\u6700\u5927\u7684\uFF0C\u4E0D\u91CD\u8981\u3002\u91CD\u8981\u7684\u662F <code>height[i]</code> \u80FD\u591F\u88C5\u7684\u6C34\u53EA\u548C\u8F83\u4F4E\u7684 <code>l_max</code> \u4E4B\u5DEE\u6709\u5173</strong>\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209141149549.png" alt="image-20220914114918370"></p>`,15),ma={id:"_11-\u76DB\u6700\u591A\u6C34\u7684\u5BB9\u5668",tabindex:"-1"},va=n("a",{class:"header-anchor",href:"#_11-\u76DB\u6700\u591A\u6C34\u7684\u5BB9\u5668","aria-hidden":"true"},"#",-1),ba=s(),ga={href:"https://leetcode.cn/problems/container-with-most-water/",target:"_blank",rel:"noopener noreferrer"},ha=s("11. \u76DB\u6700\u591A\u6C34\u7684\u5BB9\u5668"),wa=t(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u957F\u5EA6\u4E3A n \u7684\u6574\u6570\u6570\u7EC4 height \u3002\u6709 n \u6761\u5782\u7EBF\uFF0C\u7B2C i \u6761\u7EBF\u7684\u4E24\u4E2A\u7AEF\u70B9\u662F (i, 0) \u548C (i, height[i]) \u3002</p><p>\u627E\u51FA\u5176\u4E2D\u7684\u4E24\u6761\u7EBF\uFF0C\u4F7F\u5F97\u5B83\u4EEC\u4E0E x \u8F74\u5171\u540C\u6784\u6210\u7684\u5BB9\u5668\u53EF\u4EE5\u5BB9\u7EB3\u6700\u591A\u7684\u6C34\u3002</p><p>\u8FD4\u56DE\u5BB9\u5668\u53EF\u4EE5\u50A8\u5B58\u7684\u6700\u5927\u6C34\u91CF\u3002</p><p>\u8BF4\u660E\uFF1A\u4F60\u4E0D\u80FD\u503E\u659C\u5BB9\u5668\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/202209141212809.png" alt="image-20220914121209725"></p><p>\u8F93\u5165\uFF1A[1,8,6,2,5,4,8,3,7] \u8F93\u51FA\uFF1A49 \u89E3\u91CA\uFF1A\u56FE\u4E2D\u5782\u76F4\u7EBF\u4EE3\u8868\u8F93\u5165\u6570\u7EC4 [1,8,6,2,5,4,8,3,7]\u3002\u5728\u6B64\u60C5\u51B5\u4E0B\uFF0C\u5BB9\u5668\u80FD\u591F\u5BB9\u7EB3\u6C34\uFF08\u8868\u793A\u4E3A\u84DD\u8272\u90E8\u5206\uFF09\u7684\u6700\u5927\u503C\u4E3A 49\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxArea</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> height<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> l_max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> r_max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6700\u591A\u53EF\u4EE5\u5BB9\u7EB3\u6C34\u7684\u5BB9\u91CF</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            l_max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>l_max<span class="token punctuation">,</span> height<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            r_max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>r_max<span class="token punctuation">,</span> height<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5F53\u524D\u5BB9\u91CF</span>
            <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>l_max<span class="token punctuation">,</span> r_max<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span><span class="token punctuation">;</span>
            res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5C0F\u7684\u4E00\u65B9\u79FB\u52A8\u6307\u9488\uFF0C\u4F7F\u9762\u79EF\u66F4\u5927</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>l_max <span class="token operator">&lt;</span> r_max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                left<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                right<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-\u5982\u4F55\u89E3\u51B3\u62EC\u53F7\u76F8\u5173\u7684\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_2-5-\u5982\u4F55\u89E3\u51B3\u62EC\u53F7\u76F8\u5173\u7684\u95EE\u9898" aria-hidden="true">#</a> 2.5 \u5982\u4F55\u89E3\u51B3\u62EC\u53F7\u76F8\u5173\u7684\u95EE\u9898</h3>`,9),ya={id:"_20-\u6709\u6548\u7684\u62EC\u53F7",tabindex:"-1"},fa=n("a",{class:"header-anchor",href:"#_20-\u6709\u6548\u7684\u62EC\u53F7","aria-hidden":"true"},"#",-1),_a=s(),ja={href:"https://leetcode.cn/problems/valid-parentheses/",target:"_blank",rel:"noopener noreferrer"},qa=s("20. \u6709\u6548\u7684\u62EC\u53F7"),xa=t(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u53EA\u5305\u62EC &#39;(&#39;\uFF0C&#39;)&#39;\uFF0C&#39;{&#39;\uFF0C&#39;}&#39;\uFF0C&#39;[&#39;\uFF0C&#39;]&#39; \u7684\u5B57\u7B26\u4E32 s \uFF0C\u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u6709\u6548\u3002</p><p>\u6709\u6548\u5B57\u7B26\u4E32\u9700\u6EE1\u8DB3\uFF1A</p><p>\u5DE6\u62EC\u53F7\u5FC5\u987B\u7528\u76F8\u540C\u7C7B\u578B\u7684\u53F3\u62EC\u53F7\u95ED\u5408\u3002 \u5DE6\u62EC\u53F7\u5FC5\u987B\u4EE5\u6B63\u786E\u7684\u987A\u5E8F\u95ED\u5408\u3002 \u6BCF\u4E2A\u53F3\u62EC\u53F7\u90FD\u6709\u4E00\u4E2A\u5BF9\u5E94\u7684\u76F8\u540C\u7C7B\u578B\u7684\u5DE6\u62EC\u53F7\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1As = &quot;()&quot; \u8F93\u51FA\uFF1Atrue</p><p>\u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1As = &quot;()[]{}&quot; \u8F93\u51FA\uFF1Atrue</p><p>\u793A\u4F8B 3\uFF1A</p><p>\u8F93\u5165\uFF1As = &quot;([)]&quot; \u8F93\u51FA\uFF1Afalse</p><blockquote><p>\u601D\u8DEF\uFF1A\u9047\u5230\u5DE6\u62EC\u53F7\u5C31\u5165\u6808\uFF0C\u9047\u5230\u53F3\u62EC\u53F7\u5219\u67E5\u770B\u6700\u8FD1\u5165\u6808\u7684\u5DE6\u62EC\u53F7\u662F\u5426\u5339\u914D\uFF0C\u4E0D\u5339\u914D\u8FD4\u56DE false</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u9047\u5230\u5DE6\u62EC\u53F7\uFF0C\u8FDB\u6808</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;[&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;{&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u9047\u5230\u53F3\u62EC\u53F7</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>left<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> left<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">leftOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5339\u914D\uFF0C\u5F39\u51FA\u6808</span>
                    left<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u4E0D\u5339\u914D</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5DE6\u62EC\u53F7\u662F\u5426\u5168\u90E8\u5339\u914D</span>
        <span class="token keyword">return</span> left<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">char</span> <span class="token function">leftOf</span><span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;}&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token char">&#39;{&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;]&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token char">&#39;[&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token char">&#39;(&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),La={id:"_921-\u4F7F\u62EC\u53F7\u6709\u6548\u7684\u6700\u5C11\u6DFB\u52A0",tabindex:"-1"},Sa=n("a",{class:"header-anchor",href:"#_921-\u4F7F\u62EC\u53F7\u6709\u6548\u7684\u6700\u5C11\u6DFB\u52A0","aria-hidden":"true"},"#",-1),Ia=s(),Aa={href:"https://leetcode.cn/problems/minimum-add-to-make-parentheses-valid/",target:"_blank",rel:"noopener noreferrer"},Ma=s("921. \u4F7F\u62EC\u53F7\u6709\u6548\u7684\u6700\u5C11\u6DFB\u52A0"),Na=t(`<p>\u53EA\u6709\u6EE1\u8DB3\u4E0B\u9762\u51E0\u70B9\u4E4B\u4E00\uFF0C\u62EC\u53F7\u5B57\u7B26\u4E32\u624D\u662F\u6709\u6548\u7684\uFF1A</p><p>\u5B83\u662F\u4E00\u4E2A\u7A7A\u5B57\u7B26\u4E32\uFF0C\u6216\u8005 \u5B83\u53EF\u4EE5\u88AB\u5199\u6210 AB \uFF08A \u4E0E B \u8FDE\u63A5\uFF09, \u5176\u4E2D A \u548C B \u90FD\u662F\u6709\u6548\u5B57\u7B26\u4E32\uFF0C\u6216\u8005 \u5B83\u53EF\u4EE5\u88AB\u5199\u4F5C (A)\uFF0C\u5176\u4E2D A \u662F\u6709\u6548\u5B57\u7B26\u4E32\u3002 \u7ED9\u5B9A\u4E00\u4E2A\u62EC\u53F7\u5B57\u7B26\u4E32 s \uFF0C\u79FB\u52A8N\u6B21\uFF0C\u4F60\u5C31\u53EF\u4EE5\u5728\u5B57\u7B26\u4E32\u7684\u4EFB\u4F55\u4F4D\u7F6E\u63D2\u5165\u4E00\u4E2A\u62EC\u53F7\u3002</p><p>\u4F8B\u5982\uFF0C\u5982\u679C s = &quot;()))&quot; \uFF0C\u4F60\u53EF\u4EE5\u63D2\u5165\u4E00\u4E2A\u5F00\u59CB\u62EC\u53F7\u4E3A &quot;(()))&quot; \u6216\u7ED3\u675F\u62EC\u53F7\u4E3A &quot;())))&quot; \u3002 \u8FD4\u56DE \u4E3A\u4F7F\u7ED3\u679C\u5B57\u7B26\u4E32 s \u6709\u6548\u800C\u5FC5\u987B\u6DFB\u52A0\u7684\u6700\u5C11\u62EC\u53F7\u6570\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1As = &quot;())&quot; \u8F93\u51FA\uFF1A1</p><p>\u89E3\u6CD5\u4E00\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minAddToMakeValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>left<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    left<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u9700\u8981\u63D2\u5165\u4E00\u4E2A \u5DE6\u62EC\u53F7</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u9700\u8981\u63D2\u5165 \u53F3\u62EC\u53F7</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>left<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> res <span class="token operator">+=</span> left<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u6CD5\u4E8C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minAddToMakeValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BF9\u53F3\u62EC\u53F7\u7684\u9700\u6C42</span>
        <span class="token keyword">int</span> need <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BB0\u5F55\u9700\u8981\u63D2\u5165\u7684\u6B21\u6570</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5BF9\u53F3\u62EC\u53F7\u7684\u9700\u6C42+1</span>
                need<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u9047\u5230\u53F3\u62EC\u53F7</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>need <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u53F3\u62EC\u53F7\u591A\u4F59\uFF0C\u9700\u8981\u63D2\u5165\u4E00\u4E2A \u5DE6\u62EC\u53F7</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u5BF9\u53F3\u62EC\u53F7\u7684\u9700\u6C42-1</span>
                need<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u63D2\u5165\u53F3\u62EC\u53F7</span>
        <span class="token keyword">return</span> res <span class="token operator">+=</span> need<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),za={id:"_1541-\u5E73\u8861\u62EC\u53F7\u5B57\u7B26\u4E32\u7684\u6700\u5C11\u63D2\u5165\u6B21\u6570",tabindex:"-1"},Ba=n("a",{class:"header-anchor",href:"#_1541-\u5E73\u8861\u62EC\u53F7\u5B57\u7B26\u4E32\u7684\u6700\u5C11\u63D2\u5165\u6B21\u6570","aria-hidden":"true"},"#",-1),Ta=s(),Ca={href:"https://leetcode.cn/problems/minimum-insertions-to-balance-a-parentheses-string/",target:"_blank",rel:"noopener noreferrer"},Da=s("1541. \u5E73\u8861\u62EC\u53F7\u5B57\u7B26\u4E32\u7684\u6700\u5C11\u63D2\u5165\u6B21\u6570"),Oa=t(`<p>\u7ED9\u4F60\u4E00\u4E2A\u62EC\u53F7\u5B57\u7B26\u4E32 s \uFF0C\u5B83\u53EA\u5305\u542B\u5B57\u7B26 &#39;(&#39; \u548C &#39;)&#39; \u3002\u4E00\u4E2A\u62EC\u53F7\u5B57\u7B26\u4E32\u88AB\u79F0\u4E3A\u5E73\u8861\u7684\u5F53\u5B83\u6EE1\u8DB3\uFF1A</p><p>\u4EFB\u4F55\u5DE6\u62EC\u53F7 &#39;(&#39; \u5FC5\u987B\u5BF9\u5E94\u4E24\u4E2A\u8FDE\u7EED\u7684\u53F3\u62EC\u53F7 &#39;))&#39; \u3002 \u5DE6\u62EC\u53F7 &#39;(&#39; \u5FC5\u987B\u5728\u5BF9\u5E94\u7684\u8FDE\u7EED\u4E24\u4E2A\u53F3\u62EC\u53F7 &#39;))&#39; \u4E4B\u524D\u3002 \u6BD4\u65B9\u8BF4 &quot;())&quot;\uFF0C &quot;())(())))&quot; \u548C &quot;(())())))&quot; \u90FD\u662F\u5E73\u8861\u7684\uFF0C &quot;)()&quot;\uFF0C &quot;()))&quot; \u548C &quot;(()))&quot; \u90FD\u662F\u4E0D\u5E73\u8861\u7684\u3002</p><p>\u4F60\u53EF\u4EE5\u5728\u4EFB\u610F\u4F4D\u7F6E\u63D2\u5165\u5B57\u7B26 &#39;(&#39; \u548C &#39;)&#39; \u4F7F\u5B57\u7B26\u4E32\u5E73\u8861\u3002</p><p>\u8BF7\u4F60\u8FD4\u56DE\u8BA9 s \u5E73\u8861\u7684\u6700\u5C11\u63D2\u5165\u6B21\u6570\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1As = &quot;(()))&quot; \u8F93\u51FA\uFF1A1 \u89E3\u91CA\uFF1A\u7B2C\u4E8C\u4E2A\u5DE6\u62EC\u53F7\u6709\u4E0E\u4E4B\u5339\u914D\u7684\u4E24\u4E2A\u53F3\u62EC\u53F7\uFF0C\u4F46\u662F\u7B2C\u4E00\u4E2A\u5DE6\u62EC\u53F7\u53EA\u6709\u4E00\u4E2A\u53F3\u62EC\u53F7\u3002\u6211\u4EEC\u9700\u8981\u5728\u5B57\u7B26\u4E32\u7ED3\u5C3E\u989D\u5916\u589E\u52A0\u4E00\u4E2A &#39;)&#39; \u4F7F\u5B57\u7B26\u4E32\u53D8\u6210\u5E73\u8861\u5B57\u7B26\u4E32 &quot;(())))&quot; \u3002</p><p>\u89E3\u6CD5\u4E00(<strong>\u53EF\u4E0D\u770B</strong>)\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minInsertions</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BB0\u5F55 \u5DE6\u62EC\u53F7 \u6570\u91CF</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BB0\u5F55\u9700\u8981\u63D2\u5165\u7684\u6B21\u6570</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5DE6\u62EC\u53F7\u6B21\u6570+1</span>
                left<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u9047\u5230\u53F3\u62EC\u53F7</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u63D2\u5165\u4E00\u4E2A \u53F3\u62EC\u53F7</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u63D2\u5165\u5DE6\u62EC\u53F7	</span>
                        res<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        left<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;)&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u8FDE\u7EED\u4E24\u4E2A ))</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u9700\u8981\u63D2\u5165\u4E00\u4E2A \u5DE6\u62EC\u53F7</span>
                        res<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        left<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// )(</span>
                    <span class="token comment">// \u9700\u8981\u63D2\u5165\u4E00\u4E2A )</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u9700\u8981\u63D2\u5165\u4E00\u4E2A \u5DE6\u62EC\u53F7</span>
                        res<span class="token operator">++</span><span class="token punctuation">;</span>
                        left<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// \u5E73\u8861\u6389\u4E00\u4E2A ( \u53C8\u63D2\u5165\u4E00\u4E2A (\uFF0C\u62B5\u6D88\u4E86</span>
                <span class="token punctuation">}</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5DE6\u62EC\u53F7\u8FD8\u5269\u4F59\uFF0C\u9700\u8981\u63D2\u5165 \u53F3\u62EC\u53F7</span>
        <span class="token keyword">return</span> res <span class="token operator">+=</span> left <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u6CD5\u4E8C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minInsertions</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BF9\u53F3\u62EC\u53F7\u7684\u9700\u6C42</span>
        <span class="token keyword">int</span> need <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u63D2\u5165\u6B21\u6570</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                need <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>need <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u53F3\u62EC\u53F7\u7684\u9700\u6C42\u662F\u5947\u6570\uFF0C\u9700\u8981\u63D2\u5165\u4E00\u4E2A \u53F3\u62EC\u53F7\uFF0C\u56E0\u4E3A\u4E00\u4E2A\u5DE6\u62EC\u53F7\u9700\u8981\u4E24\u4E2A\u53F3\u62EC\u53F7</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                    need<span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u9047\u5230\u53F3\u62EC\u53F7</span>
                
                <span class="token keyword">if</span> <span class="token punctuation">(</span>need <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u53F3\u62EC\u53F7\u591A\u4F59\uFF0C\u63D2\u5165\u4E00\u4E2A\u5DE6\u62EC\u53F7</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u53F3\u62EC\u53F7\u7684\u9700\u6C42\u53D8\u4E3A 1</span>
                    need <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                need<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res <span class="token operator">+=</span> need<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-\u4E8C\u5206\u67E5\u627E\u9AD8\u6548\u5224\u5B9A\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_2-6-\u4E8C\u5206\u67E5\u627E\u9AD8\u6548\u5224\u5B9A\u5B50\u5E8F\u5217" aria-hidden="true">#</a> 2.6 \u4E8C\u5206\u67E5\u627E\u9AD8\u6548\u5224\u5B9A\u5B50\u5E8F\u5217</h3>`,11),Va={id:"_392-\u5224\u65AD\u5B50\u5E8F\u5217",tabindex:"-1"},Ha=n("a",{class:"header-anchor",href:"#_392-\u5224\u65AD\u5B50\u5E8F\u5217","aria-hidden":"true"},"#",-1),Qa=s(),Wa={href:"https://leetcode.cn/problems/is-subsequence/",target:"_blank",rel:"noopener noreferrer"},Ea=s("392. \u5224\u65AD\u5B50\u5E8F\u5217"),Fa=t(`<p>\u7ED9\u5B9A\u5B57\u7B26\u4E32 s \u548C t \uFF0C\u5224\u65AD s \u662F\u5426\u4E3A t \u7684\u5B50\u5E8F\u5217\u3002</p><p>\u5B57\u7B26\u4E32\u7684\u4E00\u4E2A\u5B50\u5E8F\u5217\u662F\u539F\u59CB\u5B57\u7B26\u4E32\u5220\u9664\u4E00\u4E9B\uFF08\u4E5F\u53EF\u4EE5\u4E0D\u5220\u9664\uFF09\u5B57\u7B26\u800C\u4E0D\u6539\u53D8\u5269\u4F59\u5B57\u7B26\u76F8\u5BF9\u4F4D\u7F6E\u5F62\u6210\u7684\u65B0\u5B57\u7B26\u4E32\u3002\uFF08\u4F8B\u5982\uFF0C&quot;ace&quot;\u662F&quot;abcde&quot;\u7684\u4E00\u4E2A\u5B50\u5E8F\u5217\uFF0C\u800C&quot;aec&quot;\u4E0D\u662F\uFF09\u3002</p><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><p>\u8F93\u5165\uFF1As = &quot;abc&quot;, t = &quot;ahbgdc&quot; \u8F93\u51FA\uFF1Atrue</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSubsequence</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">String</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> t<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">==</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            j<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> i <span class="token operator">==</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Pa={id:"_792-\u5339\u914D\u5B50\u5E8F\u5217\u7684\u5355\u8BCD\u6570",tabindex:"-1"},Ka=n("a",{class:"header-anchor",href:"#_792-\u5339\u914D\u5B50\u5E8F\u5217\u7684\u5355\u8BCD\u6570","aria-hidden":"true"},"#",-1),Ra=s(),Ua={href:"https://leetcode.cn/problems/number-of-matching-subsequences/",target:"_blank",rel:"noopener noreferrer"},Ga=s("792. \u5339\u914D\u5B50\u5E8F\u5217\u7684\u5355\u8BCD\u6570"),Ja=t(`<p>\u7ED9\u5B9A\u5B57\u7B26\u4E32 s \u548C\u5B57\u7B26\u4E32\u6570\u7EC4 words, \u8FD4\u56DE words[i] \u4E2D\u662Fs\u7684\u5B50\u5E8F\u5217\u7684\u5355\u8BCD\u4E2A\u6570 \u3002</p><p>\u5B57\u7B26\u4E32\u7684 \u5B50\u5E8F\u5217 \u662F\u4ECE\u539F\u59CB\u5B57\u7B26\u4E32\u4E2D\u751F\u6210\u7684\u65B0\u5B57\u7B26\u4E32\uFF0C\u53EF\u4EE5\u4ECE\u4E2D\u5220\u53BB\u4E00\u4E9B\u5B57\u7B26(\u53EF\u4EE5\u662Fnone)\uFF0C\u800C\u4E0D\u6539\u53D8\u5176\u4F59\u5B57\u7B26\u7684\u76F8\u5BF9\u987A\u5E8F\u3002</p><p>\u4F8B\u5982\uFF0C \u201Cace\u201D \u662F \u201Cabcde\u201D \u7684\u5B50\u5E8F\u5217\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: s = &quot;abcde&quot;, words = [&quot;a&quot;,&quot;bb&quot;,&quot;acd&quot;,&quot;ace&quot;] \u8F93\u51FA: 3 \u89E3\u91CA: \u6709\u4E09\u4E2A\u662F s \u7684\u5B50\u5E8F\u5217\u7684\u5355\u8BCD: &quot;a&quot;, &quot;acd&quot;, &quot;ace&quot;\u3002</p><blockquote><p>1.\u5904\u7406\u5B57\u7B26\u4E32s\uFF0C\u8BB0\u5F55\u6BCF\u4E2A\u5B57\u7B26\u51FA\u73B0\u7684\u7D22\u5F15</p><p>2.\u904D\u5386\u5B57\u7B26\u4E32</p><p>3.\u58F0\u660E s \u4E0A\u7684\u6307\u9488 i\uFF0Cword \u4E0A\u7684\u6307\u9488 j</p><p>4.\u5F97\u5230 word[j] \u5728 s \u4E2D\u7684\u7D22\u5F15\u503C</p><p>5.\u82E5 s \u6CA1\u6709\u8FD9\u4E2A word[j]\uFF0Cbreak</p><p>6.\u5BFB\u627E\u5DE6\u4FA7\u8FB9\u754C\u7684\u4E8C\u5206\u6CD5\u627E\u5230 \u6070\u597D\u6BD4 i \u5927\u7684\u7D22\u5F15</p><p>7.\u6CA1\u6709\uFF0Cbreak</p><p>8.\u79FB\u52A8\u6307\u9488 i</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">numMatchingSubseq</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> word <span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> word<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">char</span> ch <span class="token operator">=</span> word<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token function">findLeft</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                i <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> 
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> word<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findLeft</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                right <span class="token operator">=</span> mid<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> left<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-7-\u70E7\u997C\u6392\u5E8F\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-7-\u70E7\u997C\u6392\u5E8F\u7B97\u6CD5" aria-hidden="true">#</a> 2.7 \u70E7\u997C\u6392\u5E8F\u7B97\u6CD5</h3>`,8),Xa={id:"_969-\u714E\u997C\u6392\u5E8F",tabindex:"-1"},Ya=n("a",{class:"header-anchor",href:"#_969-\u714E\u997C\u6392\u5E8F","aria-hidden":"true"},"#",-1),Za=s(),$a={href:"https://leetcode.cn/problems/pancake-sorting/",target:"_blank",rel:"noopener noreferrer"},np=s("969. \u714E\u997C\u6392\u5E8F"),sp=t(`<p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 arr \uFF0C\u8BF7\u4F7F\u7528 \u714E\u997C\u7FFB\u8F6C \u5B8C\u6210\u5BF9\u6570\u7EC4\u7684\u6392\u5E8F\u3002</p><p>\u4E00\u6B21\u714E\u997C\u7FFB\u8F6C\u7684\u6267\u884C\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><p>\u9009\u62E9\u4E00\u4E2A\u6574\u6570 k \uFF0C1 &lt;= k &lt;= arr.length \u53CD\u8F6C\u5B50\u6570\u7EC4 arr[0...k-1]\uFF08\u4E0B\u6807\u4ECE 0 \u5F00\u59CB\uFF09 \u4F8B\u5982\uFF0Carr = [3,2,1,4] \uFF0C\u9009\u62E9 k = 3 \u8FDB\u884C\u4E00\u6B21\u714E\u997C\u7FFB\u8F6C\uFF0C\u53CD\u8F6C\u5B50\u6570\u7EC4 [3,2,1] \uFF0C\u5F97\u5230 arr = [1,2,3,4] \u3002</p><p>\u4EE5\u6570\u7EC4\u5F62\u5F0F\u8FD4\u56DE\u80FD\u4F7F arr \u6709\u5E8F\u7684\u714E\u997C\u7FFB\u8F6C\u64CD\u4F5C\u6240\u5BF9\u5E94\u7684 k \u503C\u5E8F\u5217\u3002\u4EFB\u4F55\u5C06\u6570\u7EC4\u6392\u5E8F\u4E14\u7FFB\u8F6C\u6B21\u6570\u5728 10 * arr.length \u8303\u56F4\u5185\u7684\u6709\u6548\u7B54\u6848\u90FD\u5C06\u88AB\u5224\u65AD\u4E3A\u6B63\u786E\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1A[3,2,4,1] \u8F93\u51FA\uFF1A[4,2,4,3] \u89E3\u91CA\uFF1A \u6211\u4EEC\u6267\u884C 4 \u6B21\u714E\u997C\u7FFB\u8F6C\uFF0Ck \u503C\u5206\u522B\u4E3A 4\uFF0C2\uFF0C4\uFF0C\u548C 3\u3002 \u521D\u59CB\u72B6\u6001 arr = [3, 2, 4, 1] \u7B2C\u4E00\u6B21\u7FFB\u8F6C\u540E\uFF08k = 4\uFF09\uFF1Aarr = [1, 4, 2, 3] \u7B2C\u4E8C\u6B21\u7FFB\u8F6C\u540E\uFF08k = 2\uFF09\uFF1Aarr = [4, 1, 2, 3] \u7B2C\u4E09\u6B21\u7FFB\u8F6C\u540E\uFF08k = 4\uFF09\uFF1Aarr = [3, 2, 1, 4] \u7B2C\u56DB\u6B21\u7FFB\u8F6C\u540E\uFF08k = 3\uFF09\uFF1Aarr = [1, 2, 3, 4]\uFF0C\u6B64\u65F6\u5DF2\u5B8C\u6210\u6392\u5E8F\u3002</p><blockquote><p>\u7F16\u5199\u9012\u5F52\u51FD\u6570 sort(arr, n) \u8868\u793A \u7FFB\u8F6C\u524D n \u4E2A\u714E\u997C</p><p>1.\u627E\u5230 n \u4E2A\u6570\u7684\u6700\u5927\u503C\u7684\u7D22\u5F15 i</p><p>2.\u7FFB\u8F6C\u524D i \u4E2A\u714E\u997C</p><p>3.\u7FFB\u8F6C\u524D n \u4E2A\u714E\u997C</p><p>4.\u7EE7\u7EED\u8C03\u7528\u9012\u5F52\u51FD\u6570</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">pancakeSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// arr \u662F\u4E00\u5806\u714E\u997C\uFF0Csort \u4F1A\u5C06\u524D n \u4E2A\u714E\u997C\u6392\u5E8F</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// base case</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u53EA\u6709\u4E00\u4E2A\u714E\u997C\uFF0C\u4E0D\u9700\u8981\u7FFB\u8F6C</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.\u627E\u5230 n \u4E2A\u6570\u7684\u6700\u5927\u503C\u7684\u7D22\u5F15 i</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>max <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                max <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                index <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> 
        <span class="token punctuation">}</span>
        <span class="token comment">// 2.\u7FFB\u8F6C\u524D i \u4E2A\u714E\u997C\uFF0C\u4E5F\u5C31\u662F\u5C06\u6700\u5927\u7684\u714E\u997C\u653E\u5728\u6700\u4E0A\u9762</span>
        <span class="token function">reverse</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7ED3\u679C\u4ECE 1 \u5F00\u59CB\uFF0C\u56E0\u6B64\u7D22\u5F15\u9700\u8981+1</span>
        <span class="token comment">// 3.\u7FFB\u8F6C\u524D n \u4E2A\u714E\u997C</span>
        <span class="token function">reverse</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.\u7EE7\u7EED\u8C03\u7528\u9012\u5F52\u51FD\u6570</span>
        <span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53CD\u8F6C\u6570\u7EC4</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> t <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
            j<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-8-\u8C01\u80FD\u60F3\u5230-\u6597\u5730\u4E3B\u4E5F\u80FD\u73A9\u51FA\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-8-\u8C01\u80FD\u60F3\u5230-\u6597\u5730\u4E3B\u4E5F\u80FD\u73A9\u51FA\u7B97\u6CD5" aria-hidden="true">#</a> 2.8 \u8C01\u80FD\u60F3\u5230\uFF0C\u6597\u5730\u4E3B\u4E5F\u80FD\u73A9\u51FA\u7B97\u6CD5</h3>`,9),ap={id:"_659-\u5206\u5272\u6570\u7EC4\u4E3A\u8FDE\u7EED\u5B50\u5E8F\u5217",tabindex:"-1"},pp=n("a",{class:"header-anchor",href:"#_659-\u5206\u5272\u6570\u7EC4\u4E3A\u8FDE\u7EED\u5B50\u5E8F\u5217","aria-hidden":"true"},"#",-1),tp=s(),op={href:"https://leetcode.cn/problems/split-array-into-consecutive-subsequences/",target:"_blank",rel:"noopener noreferrer"},ep=s("659. \u5206\u5272\u6570\u7EC4\u4E3A\u8FDE\u7EED\u5B50\u5E8F\u5217"),cp=t(`<p>\u7ED9\u4F60\u4E00\u4E2A\u6309\u5347\u5E8F\u6392\u5E8F\u7684\u6574\u6570\u6570\u7EC4 num\uFF08\u53EF\u80FD\u5305\u542B\u91CD\u590D\u6570\u5B57\uFF09\uFF0C\u8BF7\u4F60\u5C06\u5B83\u4EEC\u5206\u5272\u6210\u4E00\u4E2A\u6216\u591A\u4E2A\u957F\u5EA6\u81F3\u5C11\u4E3A 3 \u7684\u5B50\u5E8F\u5217\uFF0C\u5176\u4E2D\u6BCF\u4E2A\u5B50\u5E8F\u5217\u90FD\u7531\u8FDE\u7EED\u6574\u6570\u7EC4\u6210\u3002</p><p>\u5982\u679C\u53EF\u4EE5\u5B8C\u6210\u4E0A\u8FF0\u5206\u5272\uFF0C\u5219\u8FD4\u56DE true \uFF1B\u5426\u5219\uFF0C\u8FD4\u56DE false \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165: [1,2,3,3,4,5] \u8F93\u51FA: True \u89E3\u91CA: \u4F60\u53EF\u4EE5\u5206\u5272\u51FA\u8FD9\u6837\u4E24\u4E2A\u8FDE\u7EED\u5B50\u5E8F\u5217 : 1, 2, 3 3, 4, 5</p><blockquote><p>1.\u5224\u65AD\u81EA\u5DF1\u662F\u5426\u53EF\u4EE5\u63A5\u5230\u5176\u4ED6\u5B50\u5E8F\u5217\u7684\u540E\u9762 need[5] = 2 \u8868\u793A\u5BF9 5 \u7684\u9700\u6C42\u662F 2</p><p>2.\u4EE5\u81EA\u5DF1\u5F00\u5934\uFF0C\u6784\u6210\u4E00\u4E2A\u957F\u5EA6\u81F3\u5C11\u4E3A 3 \u7684\u5E8F\u5217 freq[1] = 2 \u8868\u793A 1 \u51FA\u73B0\u7684\u6B21\u6570\u662F 2</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPossible</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       	freq \u54C8\u5E0C\u8868\u5E2E\u52A9\u4E00\u4E2A\u5143\u7D20\u5224\u65AD\u81EA\u5DF1\u662F\u5426\u80FD\u591F\u4F5C\u4E3A\u5F00\u5934\uFF0Cneed \u54C8\u5E0C\u8868\u5E2E\u52A9\u4E00\u4E2A\u5143\u7D20\u5224\u65AD\u81EA\u5DF1\u662F\u5426\u53EF\u4EE5\u88AB\u63A5\u5230\u5176\u4ED6\u5E8F\u5217\u540E\u9762\u3002
        <span class="token comment">// \u8BB0\u5F55\u5143\u7D20\u51FA\u73B0\u7684\u4E2A\u6570</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> freq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BB0\u5F55\u5BF9\u5143\u7D20\u7684\u9700\u6C42</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> need <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u5316 freq</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            freq<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> freq<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>freq<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8BE5\u5143\u7D20\u5DF2\u7ECF\u51FA\u73B0\u5728\u5176\u4ED6\u7684\u5B50\u5E8F\u5217\u4E2D</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> 
            <span class="token keyword">if</span> <span class="token punctuation">(</span>need<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> need<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u53EF\u4EE5\u63A5\u5230\u5176\u4ED6\u5B50\u5E8F\u5217\u7684\u540E\u9762</span>
                freq<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> freq<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                need<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> need<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// num + 1 \u7684\u9700\u6C42+1</span>
                need<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> need<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>freq<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> freq<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> freq<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5F53\u524D\u5143\u7D20\u81EA\u6210\u4E00\u6D3E</span>
                freq<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> freq<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                freq<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> freq<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                freq<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> freq<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// num + 3 \u7684\u9700\u6C42+1</span>
                need<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">,</span> need<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E24\u79CD\u60C5\u51B5\u90FD\u4E0D\u7B26\u5408</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u6570\u5B66\u8FD0\u7B97\u6280\u5DE7" tabindex="-1"><a class="header-anchor" href="#_3-\u6570\u5B66\u8FD0\u7B97\u6280\u5DE7" aria-hidden="true">#</a> 3.\u6570\u5B66\u8FD0\u7B97\u6280\u5DE7</h2><h3 id="_3-1-\u5E38\u7528\u7684\u4F4D\u8FD0\u7B97" tabindex="-1"><a class="header-anchor" href="#_3-1-\u5E38\u7528\u7684\u4F4D\u8FD0\u7B97" aria-hidden="true">#</a> 3.1 \u5E38\u7528\u7684\u4F4D\u8FD0\u7B97</h3><p><strong>\u603B\u7ED3\uFF1A</strong></p><ul><li><code>n &amp; (n-1)</code> \u8FD9\u4E2A\u64CD\u4F5C\u662F\u7B97\u6CD5\u4E2D\u5E38\u89C1\u7684\uFF0C\u4F5C\u7528\u662F\u6D88\u9664\u6570\u5B57 <code>n</code> \u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D\u7684\u6700\u540E\u4E00\u4E2A 1\u3002</li><li>\u4E00\u4E2A\u6570\u548C\u5B83\u672C\u8EAB\u505A\u5F02\u6216\u8FD0\u7B97\u7ED3\u679C\u4E3A 0\uFF0C\u5373 <code>a ^ a = 0</code>\uFF1B\u4E00\u4E2A\u6570\u548C 0 \u505A\u5F02\u6216\u8FD0\u7B97\u7684\u7ED3\u679C\u4E3A\u5B83\u672C\u8EAB\uFF0C\u5373 <code>a ^ 0 = a</code>\u3002</li></ul>`,10),lp={id:"_191-\u4F4D1\u7684\u4E2A\u6570",tabindex:"-1"},ip=n("a",{class:"header-anchor",href:"#_191-\u4F4D1\u7684\u4E2A\u6570","aria-hidden":"true"},"#",-1),up=s(),kp={href:"https://leetcode.cn/problems/number-of-1-bits/description/",target:"_blank",rel:"noopener noreferrer"},rp=s("191. \u4F4D1\u7684\u4E2A\u6570"),dp=t(`<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/image-20221104104852951.png" alt="image-20221104104852951"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token comment">// you need to treat n as an unsigned value</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hammingWeight</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u53EF\u4EE5\u6D88\u9664 num \u4E8C\u8FDB\u5236\u8868\u793A\u4E2D\u7684\u6700\u540E\u4E00\u4E2A1</span>
            n <span class="token operator">=</span> n <span class="token operator">&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),mp={id:"_231-2-\u7684\u5E42",tabindex:"-1"},vp=n("a",{class:"header-anchor",href:"#_231-2-\u7684\u5E42","aria-hidden":"true"},"#",-1),bp=s(),gp={href:"https://leetcode.cn/problems/power-of-two/description/",target:"_blank",rel:"noopener noreferrer"},hp=s("231. 2 \u7684\u5E42"),wp=t(`<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/image-20221104105201044.png" alt="image-20221104105201044"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPowerOfTwo</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5148\u6392\u9664\u4E0D\u662F\u7684\u60C5\u51B5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token comment">// 1 -&gt; 0001</span>
        <span class="token comment">// 2 -&gt; 0010</span>
        <span class="token comment">// 4 -&gt; 0100</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>n <span class="token operator">&amp;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),yp={id:"_136-\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57",tabindex:"-1"},fp=n("a",{class:"header-anchor",href:"#_136-\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57","aria-hidden":"true"},"#",-1),_p=s(),jp={href:"https://leetcode.cn/problems/single-number/",target:"_blank",rel:"noopener noreferrer"},qp=s("136. \u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57"),xp=t(`<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/image-20221104103906380.png" alt="image-20221104103906380"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">singleNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">// \u5F02\u6216\u8FD0\u7B97\uFF0C\u6210\u5BF9\u7684\u6570\u5B57\u5F02\u6216\u4E3A0\uFF0C\u843D\u5355\u7684\u6570\u5B57\u4E0E0\u5F02\u6216\u8FD8\u662F\u5B83\u672C\u4E8B</span>
       <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
       <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> n <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           res <span class="token operator">^=</span> n<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Lp={id:"_268-\u4E22\u5931\u7684\u6570\u5B57",tabindex:"-1"},Sp=n("a",{class:"header-anchor",href:"#_268-\u4E22\u5931\u7684\u6570\u5B57","aria-hidden":"true"},"#",-1),Ip=s(),Ap={href:"https://leetcode.cn/problems/missing-number/",target:"_blank",rel:"noopener noreferrer"},Mp=s("268. \u4E22\u5931\u7684\u6570\u5B57"),Np=t(`<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/image-20221104104003381.png" alt="image-20221104104003381"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">missingNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u6210\u5BF9\u7684\u5143\u7D20\u5F02\u6216\u4E3A0\uFF0C\u843D\u5355\u7684\u5143\u7D20\u4E0E0\u5F02\u6216\u8FD8\u662F\u5F53\u524D\u7684\u5143\u7D20</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res <span class="token operator">^=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res <span class="token operator">^=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-\u5982\u4F55\u540C\u65F6\u5BFB\u627E\u7F3A\u5931\u548C\u91CD\u590D\u7684\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_3-2-\u5982\u4F55\u540C\u65F6\u5BFB\u627E\u7F3A\u5931\u548C\u91CD\u590D\u7684\u5143\u7D20" aria-hidden="true">#</a> 3.2 \u5982\u4F55\u540C\u65F6\u5BFB\u627E\u7F3A\u5931\u548C\u91CD\u590D\u7684\u5143\u7D20</h3>`,3),zp={id:"_645-\u9519\u8BEF\u7684\u96C6\u5408",tabindex:"-1"},Bp=n("a",{class:"header-anchor",href:"#_645-\u9519\u8BEF\u7684\u96C6\u5408","aria-hidden":"true"},"#",-1),Tp=s(),Cp={href:"https://leetcode.cn/problems/set-mismatch/",target:"_blank",rel:"noopener noreferrer"},Dp=s("645. \u9519\u8BEF\u7684\u96C6\u5408"),Op=t(`<p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/2541/image-20221124162239138.png" alt="image-20221124162239138"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">findErrorNums</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7D22\u5F15\u4E0E\u503C\u8FDB\u884C\u6620\u5C04</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> dup <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u96C6\u5408\u4ECE 1 \u5F00\u59CB</span>
            <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u91CD\u590D\u5143\u7D20</span>
                dup <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> miss <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6B63\u6570\uFF0C\u8BF4\u660E\u5F53\u524D\u7D22\u5F15\u5C31\u662F\u7F3A\u5931\u7684\u5143\u7D20</span>
                <span class="token comment">// \u5C06\u7D22\u5F15\u8F6C\u6362\u4E3A\u5143\u7D20\uFF0C\u5143\u7D20\u4ECE 1 \u5F00\u59CB</span>
                miss <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>dup<span class="token punctuation">,</span> miss<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function Vp(Hp,Qp){const a=l("ExternalLinkIcon");return e(),c("div",null,[u,n("h4",k,[r,d,n("a",m,[v,p(a)])]),b,n("h4",g,[h,w,n("a",y,[f,p(a)])]),_,n("h4",j,[q,x,n("a",L,[S,p(a)])]),I,n("h4",A,[M,N,n("a",z,[B,p(a)])]),T,n("h4",C,[D,O,n("a",V,[H,p(a)])]),Q,n("h4",W,[E,F,n("a",P,[K,p(a)])]),R,n("h4",U,[G,J,n("a",X,[Y,p(a)])]),Z,n("h4",$,[nn,sn,n("a",an,[pn,p(a)])]),tn,n("h4",on,[en,cn,n("a",ln,[un,p(a)])]),kn,n("h4",rn,[dn,mn,n("a",vn,[bn,p(a)])]),gn,n("h4",hn,[wn,yn,n("a",fn,[_n,p(a)])]),jn,n("h4",qn,[xn,Ln,n("a",Sn,[In,p(a)])]),An,n("h4",Mn,[Nn,zn,n("a",Bn,[Tn,p(a)])]),Cn,Dn,On,Vn,n("p",null,[Hn,n("a",Qn,[Wn,p(a)]),En]),Fn,n("h4",Pn,[Kn,Rn,n("a",Un,[Gn,p(a)])]),Jn,n("h4",Xn,[Yn,Zn,n("a",$n,[ns,p(a)])]),ss,n("h4",as,[ps,ts,n("a",os,[es,p(a)])]),cs,n("h4",ls,[is,us,n("a",ks,[rs,p(a)])]),ds,n("h4",ms,[vs,bs,n("a",gs,[hs,p(a)])]),ws,n("h4",ys,[fs,_s,n("a",js,[qs,p(a)])]),xs,n("h4",Ls,[Ss,Is,n("a",As,[Ms,p(a)])]),Ns,n("h4",zs,[Bs,Ts,n("a",Cs,[Ds,p(a)])]),Os,n("h4",Vs,[Hs,Qs,n("a",Ws,[Es,p(a)])]),Fs,n("h4",Ps,[Ks,Rs,n("a",Us,[Gs,p(a)])]),Js,n("h4",Xs,[Ys,Zs,n("a",$s,[na,p(a)])]),sa,n("h4",aa,[pa,ta,n("a",oa,[ea,p(a)])]),ca,n("h4",la,[ia,ua,n("a",ka,[ra,p(a)])]),da,n("h4",ma,[va,ba,n("a",ga,[ha,p(a)])]),wa,n("h4",ya,[fa,_a,n("a",ja,[qa,p(a)])]),xa,n("h4",La,[Sa,Ia,n("a",Aa,[Ma,p(a)])]),Na,n("h4",za,[Ba,Ta,n("a",Ca,[Da,p(a)])]),Oa,n("h4",Va,[Ha,Qa,n("a",Wa,[Ea,p(a)])]),Fa,n("h4",Pa,[Ka,Ra,n("a",Ua,[Ga,p(a)])]),Ja,n("h4",Xa,[Ya,Za,n("a",$a,[np,p(a)])]),sp,n("h4",ap,[pp,tp,n("a",op,[ep,p(a)])]),cp,n("h4",lp,[ip,up,n("a",kp,[rp,p(a)])]),dp,n("h4",mp,[vp,bp,n("a",gp,[hp,p(a)])]),wp,n("h4",yp,[fp,_p,n("a",jp,[qp,p(a)])]),xp,n("h4",Lp,[Sp,Ip,n("a",Ap,[Mp,p(a)])]),Np,n("h4",zp,[Bp,Tp,n("a",Cp,[Dp,p(a)])]),Op])}var Fp=o(i,[["render",Vp],["__file","algorithm03.html.vue"]]);export{Fp as default};
